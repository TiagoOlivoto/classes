[
  {
    "objectID": "00_about.html",
    "href": "00_about.html",
    "title": "Informações",
    "section": "",
    "text": "1  Software and instalation\n Download do R\n Download do RStudio\n\n\n\n2  Professor\n\n\n\n\n\n3  Useful packages\nÉ sugerido instalar os seguintes pacotes\n\nlibrary(tidyverse)  # manipulação de dados\nlibrary(metan)      # estatísticas descritivas\nlibrary(rio)        # importação/exportação de dados\nlibrary(emmeans)    # comparação de médias\nlibrary(AgroR)      # casualização e ANOVA\n\n\n4  Licença\nEstilo <img alt=“Licença Creative Commons” =“border-width:0” src=“https://raw.githubusercontent.com/TiagoOlivoto/tiagoolivoto/master/static/img/gemsr/license.jpg” width=“300” height=“214” />< /a>Este conteúdo está licenciado sob uma Creative Commons - Atribuição-NãoComercial- CompartilhaIgual 4.0 Internacional. O resumo de licença legível afirma que você tem o direito de:\n Compartilhe — copie e redistribua o material em qualquer meio ou formato\nAdapt — remixar, transformar e construir sobre o material\nAtribuição — Você deve dar o crédito apropriado, fornecer um link para a licença e indicar se foram feitas alterações. Você deve fazê-lo sob quaisquer circunstâncias razoáveis, mas de forma alguma que sugira que o licenciante endossa você ou seu uso.\nDe acordo com os seguintes termos\n\nNão comercial — Você não pode usar o material para fins comerciais.\nShareAlike — Se você remixar, transformar ou desenvolver o material, deverá distribuir suas contribuições sob a mesma licença do original.\nSem restrições adicionais — Você não pode aplicar termos legais ou medidas tecnológicas que restrinjam legalmente outras pessoas de fazer qualquer coisa que a licença permita.\n\n5  Selo Democratizando o Conhecimento\nO selo Democratizando Conhecimento (DC) é uma ideia criada pelo Prof. Ben Dêivid, e é utilizado aqui para que o acesso de todo esse material seja livre e que todo o material possa ser utilizado.\nO selo DC é compatível com a licença Creative Commons CC BY NC SA 4.0\n\n\n\nSource Code\n---\ntitle: \"Informações\"\n---\n\n\n# <i class=\"fas fa-laptop-code\"></i> Software and instalation\n\n<a class=\"btn btn-success\" href=\"https://cran.r-project.org/bin/windows/base/\" target=\"_blank\"><i class=\"fa fa-save\"></i> Download do R</a>\n\n\n<a class=\"btn btn-success\" href=\"https://www.rstudio.com/products/rstudio/download/\" target=\"_blank\"><i class=\"fa fa-save\"></i> Download do RStudio</a>\n\n\n<iframe width=\"940\" height=\"530\" src=\"https://www.youtube.com/embed/e89kyYJgWqc\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\n\n# <i class=\"fas fa-chalkboard-teacher\"></i> Professor\n\n[![](imgs/site.png)](https://olivoto.netlify.app/){target=\"_blank\"}\n\n\n\n# <i class=\"fas fa-box-open\"></i> Useful packages\n\nÉ sugerido instalar os seguintes pacotes\n\n```{r warning=FALSE, message = FALSE}\nlibrary(tidyverse)  # manipulação de dados\nlibrary(metan)      # estatísticas descritivas\nlibrary(rio)        # importação/exportação de dados\nlibrary(emmeans)    # comparação de médias\nlibrary(AgroR)      # casualização e ANOVA\n```\n\n\n\n\n# <i class=\"fab fa-creative-commons\"></i> Licença\n\n  Estilo <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\" target=\"_blank\" rel=\"noopener\"><img alt=\"Licença Creative Commons\" =\"border-width:0\" src=\"https://raw.githubusercontent.com/TiagoOlivoto/tiagoolivoto/master/static/img/gemsr/license.jpg\" width=\"300\" height=\"214\" />< /a><br />Este conteúdo está licenciado sob uma <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">Creative Commons - Atribuição-NãoComercial- CompartilhaIgual 4.0 Internacional</a>. O resumo de licença legível afirma que você tem o direito de:\n\n\n\n<i class=\"fas fa-check\"></i> **Compartilhe** — copie e redistribua o material em qualquer meio ou formato\n\n<i class=\"fas fa-check\"></i>**Adapt** — remixar, transformar e construir sobre o material\n\n<i class=\"fas fa-check\"></i>**Atribuição** — Você deve dar o crédito apropriado, fornecer um link para a licença e indicar se foram feitas alterações. Você deve fazê-lo sob quaisquer circunstâncias razoáveis, mas de forma alguma que sugira que o licenciante endossa você ou seu uso.\n\n<i class=\"fas fa-check\"></i>**De acordo com os seguintes termos**\n\n* **Não comercial** — Você não pode usar o material para fins comerciais.\n\n* **ShareAlike** — Se você remixar, transformar ou desenvolver o material, deverá distribuir suas contribuições sob a mesma licença do original.\n\n* **Sem restrições adicionais** — Você não pode aplicar termos legais ou medidas tecnológicas que restrinjam legalmente outras pessoas de fazer qualquer coisa que a licença permita.\n\n\n# <i class=\"fab fa-creative-commons\"></i> Selo Democratizando o Conhecimento\n\nO [selo Democratizando Conhecimento](https://bendeivide.github.io/dc/) (DC) é uma ideia criada pelo Prof. [Ben Dêivid](https://bendeivide.github.io/), e é utilizado aqui para que o acesso de todo esse material seja livre e que todo o material possa ser utilizado.\n\nO selo DC é compatível com a licença [Creative Commons CC BY NC SA 4.0](http://creativecommons.org/licenses/by-nc-sa/4.0/)"
  },
  {
    "objectID": "AGRCLI/AGRCLI_01_TEMP.html",
    "href": "AGRCLI/AGRCLI_01_TEMP.html",
    "title": "Temperatura do ar",
    "section": "",
    "text": "1 Pacotes\n\nlibrary(tidyverse)  # manipulação de dados\nlibrary(metan)\nlibrary(rio)        # importação/exportação de dados\n\n# gerar tabelas html\nprint_tbl <- function(table, digits = 3, n = NULL, ...){\n  if(!missing(n)){\n    knitr::kable(head(table, n = n), booktabs = TRUE, digits = digits, ...)\n  } else{\n  knitr::kable(table, booktabs = TRUE, digits = digits, ...)\n  }\n}\n\n\n2 Temperaturas médias mensais\n\nclima <- import(\"https://bit.ly/inmet_fred_2020\")\n\n\nclima_medias <-\nclima %>%\n  means_by(MES) %>% \n  select(MES, TEMP_MAX, TEMP_MIN) %>% \n  pivot_longer(-MES)\n\nprint_tbl(clima_medias, n = 20)\n\n\n\nMES\nname\nvalue\n\n\n\n1\nTEMP_MAX\n24.652\n\n\n1\nTEMP_MIN\n23.570\n\n\n2\nTEMP_MAX\n23.566\n\n\n2\nTEMP_MIN\n22.430\n\n\n3\nTEMP_MAX\n24.154\n\n\n3\nTEMP_MIN\n22.897\n\n\n4\nTEMP_MAX\n19.245\n\n\n4\nTEMP_MIN\n18.177\n\n\n5\nTEMP_MAX\n15.781\n\n\n5\nTEMP_MIN\n14.804\n\n\n6\nTEMP_MAX\n16.535\n\n\n6\nTEMP_MIN\n15.862\n\n\n7\nTEMP_MAX\n14.779\n\n\n7\nTEMP_MIN\n13.957\n\n\n8\nTEMP_MAX\n17.579\n\n\n8\nTEMP_MIN\n16.603\n\n\n9\nTEMP_MAX\n19.930\n\n\n9\nTEMP_MIN\n18.962\n\n\n10\nTEMP_MAX\n22.469\n\n\n10\nTEMP_MIN\n21.358\n\n\n\n\n\n\n\n# confeccionar gráfico\nggplot(clima_medias, aes(factor(MES), value, color = name, group = name )) +\n  geom_point() + \n  geom_line() + \n  scale_color_manual(values = c(\"red\", \"blue\"),\n                       labels = c(\"Temperatura máxima (ºC)\",\n                                  \"Temperatura mínima (ºC)\"),\n                       guide = \"legend\") +\n  theme(panel.grid.minor = element_blank(),\n        legend.position = \"bottom\",\n        legend.title = element_blank(),\n        axis.title = element_text(size = 12),\n        axis.text = element_text(size = 12)) + \n  labs(title = \"Temperatura média mensal em 2020\",\n       subtitle = \"Estação INMET - UFSM-FW\",\n       caption = \"Elaboração: Prof. Tiago Olivoto\",\n       x = \"Mês do ano\",\n       y = \"Temperatura (ºC)\")\n\n\n\n\n\n3 Temperaturas em dois dias\n\ndf_dias <- \n  clima %>% \n  select(DATA, HORA, TEMP_INST) %>% \n  subset(DATA %in% c(\"01/01/2020\", \"21/06/2020\"))\n\n\nggplot(df_dias, aes(HORA, TEMP_INST, color = factor(DATA), group = DATA)) + \n  stat_summary(geom = \"point\", \n               fun = mean) +\n  stat_summary(geom = \"line\") + \n  stat_summary(geom = \"errorbar\", width = 0.5) +\n  theme(panel.grid.minor = element_blank(),\n        legend.position = \"bottom\",\n        legend.title = element_blank(),\n        axis.title = element_text(size = 12),\n        axis.text = element_text(size = 12)) + \n  scale_x_continuous(breaks = seq(0,24, by = 2)) + \n  labs(title = \"Temperatura horária em dois dias do ano\",\n       subtitle = \"Estação INMET - UFSM-FW\",\n       caption = \"Elaboração - Olivoto 2021\",\n       x = \"Hora do dia\",\n       y = \"Temperatura (ºC)\")\n\nNo summary function supplied, defaulting to `mean_se()`\nNo summary function supplied, defaulting to `mean_se()`\n\n\n\n\n\n\n4 Temperaturas máximas e mínimas\n\nclima_max_min <-\n  clima %>%\n  group_by(MES) %>% \n  summarise(max = max(TEMP_MAX, na.rm = TRUE),\n            min = min(TEMP_MIN, na.rm = TRUE),\n            mean = mean(TEMP_INST, na.rm = TRUE)) %>% \n  select(MES, max, min, mean) %>% \n  pivot_longer(-MES)\n\nprint_tbl(clima_max_min, n = 20)\n\n\n\nMES\nname\nvalue\n\n\n\n1\nmax\n34.200\n\n\n1\nmin\n14.000\n\n\n1\nmean\n24.085\n\n\n2\nmax\n33.400\n\n\n2\nmin\n10.900\n\n\n2\nmean\n22.992\n\n\n3\nmax\n35.400\n\n\n3\nmin\n14.200\n\n\n3\nmean\n23.523\n\n\n4\nmax\n32.600\n\n\n4\nmin\n5.900\n\n\n4\nmean\n18.705\n\n\n5\nmax\n27.800\n\n\n5\nmin\n4.700\n\n\n5\nmean\n15.289\n\n\n6\nmax\n27.600\n\n\n6\nmin\n5.000\n\n\n6\nmean\n16.199\n\n\n7\nmax\n27.500\n\n\n7\nmin\n-0.100\n\n\n\n\n\n\nggplot(clima_max_min, aes(factor(MES), value, color = name, group = name )) +\n  geom_point() + \n  geom_line() + \n  scale_color_manual(values = c(\"red\", \"green\", \"blue\"),\n                     labels = c(\"Temperatura máxima (ºC)\",\n                                \"Temperatura média (ºC)\",\n                                \"Temperatura mínima (ºC)\"),\n                     guide = \"legend\") + \n  theme(panel.grid.minor = element_blank(),\n        legend.position = \"bottom\",\n        legend.title = element_blank(),\n        axis.title = element_text(size = 12),\n        axis.text = element_text(size = 12)) + \n  labs(title = \"Temperaturas máximas, médias e mínimas em 2020\",\n       subtitle = \"Estação INMET - UFSM-FW\",\n       caption = \"Elaboração: Prof. Tiago Olivoto\",\n       x = \"Mês do ano\",\n       y = \"Temperatura (ºC)\")\n\n\n\n\n\n\n\nSource Code\n---\ntitle: \"Temperatura do ar\"\n---\n\n# Pacotes\n```{r collapse = TRUE, message=FALSE, warning=FALSE}\nlibrary(tidyverse)  # manipulação de dados\nlibrary(metan)\nlibrary(rio)        # importação/exportação de dados\n\n# gerar tabelas html\nprint_tbl <- function(table, digits = 3, n = NULL, ...){\n  if(!missing(n)){\n    knitr::kable(head(table, n = n), booktabs = TRUE, digits = digits, ...)\n  } else{\n  knitr::kable(table, booktabs = TRUE, digits = digits, ...)\n  }\n}\n```\n\n\n# Temperaturas médias mensais\n\n```{r collapse = TRUE, message=FALSE, warning=FALSE}\nclima <- import(\"https://bit.ly/inmet_fred_2020\")\n\n\nclima_medias <-\nclima %>%\n  means_by(MES) %>% \n  select(MES, TEMP_MAX, TEMP_MIN) %>% \n  pivot_longer(-MES)\n\nprint_tbl(clima_medias, n = 20)\n\n\n\n# confeccionar gráfico\nggplot(clima_medias, aes(factor(MES), value, color = name, group = name )) +\n  geom_point() + \n  geom_line() + \n  scale_color_manual(values = c(\"red\", \"blue\"),\n                       labels = c(\"Temperatura máxima (ºC)\",\n                                  \"Temperatura mínima (ºC)\"),\n                       guide = \"legend\") +\n  theme(panel.grid.minor = element_blank(),\n        legend.position = \"bottom\",\n        legend.title = element_blank(),\n        axis.title = element_text(size = 12),\n        axis.text = element_text(size = 12)) + \n  labs(title = \"Temperatura média mensal em 2020\",\n       subtitle = \"Estação INMET - UFSM-FW\",\n       caption = \"Elaboração: Prof. Tiago Olivoto\",\n       x = \"Mês do ano\",\n       y = \"Temperatura (ºC)\")\n\n\n```\n\n\n\n\n# Temperaturas em dois dias\n```{r}\ndf_dias <- \n  clima %>% \n  select(DATA, HORA, TEMP_INST) %>% \n  subset(DATA %in% c(\"01/01/2020\", \"21/06/2020\"))\n\n\nggplot(df_dias, aes(HORA, TEMP_INST, color = factor(DATA), group = DATA)) + \n  stat_summary(geom = \"point\", \n               fun = mean) +\n  stat_summary(geom = \"line\") + \n  stat_summary(geom = \"errorbar\", width = 0.5) +\n  theme(panel.grid.minor = element_blank(),\n        legend.position = \"bottom\",\n        legend.title = element_blank(),\n        axis.title = element_text(size = 12),\n        axis.text = element_text(size = 12)) + \n  scale_x_continuous(breaks = seq(0,24, by = 2)) + \n  labs(title = \"Temperatura horária em dois dias do ano\",\n       subtitle = \"Estação INMET - UFSM-FW\",\n       caption = \"Elaboração - Olivoto 2021\",\n       x = \"Hora do dia\",\n       y = \"Temperatura (ºC)\")\n\n```\n\n\n\n# Temperaturas máximas e mínimas\n\n```{r collapse = TRUE, message=FALSE, warning=FALSE}\nclima_max_min <-\n  clima %>%\n  group_by(MES) %>% \n  summarise(max = max(TEMP_MAX, na.rm = TRUE),\n            min = min(TEMP_MIN, na.rm = TRUE),\n            mean = mean(TEMP_INST, na.rm = TRUE)) %>% \n  select(MES, max, min, mean) %>% \n  pivot_longer(-MES)\n\nprint_tbl(clima_max_min, n = 20)\n\n\nggplot(clima_max_min, aes(factor(MES), value, color = name, group = name )) +\n  geom_point() + \n  geom_line() + \n  scale_color_manual(values = c(\"red\", \"green\", \"blue\"),\n                     labels = c(\"Temperatura máxima (ºC)\",\n                                \"Temperatura média (ºC)\",\n                                \"Temperatura mínima (ºC)\"),\n                     guide = \"legend\") + \n  theme(panel.grid.minor = element_blank(),\n        legend.position = \"bottom\",\n        legend.title = element_blank(),\n        axis.title = element_text(size = 12),\n        axis.text = element_text(size = 12)) + \n  labs(title = \"Temperaturas máximas, médias e mínimas em 2020\",\n       subtitle = \"Estação INMET - UFSM-FW\",\n       caption = \"Elaboração: Prof. Tiago Olivoto\",\n       x = \"Mês do ano\",\n       y = \"Temperatura (ºC)\")\n```"
  },
  {
    "objectID": "AGRCLI/AGRCLI_02_VENTO.html",
    "href": "AGRCLI/AGRCLI_02_VENTO.html",
    "title": "Vento",
    "section": "",
    "text": "1 Pacotes\n\nlibrary(tidyverse)  # manipulação de dados\nlibrary(metan)\nlibrary(ggradar)    # gráfico de radar\nlibrary(rio)        # importação/exportação de dados\n\n# gerar tabelas html\nprint_tbl <- function(table, digits = 3, n = NULL, ...){\n  if(!missing(n)){\n    knitr::kable(head(table, n = n), booktabs = TRUE, digits = digits, ...)\n  } else{\n  knitr::kable(table, booktabs = TRUE, digits = digits, ...)\n  }\n}\n\n\n2 Velocidade média do vento\n\nclima <- import(\"https://bit.ly/inmet_fred_2020\")\n\n\nclima_long <-\nclima %>%\n  select(MES, VEL_VE, RAJ_VE) %>% \n  pivot_longer(-MES)\n\nprint_tbl(clima_long, n = 20)\n\n\n\nMES\nname\nvalue\n\n\n\n1\nVEL_VE\n0.0\n\n\n1\nRAJ_VE\n2.2\n\n\n1\nVEL_VE\n0.0\n\n\n1\nRAJ_VE\n0.5\n\n\n1\nVEL_VE\n0.0\n\n\n1\nRAJ_VE\n0.0\n\n\n1\nVEL_VE\n0.0\n\n\n1\nRAJ_VE\n0.0\n\n\n1\nVEL_VE\n0.0\n\n\n1\nRAJ_VE\n0.0\n\n\n1\nVEL_VE\n0.1\n\n\n1\nRAJ_VE\n0.8\n\n\n1\nVEL_VE\n0.5\n\n\n1\nRAJ_VE\n1.1\n\n\n1\nVEL_VE\n0.3\n\n\n1\nRAJ_VE\n1.8\n\n\n1\nVEL_VE\n1.5\n\n\n1\nRAJ_VE\n2.7\n\n\n1\nVEL_VE\n1.5\n\n\n1\nRAJ_VE\n3.7\n\n\n\n\n\n\n\n# confeccionar gráfico\nggplot(clima_long, aes(factor(MES), value, color = name, group = name )) +\n  stat_summary(geom = \"point\", \n               fun = mean) +\n  stat_summary(geom = \"line\") + \n  stat_summary(geom = \"errorbar\", width = 0.1) +\n  scale_color_manual(values = c(\"red\", \"blue\"),\n                       labels = c(\"Rajada (m/s)\",\n                                  \"Velocidade do vento (m/s)\"),\n                       guide = \"legend\") +\n  theme(panel.grid.minor = element_blank(),\n        legend.position = \"bottom\",\n        legend.title = element_blank(),\n        axis.title = element_text(size = 12),\n        axis.text = element_text(size = 12)) + \n  labs(title = \"Velocidade média mensal do vento em 2020\",\n       subtitle = \"Estação INMET - UFSM-FW\",\n       caption = \"Elaboração: Prof. Tiago Olivoto\",\n       x = \"Mês do ano\",\n       y = \"Velocidade (m/s)\")\n\n\n\n\n\n3 Velocidades máximas e mínimas - rajada\n\nvento_max_min <-\n  clima %>%\n  group_by(MES) %>% \n  summarise(max = max(RAJ_VE, na.rm = TRUE),\n            mean = mean(RAJ_VE, na.rm = TRUE),\n            min = min(RAJ_VE, na.rm = TRUE)) %>% \n  select(MES, max, min, mean) %>% \n  pivot_longer(-MES)\n\nprint_tbl(vento_max_min, n = 20)\n\n\n\nMES\nname\nvalue\n\n\n\n1\nmax\n19.700\n\n\n1\nmin\n0.000\n\n\n1\nmean\n4.743\n\n\n2\nmax\n12.900\n\n\n2\nmin\n0.000\n\n\n2\nmean\n4.561\n\n\n3\nmax\n10.300\n\n\n3\nmin\n0.000\n\n\n3\nmean\n3.944\n\n\n4\nmax\n14.400\n\n\n4\nmin\n0.000\n\n\n4\nmean\n3.948\n\n\n5\nmax\n14.000\n\n\n5\nmin\n0.000\n\n\n5\nmean\n3.612\n\n\n6\nmax\n13.700\n\n\n6\nmin\n0.000\n\n\n6\nmean\n4.649\n\n\n7\nmax\n15.000\n\n\n7\nmin\n0.000\n\n\n\n\n\n\nggplot(vento_max_min, aes(factor(MES), value, color = name, group = name )) +\n  geom_point() + \n  geom_line() + \n  scale_color_manual(values = c(\"red\", \"green\", \"blue\"),\n                     labels = c(\"Velocidade máxima (m/s)\",\n                                \"Velocidade média (m/s)\",\n                                \"Velocidade mínima (m/s)\"),\n                     guide = \"legend\") + \n  theme(panel.grid.minor = element_blank(),\n        legend.position = \"bottom\",\n        legend.title = element_blank(),\n        axis.title = element_text(size = 12),\n        axis.text = element_text(size = 12)) + \n  labs(title = \"Médias mensais de rajadas de vento em 2020\",\n       subtitle = \"Estação INMET - UFSM-FW\",\n       caption = \"Elaboração: Prof. Tiago Olivoto\",\n       x = \"Mês do ano\",\n       y = \"Velocidade (m/s)\")\n\n\n\n\n\n4 Direção do vento\n\nfreq <- \n  cut(clima$DIR_VE, breaks = seq(0, 360, by = 45)) %>% \n  table() %>% \n  as.data.frame() %>% \n  set_names(\"Direção\", \"Dias\") %>% \n  mutate(Direção = paste0(seq(0, 315, by = 45)),\n         Percent = Dias / 8784 * 100) %>% \n  remove_cols(Dias)\n\nprint_tbl(freq)\n\n\n\nDireção\nPercent\n\n\n\n0\n10.997\n\n\n45\n12.341\n\n\n90\n14.857\n\n\n135\n27.607\n\n\n180\n10.041\n\n\n225\n4.542\n\n\n270\n6.125\n\n\n315\n13.286\n\n\n\n\n \n\n# criar um radar plot para mostrar a direção predominante\n# do vento\nggradar(freq %>% transpose_df(),\n        values.radar = c(\"0%\", \"0%\", \"27.6%\"),\n        grid.max = max(freq$Percent))\n\n\n\n\n\n\n\nSource Code\n---\ntitle: \"Vento\"\n---\n\n\n# Pacotes\n```{r collapse = TRUE, message=FALSE, warning=FALSE}\nlibrary(tidyverse)  # manipulação de dados\nlibrary(metan)\nlibrary(ggradar)    # gráfico de radar\nlibrary(rio)        # importação/exportação de dados\n\n# gerar tabelas html\nprint_tbl <- function(table, digits = 3, n = NULL, ...){\n  if(!missing(n)){\n    knitr::kable(head(table, n = n), booktabs = TRUE, digits = digits, ...)\n  } else{\n  knitr::kable(table, booktabs = TRUE, digits = digits, ...)\n  }\n}\n```\n\n\n# Velocidade média do vento \n\n```{r collapse = TRUE, message=FALSE, warning=FALSE}\nclima <- import(\"https://bit.ly/inmet_fred_2020\")\n\n\nclima_long <-\nclima %>%\n  select(MES, VEL_VE, RAJ_VE) %>% \n  pivot_longer(-MES)\n\nprint_tbl(clima_long, n = 20)\n\n\n\n# confeccionar gráfico\nggplot(clima_long, aes(factor(MES), value, color = name, group = name )) +\n  stat_summary(geom = \"point\", \n               fun = mean) +\n  stat_summary(geom = \"line\") + \n  stat_summary(geom = \"errorbar\", width = 0.1) +\n  scale_color_manual(values = c(\"red\", \"blue\"),\n                       labels = c(\"Rajada (m/s)\",\n                                  \"Velocidade do vento (m/s)\"),\n                       guide = \"legend\") +\n  theme(panel.grid.minor = element_blank(),\n        legend.position = \"bottom\",\n        legend.title = element_blank(),\n        axis.title = element_text(size = 12),\n        axis.text = element_text(size = 12)) + \n  labs(title = \"Velocidade média mensal do vento em 2020\",\n       subtitle = \"Estação INMET - UFSM-FW\",\n       caption = \"Elaboração: Prof. Tiago Olivoto\",\n       x = \"Mês do ano\",\n       y = \"Velocidade (m/s)\")\n\n\n```\n\n\n\n# Velocidades máximas e mínimas - rajada\n\n```{r collapse = TRUE, message=FALSE, warning=FALSE}\nvento_max_min <-\n  clima %>%\n  group_by(MES) %>% \n  summarise(max = max(RAJ_VE, na.rm = TRUE),\n            mean = mean(RAJ_VE, na.rm = TRUE),\n            min = min(RAJ_VE, na.rm = TRUE)) %>% \n  select(MES, max, min, mean) %>% \n  pivot_longer(-MES)\n\nprint_tbl(vento_max_min, n = 20)\n\n\nggplot(vento_max_min, aes(factor(MES), value, color = name, group = name )) +\n  geom_point() + \n  geom_line() + \n  scale_color_manual(values = c(\"red\", \"green\", \"blue\"),\n                     labels = c(\"Velocidade máxima (m/s)\",\n                                \"Velocidade média (m/s)\",\n                                \"Velocidade mínima (m/s)\"),\n                     guide = \"legend\") + \n  theme(panel.grid.minor = element_blank(),\n        legend.position = \"bottom\",\n        legend.title = element_blank(),\n        axis.title = element_text(size = 12),\n        axis.text = element_text(size = 12)) + \n  labs(title = \"Médias mensais de rajadas de vento em 2020\",\n       subtitle = \"Estação INMET - UFSM-FW\",\n       caption = \"Elaboração: Prof. Tiago Olivoto\",\n       x = \"Mês do ano\",\n       y = \"Velocidade (m/s)\")\n\n```\n\n\n\n# Direção do vento\n```{r collapse = TRUE, message=FALSE, warning=FALSE}\nfreq <- \n  cut(clima$DIR_VE, breaks = seq(0, 360, by = 45)) %>% \n  table() %>% \n  as.data.frame() %>% \n  set_names(\"Direção\", \"Dias\") %>% \n  mutate(Direção = paste0(seq(0, 315, by = 45)),\n         Percent = Dias / 8784 * 100) %>% \n  remove_cols(Dias)\n\nprint_tbl(freq)\n \n\n# criar um radar plot para mostrar a direção predominante\n# do vento\nggradar(freq %>% transpose_df(),\n        values.radar = c(\"0%\", \"0%\", \"27.6%\"),\n        grid.max = max(freq$Percent))\n\n\n```"
  },
  {
    "objectID": "AGRCLI/AGRCLI_0_ABOUT.html",
    "href": "AGRCLI/AGRCLI_0_ABOUT.html",
    "title": "Sobre",
    "section": "",
    "text": "Este material apresenta os scripts e gráficos confeccionados com o software R, que servem de apoio para as disciplinas de Agroclimatologia e Meteorologia e Climatologia, ofertadas pelo Departamento de Ciências Agronômicas e Ambientais da Universidade Federal de Santa Maria, Campus Frederico Westphalen - RS\n\n1  Pacotes necessários\n\nlibrary(tidyverse)  # manipulação de dados\nlibrary(metan)\nlibrary(rio)        # importação/exportação de dados\n\n\n2  Conjuntos de dados\n\nO conjunto de dados em formato .csv formam obtidos do site do Instituto Nacional de Meteorologia - INMET. O arquivo apresenta dados horários do ano de 2020, obtidos na Estação Automática FREDERICO WESTPHALEN (A854), totalizando 8784 observações. Os dados são importados diretamente no software R com ::: {.cell}\nclima <- import(\"https://bit.ly/inmet_fred_2020\")\n# Primeiras 5 linhas\nknitr::kable(head(clima, n = 5), booktabs = TRUE, digits = 3)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDATA\nDIA\nMES\nHORA\nTEMP_INST\nTEMP_MAX\nTEMP_MIN\nUM_INST\nUM_MAX\nUM_MIN\nORV_INST\nORV_MAX\nORV_MIN\nPRESS_INST\nPRESS_MAX\nPRESS_MIN\nVEL_VE\nDIR_VE\nRAJ_VE\nRADIAC\nPRECIP\n\n\n\n01/01/2020\n1\n1\n1\n21.5\n22.0\n21.5\n94\n94\n92\n20.6\n20.9\n20.3\n952.8\n952.8\n952.7\n0\n216\n2.2\nNA\n0\n\n\n01/01/2020\n1\n1\n2\n21.0\n21.5\n21.0\n95\n95\n94\n20.2\n20.5\n20.2\n952.2\n952.8\n952.2\n0\n194\n0.5\nNA\n0\n\n\n01/01/2020\n1\n1\n3\n20.8\n21.0\n20.7\n96\n96\n95\n20.1\n20.2\n19.9\n951.6\n952.2\n951.5\n0\n194\n0.0\nNA\n0\n\n\n01/01/2020\n1\n1\n4\n20.8\n21.0\n20.8\n96\n96\n96\n20.0\n20.3\n20.0\n951.6\n951.7\n951.5\n0\n180\n0.0\nNA\n0\n\n\n01/01/2020\n1\n1\n5\n21.1\n21.2\n20.8\n96\n96\n96\n20.3\n20.5\n20.0\n951.8\n951.9\n951.6\n0\n186\n0.0\nNA\n0\n\n\n\n\n:::\n\nDATA: A data do ano.\nDIA: O dia do mês.\nMÊS: O mes do ano.\nHORA: A hora do dia.\nTEMP_INST, TEMP_MAX, TEMP_MIN: Temperaturas (ºC) instantâneas, máximas e mínimas, respectivamente.\nUM_INST, UM_MAX, UM_MIN: Umidade do ar (%) instantâneas, máximas e mínimas, respectivamente.\nORV_INST, ORV_MAX, ORV_MIN: Ponto de orvalho (ºC) instantâneas, máximas e mínimas, respectivamente.\nPRESS_INST, PRESS_MAX, PRESS_MIN: Temperaturas instantâneas, máximas e mínimas, respectivamente.\nVEL_VE, DIR_VE, RAJ_VE: Velocidade (m s\\(^{-1}\\)), direção (º) e rajada (m s\\(^-1\\)).\nRADIAC: Radiação (KJ m\\(^{-2}\\))\nPRECIP: Precipitação pluviometrica (mm).\n\n  Download inmet_fred_2020.csv \n  Download inmet_fred_2020.xlsx \n\nO segundo conjunto de dados inmet_pf_2020 apresenta dados da Estação Convencional de Passo Fundo totalizando 984 observações. Os dados são importados diretamente no software R com ::: {.cell}\nclima_pf <- import(\"https://bit.ly/inmet_pf_2020\")\n# Primeiras 5 linhas\nknitr::kable(head(clima_pf, n = 5), booktabs = TRUE, digits = 3)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDATA\nHORA\nPREC\nP_EST\nTBS\nTBU\nES_TS\nES_TU\nE\nURA\nDELTA_E\nTPO\nUA\nUS\nR\nQ\n\n\n\n01/01/2020\n0\n13.4\n932.2\n21.6\n21.0\n25.800\n24.869\n24.383\n94.506\n1.417\n18.420\n17.927\n18.969\n0.017\n0.016\n\n\n01/01/2020\n12\n0.0\n930.8\n23.1\n21.8\n28.263\n26.117\n25.064\n88.682\n3.199\n18.787\n18.335\n20.675\n0.017\n0.017\n\n\n01/01/2020\n18\n2.5\n929.6\n24.6\n21.4\n30.929\n25.486\n22.894\n74.022\n8.035\n17.582\n16.663\n22.511\n0.016\n0.016\n\n\n02/01/2020\n0\n6.7\n931.6\n22.7\n21.7\n27.587\n25.958\n25.148\n91.160\n2.439\n18.832\n18.421\n20.208\n0.017\n0.017\n\n\n02/01/2020\n12\n0.0\n934.4\n19.5\n18.4\n22.668\n21.164\n20.273\n89.435\n2.395\n15.964\n15.012\n16.786\n0.014\n0.014\n\n\n\n\n:::\nDATA HORA PREC P_EST TBS TBU ES_TS ES_TU E URA DELTA_E TPO UA US R Q\n\nDATA: A data do ano.\nHORA: A hora do dia.\nPREC: Precipitação pluviometrica (mm).\nP_EST: Pressão atmosférica na estação (hPa)\nTBS e TBU: Temperatura em bulbo seco e úmido, respectivamente (ºC)\nES_TS e * ES_TU: Pressão de saturação na temperatura de bulbo seco e úmido, respectivamente (hPa)\nE: Pressão real do vapor d’água (hPa)\nURA: Umidade relativa do ar (%)\nDELTA_E: Déficit de saturação (hPa)\nTPO: Temperatura no ponto de orvalho (ºC)\nUA e US: Umidade absoluta e Umidade de saturação (g de vapor por m\\({-3}\\) de ar úmido)\nR: Razão de mistura (g vapor / g ar seco)\nQ: Umidade específica (g vapor / g ar úmido)\n\n  Download inmet_pf_2020.csv \n  Download inmet_pf_2020.xlsx \n\n\n\nSource Code\n---\ntitle: \"Sobre\"\n---\n\nEste material apresenta os scripts e gráficos confeccionados com o software R, que servem de apoio para as disciplinas de Agroclimatologia e Meteorologia e Climatologia, ofertadas pelo Departamento de Ciências Agronômicas e Ambientais da Universidade Federal de Santa Maria, Campus Frederico Westphalen - RS\n\n\n\n\n# <i class=\"fas fa-box-open\"></i> Pacotes necessários\n\n```{r warning=FALSE, message = FALSE}\nlibrary(tidyverse)  # manipulação de dados\nlibrary(metan)\nlibrary(rio)        # importação/exportação de dados\n```\n\n\n# <i class=\"fas fa-database\"></i> Conjuntos de dados\n\n---------------------------------\n\n\nO conjunto de dados em formato `.csv` formam obtidos do site do [Instituto Nacional de Meteorologia](https://tempo.inmet.gov.br/TabelaEstacoes/A001) - INMET. O arquivo apresenta dados horários do ano de 2020, obtidos na Estação Automática FREDERICO WESTPHALEN (A854), totalizando 8784 observações. Os dados são importados diretamente no software R com\n```{r}\nclima <- import(\"https://bit.ly/inmet_fred_2020\")\n# Primeiras 5 linhas\nknitr::kable(head(clima, n = 5), booktabs = TRUE, digits = 3)\n```\n\n\n* DATA: A data do ano.\n* DIA: O dia do mês.\n* MÊS: O mes do ano.\n* HORA: A hora do dia.\n* TEMP_INST,    TEMP_MAX,   TEMP_MIN: Temperaturas (ºC) instantâneas, máximas e mínimas, respectivamente.\n* UM_INST,  UM_MAX, UM_MIN: Umidade do ar (%) instantâneas, máximas e mínimas, respectivamente.\n* ORV_INST, ORV_MAX,    ORV_MIN: Ponto de orvalho (ºC) instantâneas, máximas e mínimas, respectivamente.\n* PRESS_INST,   PRESS_MAX,  PRESS_MIN: Temperaturas instantâneas, máximas e mínimas, respectivamente.\n* VEL_VE,   DIR_VE, RAJ_VE: Velocidade (m s\\\\(^{-1}\\\\)), direção (º) e rajada (m s\\\\(^-1\\\\)).\n* RADIAC: Radiação (KJ m\\\\(^{-2}\\\\))\n* PRECIP: Precipitação pluviometrica (mm).\n\n<a href=\"https://bit.ly/inmet_fred_2020\" target=\"_blank\" rel=\"noopener\">\n  <button class=\"btn btn-success\"><i class=\"fa fa-save\"></i> Download inmet_fred_2020.csv</button>\n</a>\n\n\n<a href=\"http://bit.ly/inmet_fred_2020_xlsx\" target=\"_blank\" rel=\"noopener\">\n  <button class=\"btn btn-success\"><i class=\"fa fa-save\"></i> Download inmet_fred_2020.xlsx</button>\n</a>\n\n\n------------------------------------------\n\n\n\nO segundo conjunto de dados `inmet_pf_2020` apresenta dados da [Estação Convencional de Passo Fundo](https://bdmep.inmet.gov.br/) totalizando 984 observações. Os dados são importados diretamente no software R com\n```{r}\nclima_pf <- import(\"https://bit.ly/inmet_pf_2020\")\n# Primeiras 5 linhas\nknitr::kable(head(clima_pf, n = 5), booktabs = TRUE, digits = 3)\n```\n\nDATA    HORA    PREC    P_EST   TBS TBU ES_TS   ES_TU   E   URA DELTA_E TPO UA  US  R   Q\n\n\n\n* DATA: A data do ano.\n* HORA: A hora do dia.\n* PREC: Precipitação pluviometrica (mm).\n* P_EST: Pressão atmosférica na estação (hPa)\n* TBS e TBU: Temperatura em bulbo seco e úmido, respectivamente (ºC)\n* ES_TS e   * ES_TU: Pressão de saturação na temperatura de bulbo seco e úmido, respectivamente (hPa)\n* E: Pressão real do vapor d’água (hPa)\n* URA: Umidade relativa do ar (%)\n* DELTA_E: Déficit de saturação (hPa)\n* TPO: Temperatura no ponto de orvalho (ºC)\n* UA e US: Umidade absoluta e Umidade de saturação (g de vapor por m\\\\({-3}\\\\) de ar úmido)\n* R: Razão de mistura (g vapor / g ar seco)\n* Q: Umidade específica (g vapor / g ar úmido)\n\n\n<a href=\"https://bit.ly/inmet_pf_2020\" target=\"_blank\" rel=\"noopener\">\n  <button class=\"btn btn-success\"><i class=\"fa fa-save\"></i> Download inmet_pf_2020.csv</button>\n</a>\n\n\n<a href=\"http://bit.ly/inmet_pf_2020_xlsx\" target=\"_blank\" rel=\"noopener\">\n  <button class=\"btn btn-success\"><i class=\"fa fa-save\"></i> Download inmet_pf_2020.xlsx</button>\n</a>"
  },
  {
    "objectID": "FIT5306/FIT5306_00_ABOUT.html",
    "href": "FIT5306/FIT5306_00_ABOUT.html",
    "title": "Sobre",
    "section": "",
    "text": "1  Pacotes necessários\n\nlibrary(tidyverse)  # manipulação de dados\nlibrary(metan)      # estatísticas descritivas\nlibrary(rio)        # importação/exportação de dados\nlibrary(emmeans)    # comparação de médias\nlibrary(AgroR)      # casualização e ANOVA\n\n\n2  Conjuntos de dados\n\nO conjunto de dados dados_biost_exp.xlsx contém dados que podem ser utilizados para aplicação prática dos conteúdos trabalhados na disciplina. O arquivo contém as seguintes planilhas:\n\nREG_DATA: dados sem repetição (hipotéticos) do RG observados em diferentes doses de Nitrogênio.\nREG_ANALISE: Análise de regressão linear de primeiro grau dos dados REG_DATA.\nREG_DEL_DATA: dados com repetições do rendimento de grãos observados em diferentes doses de Nitrogênio.\nREG_DEL_ANALISE: Análise de regressão dos dados REG_DEL_DATA.\nREG_PRATICA: dados referente a uma amostra de tamanho n = 11, na qual se aplicou CO2 em diferentes concentrações em folhas de trigo (X). A quantidade de C02 absorvida (Y) em cm3 / dm2 / hora foi avaliada. Esse exemplo foi apresentado por Ferreira (2009)[^1].\nREG_PRATICA_ANALISE: Análise de regressão dos dados REG_PRATICA.\nCOR_DATA_DENSIDADE: Dois métodos de mensurar a densidade média da madeira (g /cm$^3$) em Eucalyptus grandis foram aplicados a uma amostra de n = 13 árvores. O primeiro método (X) é determinado utilizando um paquímetro e uma sonda Pressler de 0,5 cm na região da árvore determinada no diâmetro à altura do peito (DAP). A segunda, variável (Y) também foi mensurada no DAP utilizando cortes transversais no tronco. Esse exemplo foi apresentado por Ferreira (2009)[^1].\nCORRELACAO_DATA: dados de altura de planta (AP) e altura da espiga (AE) observados em 10 plantas de milho.\nCORRELACAO_ANALISE: Análise de correlação para os dados CORRELACAO_DATA.\nCOBERTURA_N_MASSA: dados de um experimento bifatorial com dois níveis de nitrogênio (com e sem) e quatro níveis de plantas de cobertura (aveia preta, centeio, triticale e pousio), conduzido em um DBC com quatro repetições. Foram avaliados a matéria verde (MV) e matéria seca (MS) das plantas, bem como a matéria seca de raiz (MSR).\nCOBERTURA_N_SOJA: Com os mesmos tratamentos apresentados em COBERTURA_N_MASSA, o experimento avaliou caracteres morfológicos e o rendimento de grãos de soja cultivada na resteva das respectivas coberturas de solo. Foram avaliados o número de legumes por planta (NL), número de grãos por legume (NGL), massa de mil grãos (MMG) e o rendimento de grãos (RG).\n\n\nOs dados COBERTURA_N_MASSA e COBERTURA_N_SOJA foram obtidos em um trabalho conduzido em grupo no Centro Universitário Unideau, tendo como participantes os alunos Bernardo Pinheiro Busatta, Tiago Jonatan Fochesatto, Diogo Andre Ody, Gustavo Peretti e Paulo Sérgio Trevisol.\n\n\nDIC-DBC: dados de área foliar (AF) e matéria seca de planta (MST) de plantas de chicória avaliadas em diferentes níveis de radiação solar (50%, 70% e 100%). O experimento foi conduzido em delineamento de blocos completos casualizados, com quatro repetições.\nEFEITOS: Os efeitos de tratamento e erro (delineamento inteiramente casualizado) para os dados da planilha DIC-DBC.\nDIC-DBC-ANOVA: análise de variância nos delineamentos DIC e DBC, para efeitos de comparação, dos dados da planilha DIC-DBC.\nQUALI: Dados do rendimento de grãos (RG) de 10 híbridos de milho avaliados em um delineamento de blocos completos casualizados, com quatro repetições.\nQUANTI_LINEAR: Dados do rendimento de grãos (RG) de um híbrido de milho sob diferentes doses de nitrogênio, avaliados em um delineamento de blocos completos casualizados, com quatro repetições. O conjunto apresenta um comportamento linear.\nQUANTI_LINEAR: Dados do rendimento de grãos (RG) de um híbrido de milho sob diferentes doses de nitrogênio, avaliados em um delineamento de blocos completos casualizados, com quatro repetições. O conjunto apresenta um comportamento linear.\nQUANTI_QUADRÁTICA: Dados do rendimento de grãos (RG) de um híbrido de milho sob diferentes doses de nitrogênio, avaliados em um delineamento de blocos completos casualizados, com quatro repetições. O conjunto apresenta um comportamento quadrático.\nmaize: Dados de um ensaio multi-ambientes onde 13 híbridos de milho foram avaliados em quatro localidades, sendo que em cada localidade um delineamento de blocos completos casualizados com três repetições foi utilizado. São apresentados dados de sete caracteres quantitativos avaliados em cinco plantas aleatoriamente escolhidas em cada parcela.\n\nAs seguintes planilhas contém dados de experimentos bifatoriais com diferentes combinações de fatores qualitativos e quantitativos na presença de interação significativa e não significativa. Em todos os exemplos, é utilizado o delineamento de blocos completos casualizados. Os cinco conjuntos de dados serão detalhados a seguir.\n\n\nFAT1_SI: Fator 1 qualitativo (fontes de nitrogênio), com três níveis; Fator 2 qualitativo (híbridos), com três níveis, com interação significativa.\n\nFAT1_CI: Fator 1 qualitativo (dias de avaliação), com três níveis; Fator 2 qualitativo (radiação solar), com três níveis, sem interação significativa.\n\nFAT2_SI: Fator 1 qualitativo (híbridos), com dois níveis; Fator 2 quantitativo (doses de N), com cinco níveis, sem interação significativa.\n\nFAT2_CI: Fator 1 qualitativo (híbridos), com dois níveis; Fator 2 quantitativo (doses de N), com cinco níveis, com interação significativa.\n\nFAT3: Fator 1 quantitativo (doses de N), com quatro níveis; Fator 2 quantitativo (doses de K), com cinco níveis, com interação significativa.\n\nPlanilhas específicas podem ser baixadas diretamente no software R, utilizando o argumento sheet da função import() do pacote rio.\n\nurl <- \"http://bit.ly/df_biostat_exp\"\ndf_biostat <- import(url, sheet = \"DIC-DBC\")\nglimpse(df_biostat)\n\nRows: 12\nColumns: 5\n$ RAD   <dbl> 50, 50, 50, 50, 70, 70, 70, 70, 100, 100, 100, 100\n$ REP   <dbl> 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4\n$ AF_M2 <dbl> 5.02, 3.65, 3.93, 4.71, 6.12, 5.61, 5.11, 4.98, 5.46, 5.55, 5.72…\n$ AF    <dbl> 5016.429, 3648.359, 3925.333, 4705.269, 6118.425, 5614.233, 5109…\n$ MST   <dbl> 12.30785, 10.73315, 10.86140, 10.97850, 15.75180, 13.30495, 13.8…\n\n\nPara baixar o arquivo .xlsx, utilize o botão abaixo.\n  Download dados_biost_exp.xlsx \n\n\n\nSource Code\n---\ntitle: \"Sobre\"\n---\n\n# <i class=\"fas fa-box-open\"></i> Pacotes necessários\n\n```{r warning=FALSE, message = FALSE}\nlibrary(tidyverse)  # manipulação de dados\nlibrary(metan)      # estatísticas descritivas\nlibrary(rio)        # importação/exportação de dados\nlibrary(emmeans)    # comparação de médias\nlibrary(AgroR)      # casualização e ANOVA\n```\n\n\n# <i class=\"fas fa-database\"></i> Conjuntos de dados\n\n---------------------------------\n\nO conjunto de dados `dados_biost_exp.xlsx` contém dados que podem ser utilizados para aplicação prática dos conteúdos trabalhados na disciplina. O arquivo contém as seguintes planilhas:\n\n* `REG_DATA`: dados sem repetição (**hipotéticos**) do RG observados em diferentes doses de Nitrogênio.\n* `REG_ANALISE`: Análise de regressão linear de primeiro grau dos dados `REG_DATA`.\n* `REG_DEL_DATA`: dados com repetições do rendimento de grãos observados em diferentes doses de Nitrogênio.\n* `REG_DEL_ANALISE`: Análise de regressão dos dados `REG_DEL_DATA`.\n* `REG_PRATICA`: dados referente a uma amostra de tamanho n = 11, na qual se aplicou CO2 em diferentes concentrações em folhas de trigo (X). A quantidade de C02 absorvida (Y) em cm3 / dm2 / hora foi avaliada. Esse exemplo foi apresentado por Ferreira (2009)[^1].\n* `REG_PRATICA_ANALISE`: Análise de regressão dos dados `REG_PRATICA`.\n* `COR_DATA_DENSIDADE`: Dois métodos de mensurar a densidade média da madeira (g /cm\\$^3\\$) em *Eucalyptus grandis* foram aplicados a uma amostra de n = 13 árvores. O primeiro método (X) é determinado utilizando um paquímetro e uma sonda Pressler de 0,5 cm na região da árvore determinada no diâmetro à altura do peito (DAP). A segunda, variável (Y) também foi mensurada no DAP utilizando cortes transversais no tronco. Esse exemplo foi apresentado por Ferreira (2009)[^1].\n* `CORRELACAO_DATA`: dados de altura de planta (AP) e altura da espiga (AE) observados em 10 plantas de milho.\n* `CORRELACAO_ANALISE`: Análise de correlação para os dados `CORRELACAO_DATA`.\n\n* `COBERTURA_N_MASSA`: dados de um experimento bifatorial com dois níveis de nitrogênio (com e sem) e quatro níveis de plantas de cobertura (aveia preta, centeio, triticale e pousio), conduzido em um DBC com quatro repetições. Foram avaliados a matéria verde (MV) e matéria seca (MS) das plantas, bem como a matéria seca de raiz (MSR).\n\n* `COBERTURA_N_SOJA`: Com os mesmos tratamentos apresentados em `COBERTURA_N_MASSA`, o experimento avaliou caracteres morfológicos e o rendimento de grãos de soja cultivada na resteva das respectivas coberturas de solo. Foram avaliados o número de legumes por planta (NL), número de grãos por legume (NGL), massa de mil grãos (MMG) e o rendimento de grãos (RG).\n\n\n> Os dados `COBERTURA_N_MASSA` e `COBERTURA_N_SOJA` foram obtidos em um trabalho conduzido em grupo no Centro Universitário Unideau, tendo como participantes os alunos Bernardo Pinheiro Busatta, Tiago Jonatan Fochesatto, Diogo Andre Ody, Gustavo Peretti e Paulo Sérgio Trevisol.\n\n* `DIC-DBC`: dados de área foliar (AF) e matéria seca de planta (MST) de plantas de chicória avaliadas em diferentes níveis de radiação solar (50%, 70% e 100%). O experimento foi conduzido em delineamento de blocos completos casualizados, com quatro repetições.\n\n* `EFEITOS`: Os efeitos de tratamento e erro (delineamento inteiramente casualizado) para os dados da planilha `DIC-DBC`.\n\n* `DIC-DBC-ANOVA`: análise de variância nos delineamentos DIC e DBC, para efeitos de comparação, dos dados da planilha `DIC-DBC`.\n\n* `QUALI`: Dados do rendimento de grãos (RG) de 10 híbridos de milho avaliados em um delineamento de blocos completos casualizados, com quatro repetições.\n\n* `QUANTI_LINEAR`:  Dados do rendimento de grãos (RG) de um híbrido de milho sob diferentes doses de nitrogênio, avaliados em um delineamento de blocos completos casualizados, com quatro repetições. O conjunto apresenta um comportamento linear.\n\n* `QUANTI_LINEAR`:  Dados do rendimento de grãos (RG) de um híbrido de milho sob diferentes doses de nitrogênio, avaliados em um delineamento de blocos completos casualizados, com quatro repetições. O conjunto apresenta um comportamento linear.\n\n* `QUANTI_QUADRÁTICA`:  Dados do rendimento de grãos (RG) de um híbrido de milho sob diferentes doses de nitrogênio, avaliados em um delineamento de blocos completos casualizados, com quatro repetições. O conjunto apresenta um comportamento quadrático.\n\n* `maize`: Dados de um ensaio multi-ambientes onde 13 híbridos de milho foram avaliados em quatro localidades, sendo que em cada localidade um delineamento de blocos completos casualizados com três repetições foi utilizado. São apresentados dados de sete caracteres quantitativos avaliados em cinco plantas aleatoriamente escolhidas em cada parcela.\n\n\nAs seguintes planilhas contém dados de experimentos bifatoriais com diferentes combinações de fatores qualitativos e quantitativos na presença de interação significativa e não significativa. Em todos os exemplos, é utilizado o delineamento de blocos completos casualizados. Os cinco conjuntos de dados serão detalhados a seguir.\n\n* `FAT1_SI`: Fator 1 **qualitativo** (fontes de nitrogênio), com três níveis; Fator 2 **qualitativo** (híbridos), com três níveis, **com interação significativa**.\n* `FAT1_CI`: Fator 1 **qualitativo** (dias de avaliação), com três níveis; Fator 2 **qualitativo** (radiação solar), com três níveis, **sem interação significativa**. \n* `FAT2_SI`: Fator 1 **qualitativo** (híbridos), com dois níveis; Fator 2 **quantitativo** (doses de N), com cinco níveis, **sem interação significativa**.\n* `FAT2_CI`: Fator 1 **qualitativo** (híbridos), com dois níveis; Fator 2 **quantitativo** (doses de N), com cinco níveis, **com interação significativa**.\n* `FAT3`: Fator 1 **quantitativo** (doses de N), com quatro níveis; Fator 2 **quantitativo** (doses de K), com cinco níveis, **com interação significativa**.\n\n\nPlanilhas específicas podem ser baixadas diretamente no software R, utilizando o argumento `sheet` da função `import()` do pacote `rio`.\n\n```{r}\nurl <- \"http://bit.ly/df_biostat_exp\"\ndf_biostat <- import(url, sheet = \"DIC-DBC\")\nglimpse(df_biostat)\n```\n\nPara baixar o arquivo `.xlsx`, utilize o botão abaixo.\n\n<a href=\"http://bit.ly/df_biostat_exp\" target=\"_blank\" rel=\"noopener\">\n  <button class=\"btn btn-success\"><i class=\"fa fa-save\"></i> Download dados_biost_exp.xlsx</button>\n</a>"
  },
  {
    "objectID": "FIT5306/FIT5306_01_DESC.html#amplitude",
    "href": "FIT5306/FIT5306_01_DESC.html#amplitude",
    "title": "Estatística Descritiva",
    "section": "\n4.1 Amplitude",
    "text": "4.1 Amplitude\nA primeira medida de dispersão que definiremos é a amplitude ou amplitude total, denotada por \\(A_p = X_{(max)} - X_{(min)}\\), onde \\(X_{(max)}\\) e \\(X_{(min)}\\) são os valores máximos e mínimos do conjunto de dados, respectivamente. Os valores extremos podem ser encontrados com a função range().\n\n(extremos <- range(altura))\n\n[1] 245 280\n\n(amplitude <- extremos[2] - extremos[1])\n\n[1] 35"
  },
  {
    "objectID": "FIT5306/FIT5306_01_DESC.html#desvios-médios",
    "href": "FIT5306/FIT5306_01_DESC.html#desvios-médios",
    "title": "Estatística Descritiva",
    "section": "\n4.2 Desvios médios",
    "text": "4.2 Desvios médios\nConsiderando uma amostra \\(X_1\\), \\(X_2\\), \\(X_n\\), de uma população \\(X_1\\), \\(X_2\\), \\(X_N\\) de tamanho \\(n\\) e \\(N\\), a soma dos desvios é dada por\n\\[\nDM  = \\sum_{i = 1}^{n} \\left(X_i - \\bar{X} \\right)\n\\]\nPara calcularmos os desvios, basta utilizar o operador - no R. ::: {.cell}\n(desvios <- altura - media)\n\n[1] -16.2 -11.2   7.8  18.8   0.8\n\n:::\nPara expressar estes desvios, vamos construir um gráfico utilizando o pacote ggplot2.\n\ndf <- data.frame(pessoa = paste(\"Planta\", 1:5),\n                 altura = altura,\n                 altura_media = media,\n                 desvio = desvios)\n\nggplot(df, aes(x = altura, y = pessoa)) +\n  geom_point(color = \"blue\",\n             size = 3) +\n  geom_segment(aes(x = media,\n                   xend = altura,\n                   y = pessoa,\n                   yend = pessoa)) +\n  geom_vline(xintercept = media, linetype = 2, color = \"red\") +\n  geom_text(aes(x = altura, y = pessoa, label = round(desvio, digits = 3),\n                hjust = ifelse(desvio < 0, 1.5, -0.5))) +\n  scale_x_continuous(limits = c(230, 300)) + \n  theme(panel.grid.minor = element_blank()) +\n  labs(x = \"Altura da planta (cm)\",\n       y = \"Planta\")\n\n\n\n\nA expressão anterior resulta em \\[\nDM  = \\sum_{i = 1}^{n} \\left(X_i - \\bar{X} \\right) = 0\n\\] ::: {.cell}\nsum(desvios) |> round()\n\n[1] 0\n\n:::\nIsso significa que essa medida não traz ganho algum a descrição dos dados, porque os desvios positivos anulam-se com os desvios negativos no somatório. Para isso, podemos contornar essa situação inserindo uma função modular nessa medida anterior, e criar o módulo do desvio. Assim, o desvio médio é dado por:\n\\[\nS_{|\\bar{X}|} = \\frac{\\sum_{i = 1}^{n} \\left|X_i - \\bar{X} \\right|}{n}\n\\]\n\n# soma dos desvios em módulo\n(somadesv <- desvios |> abs() |> sum())\n\n[1] 54.8\n\n# desvio médio\nsomadesv / 5\n\n[1] 10.96"
  },
  {
    "objectID": "FIT5306/FIT5306_01_DESC.html#variância",
    "href": "FIT5306/FIT5306_01_DESC.html#variância",
    "title": "Estatística Descritiva",
    "section": "\n4.3 Variância",
    "text": "4.3 Variância\nUtilizando uma função quadrática na medida surge uma outra medida de variabilidade que é a soma de quadrados. A soma de quadrados apresenta uma outra informação interessante que é penalizar as observações quanto mais estiver distante do valor central. Assim, quando elevamos ao quadrado um alto desvio, esse valor se torna maior ainda, mas quando elevamos ao quadrado um desvio pequeno, esse valor não cresce tanto. Com isso, conseguimos compreender quais os dados que estão mais dispersos em torno da média. Ao dividir a soma de quadrados por \\(n-1\\) temos o estimador da variância amostral (\\(S^2\\)), dado por:\n\\[\nS^2 = \\frac{\\sum_{i = 1}^{n} \\left(X_i - \\bar X_i \\right)^2}{n-1}\n\\]\n\n# Desvios ao quadrado\n(desvq <- desvios ^ 2)\n\n[1] 262.44 125.44  60.84 353.44   0.64\n\n# soma dos desvios ao quadrado\n(somadesvq <- sum(desvq))\n\n[1] 802.8\n\n# divisão por n - 1\n(var_altura <- somadesvq / 4)\n\n[1] 200.7\n\n\nAnteriormente, vimos o passo a passo para o cálculo da variância amostral. No R, a função var() pode ser utilizada para este fim.\n\nvar(altura)\n\n[1] 200.7"
  },
  {
    "objectID": "FIT5306/FIT5306_01_DESC.html#desvio-padrão",
    "href": "FIT5306/FIT5306_01_DESC.html#desvio-padrão",
    "title": "Estatística Descritiva",
    "section": "\n4.4 Desvio padrão",
    "text": "4.4 Desvio padrão\nA variância, como medida de dispersão, apresenta sua unidade ao quadrado da unidade da variável em estudo. Em outras palavras, que se tivermos usando uma variável na escala de centímetros (ex., algura), a dispersão dada pela variância estará na escala de área (cm\\(^2\\)). Isso se torna difícil a percepção de dispersão quando observamos os dados. Para contornar isso, utilizamos o desvio padrão, que é a raíz quadrada da variância, dado por\n\\[\nS = \\sqrt{S^2}\n\\]\nPara o exemplo acima, computamos o desvio padrão extraíndo a raíz de var_altura, ou, como para a variância, utilizando uma função específica do R para isso: sd() (de standard deviation).\n\n(desv_altura <- sqrt(var_altura))\n\n[1] 14.16686\n\n# utilizando a função sd()\nsd(altura)\n\n[1] 14.16686"
  },
  {
    "objectID": "FIT5306/FIT5306_01_DESC.html#coeficiente-de-variação",
    "href": "FIT5306/FIT5306_01_DESC.html#coeficiente-de-variação",
    "title": "Estatística Descritiva",
    "section": "\n4.5 Coeficiente de variação",
    "text": "4.5 Coeficiente de variação\nAs medidas de variabilidade tais como a variância e desvio padrão, são conhecidas como medidas de dispersão absoluta. Isto significa que elas serão diretamente influenciadas pela magnitude da variável. Vamos tomar como motivação, os valores em altura, tomados em cm. Consideremos que estes dados são transformados para metros, por tanto, cada observação será dividida por 100. Observe abaixo o resultado do desvio padrão da mesma variável, mas com escala diferente.\n\n(altura_m <- altura / 100)\n\n[1] 2.45 2.50 2.69 2.80 2.62\n\n(desv_altura_m <- sd(altura_m))\n\n[1] 0.1416686\n\n\nPara contornar este problema, podemos utilizar uma medida relativa de variabilidade chamada de Coeficiente de Variação (CV). Este pode ser usada para comparar a variabilidade entre quaisquer grupo de dados, independentemente da sua escala. O coeficiente de variação é definido por:\n\\[\nCV = \\frac{S}{\\bar{X}} \\times 100\n\\]\n\n# coeficiente de variação da variável em centímetros\n(cv_altura <- desv_altura / media * 100)\n\n[1] 5.423761\n\n# coeficiente de variação da variável em metros\n(cv_altura2 <- desv_altura_m / mean(altura_m) * 100)\n\n[1] 5.423761\n\n\nNão existe no R base uma função para computar o coeficiente de variação, então vamos criá-la utilizando a abordagem function().\n\nCV <- function(dados){\n  if(!class(dados) == \"numeric\"){\n    stop(\"Os dados precisam ser numéricos\")\n  } #Indica que os dados devem ser numéricos\n  media <- mean(dados)\n  sd <- sd(dados)\n  CV <- (sd/media) * 100\n  return(CV) # Valor que será retornado pela função\n}\n\nCV(altura)\n\n[1] 5.423761"
  },
  {
    "objectID": "FIT5306/FIT5306_01_DESC.html#erro-padrão-da-média",
    "href": "FIT5306/FIT5306_01_DESC.html#erro-padrão-da-média",
    "title": "Estatística Descritiva",
    "section": "\n4.6 Erro padrão da média",
    "text": "4.6 Erro padrão da média\nO erro padrão da média é a estimativa do desvio padrão de sua distribuição amostral. O desvio padrão visto anteriormente reflete a variabilidade de cada observação em torno da média amostral. Já o erro padrão da média, representa a variabilidade de cada média amostral de todas amostra possíveis, em relação a média populacional. Sua estimativa é dada por:\n\\[\nS_{\\bar{X}}  = \\frac{S}{\\sqrt{n}}\n\\]\nÉ fácil observar que à medida que \\(n \\to N\\), isto é, à medida que\\(n\\) aumenta, a média amostral (\\(\\bar X\\)) tende a média populacional (\\(\\mu\\)). Isso significa que a média amostral é mais precisa porque se aproxima cada vez mais da média populacional. Para os dados em altura, o erro padrão da média é calculado com:\n\n(epm <- desv_altura / sqrt(5))\n\n[1] 6.335614"
  },
  {
    "objectID": "FIT5306/FIT5306_01_DESC.html#exemplo-da-altura-de-planta",
    "href": "FIT5306/FIT5306_01_DESC.html#exemplo-da-altura-de-planta",
    "title": "Estatística Descritiva",
    "section": "\n5.1 Exemplo da altura de planta",
    "text": "5.1 Exemplo da altura de planta\nPara calcular todas as estatísticas de uma só vez, podemos usar desc_stat() do pacote metan. Esta função pode ser usada para calcular medidas de tendência central, posição e dispersão. Por padrão (stats = \"main\"), sete estatísticas (coeficiente de variação, máximo, média, mediana, mínimo, desvio padrão da amostra, erro padrão e intervalo de confiança da média) são calculadas. Outros valores permitidos são \"all\" para mostrar todas as estatísticas, \"robust\" para mostrar estatísticas robustas, \"quantile\" para mostrar estatísticas quantílicas ou escolher uma (ou mais) estatísticas usando um vetor separado por vírgula com os nomes das estatísticas, por exemplo, stats = c(\"mean, cv\"). Também podemos usar hist = TRUE para criar um histograma para cada variável. Para mais detalhes consulte este material.\n\nlibrary(metan)\ndesc_stat(altura, stats = \"all\") |> as.data.frame()\n\n  variable av.dev    ci.t    ci.z     cv    gmean    hmean iqr    kurt     mad\n1      val  10.96 17.5905 12.4176 5.4238 260.8937 260.5887  19 -1.3829 17.7912\n  max  mean median min n n.valid n.missing n.unique      ps  q2.5 q25 q75 q97.5\n1 280 261.2    262 245 5       5         0        5 14.0741 245.5 250 269 278.9\n  range  sd.amo  sd.pop     se   skew  sum sum.dev ave.dev sum.sq.dev var.amo\n1    35 14.1669 12.6712 6.3356 0.2144 1306    54.8   10.96      802.8   200.7\n  var.pop\n1  160.56\n\n# estatísticas vistas neste material\ndesc_stat(altura,\n          stats = c(\"mean, median, range, ave.dev, var.amo, sd.amo, cv, se\")) |> \n  as.data.frame()\n\n  variable  mean median range ave.dev var.amo  sd.amo     cv     se\n1      val 261.2    262    35   10.96   200.7 14.1669 5.4238 6.3356"
  },
  {
    "objectID": "FIT5306/FIT5306_01_DESC.html#exemplo-com-os-dados-coletados-em-aula",
    "href": "FIT5306/FIT5306_01_DESC.html#exemplo-com-os-dados-coletados-em-aula",
    "title": "Estatística Descritiva",
    "section": "\n5.2 Exemplo com os dados coletados em aula",
    "text": "5.2 Exemplo com os dados coletados em aula\nNeste exemplo, mostro como as estatísticas descritivas para os dados coletados em aula podem ser calculadas utilizando o pacote metan. Os dados são importados diretamente da planilha armazenada no drive, utilizando a função import() do pacote rio.\n\nlibrary(rio)\n\n# link dos dados\nlink <- \"https://docs.google.com/spreadsheets/d/1JMrkppvv1BdGKVCekzZPsPYCKcgUWjxpuDlWqejc22s/edit#gid=1216373680\"\n\n# função para importar os dados\ndf <- import(link) \n\n# estrutura dos dados \nstr(df)\n\n'data.frame':   40 obs. of  4 variables:\n $ Grupo      : chr  \"Grupo 1\" \"Grupo 1\" \"Grupo 1\" \"Grupo 1\" ...\n $ Coloracao  : chr  \"vermelho\" \"vermelho\" \"vermelho\" \"vermelho\" ...\n $ comprimento: num  15.9 14.7 13.6 11.4 14.3 ...\n $ diametro   : num  11.7 11.4 11.4 11.6 10.7 ...\n\n# primeiras linhas\nhead(df)\n\n    Grupo Coloracao comprimento diametro\n1 Grupo 1  vermelho       15.89    11.66\n2 Grupo 1  vermelho       14.68    11.37\n3 Grupo 1  vermelho       13.60    11.39\n4 Grupo 1  vermelho       11.39    11.58\n5 Grupo 1  vermelho       14.27    10.69\n6 Grupo 1  vermelho       15.02    11.28\n\n\nOs dados foram organziados de maneira que cada fator (coloração e grupo) estivessem em uma coluna. Isto possibilita o cálculo das estatísticas para cada nível destes fatores. As duas variáveis quantitativas contínuas são: comprimento (o comprimento do grão em mm); e diametro (o diâmetro do grão em mm).\n\n5.2.1 Estatísticas gerais\nPara saber as estatísticas descritivas gerais (sem estratificação por grupo), vamos utilizar a função group_by() para agrupar por Coloracao. Com isso, as estatísticas serão calculadas separadamente para vermelho e verde. Por padrão, a função calcula as estatísticas descritivas para todas as variáveis numéricas do conjunto de dados. Sendo assim, não há necessidade de informar qual variável analisar.\n\nstats = c(\"mean, median, range, ave.dev, var.amo, sd.amo, cv, se, n\")\ndf |> \n  group_by(Coloracao) |> \n  desc_stat(stats = stats)\n\n# A tibble: 4 × 11\n  Coloracao variable  mean median range ave.dev var.amo sd.amo    cv    se     n\n  <chr>     <chr>    <dbl>  <dbl> <dbl>   <dbl>   <dbl>  <dbl> <dbl> <dbl> <dbl>\n1 verde     comprim…  11.3  11.0   5.17    1.24    2.11   1.45  12.9 0.303    23\n2 verde     diametro  10.6   9.36  9.57    2.33    7.36   2.71  25.6 0.566    23\n3 vermelho  comprim…  13.6  13.6   6.11    1.45    3.25   1.80  13.3 0.438    17\n4 vermelho  diametro  11.9  11.4   8.07    1.60    4.84   2.20  18.6 0.534    17\n\n\n\n5.2.2 Estatísticas por grupo e coloração\nPara obter as estatística para cada grupo, basta adicionar o fator Grupo na função group_by() e realizar o mesmo comando mostrado acima.\n\ndf |> \n  group_by(Grupo, Coloracao) |> \n  desc_stat(stats = stats)\n\n# A tibble: 8 × 12\n  Grupo Coloracao variable  mean median range ave.dev var.amo sd.amo    cv    se\n  <chr> <chr>     <chr>    <dbl>  <dbl> <dbl>   <dbl>   <dbl>  <dbl> <dbl> <dbl>\n1 Grup… verde     comprim… 11.8    12.0  5.17   1.18    2.23   1.49  12.7  0.386\n2 Grup… verde     diametro  8.82    8.7  3.84   0.759   1.02   1.01  11.5  0.261\n3 Grup… vermelho  comprim… 14.1    14.6  4.59   1.27    2.36   1.54  10.9  0.426\n4 Grup… vermelho  diametro 10.8    11.3  3.45   0.825   1.13   1.06   9.81 0.294\n5 Grup… verde     comprim… 10.3    10.1  2.02   0.458   0.414  0.644  6.28 0.228\n6 Grup… verde     diametro 14.0    13.7  3.8    0.898   1.40   1.18   8.47 0.418\n7 Grup… vermelho  comprim… 11.9    12.2  3.62   1.47    3.14   1.77  14.8  0.886\n8 Grup… vermelho  diametro 15.2    15.1  2.51   1.05    1.56   1.25   8.20 0.624\n# … with 1 more variable: n <dbl>"
  },
  {
    "objectID": "FIT5306/FIT5306_02_FREQ.html#representação-tabular",
    "href": "FIT5306/FIT5306_02_FREQ.html#representação-tabular",
    "title": "Distribuição de frequências",
    "section": "\n1.1 Representação tabular",
    "text": "1.1 Representação tabular\nPode-se criar facilmente esta tabela de frequência combinando as funções count() e mutate() do pacote dplyr (parte do tidyverse).\n\ntab_feq <- \n  df %>%\n  count(cor_grao) |>\n  mutate(abs_freq = n,\n         abs_freq_ac = cumsum(abs_freq),\n         rel_freq = abs_freq / sum(abs_freq),\n         rel_freq_ac = cumsum(rel_freq))\n\nknitr::kable(tab_feq)\n\n\n\ncor_grao\nn\nabs_freq\nabs_freq_ac\nrel_freq\nrel_freq_ac\n\n\n\namarelo\n6\n6\n6\n0.2142857\n0.2142857\n\n\nverde\n15\n15\n21\n0.5357143\n0.7500000\n\n\nvermelho\n7\n7\n28\n0.2500000\n1.0000000"
  },
  {
    "objectID": "FIT5306/FIT5306_02_FREQ.html#representação-gráfica",
    "href": "FIT5306/FIT5306_02_FREQ.html#representação-gráfica",
    "title": "Distribuição de frequências",
    "section": "\n1.2 Representação gráfica",
    "text": "1.2 Representação gráfica\nPara apresentar estes dados graficamente, pode-se construir um gráfico de barras, mostrando a contagem em cada classe."
  },
  {
    "objectID": "FIT5306/FIT5306_02_FREQ.html#apresentação-tabular",
    "href": "FIT5306/FIT5306_02_FREQ.html#apresentação-tabular",
    "title": "Distribuição de frequências",
    "section": "\n3.1 Apresentação tabular",
    "text": "3.1 Apresentação tabular\n\nfrequencias <- freq_table(df, comp_grao)\nknitr::kable(frequencias$freqs)\n\n\n\n\n\n\n\n\n\n\nclass\nabs_freq\nabs_freq_ac\nrel_freq\nrel_freq_ac\n\n\n\n8.229 |— 9.952\n2\n2\n0.071\n0.071\n\n\n9.952 |— 11.675\n5\n7\n0.179\n0.250\n\n\n11.675 |— 13.398\n10\n17\n0.357\n0.607\n\n\n13.398 |— 15.121\n8\n25\n0.286\n0.893\n\n\n15.121 |—| 16.844\n3\n28\n0.107\n1.000\n\n\nTotal\n28\n28\n1.000\n1.000"
  },
  {
    "objectID": "FIT5306/FIT5306_02_FREQ.html#apresentação-gráfica",
    "href": "FIT5306/FIT5306_02_FREQ.html#apresentação-gráfica",
    "title": "Distribuição de frequências",
    "section": "\n3.2 Apresentação gráfica",
    "text": "3.2 Apresentação gráfica\n\nfreq_hist(frequencias)"
  },
  {
    "objectID": "FIT5306/FIT5306_02_FREQ.html#cor-do-grão-do-café-grupo-3",
    "href": "FIT5306/FIT5306_02_FREQ.html#cor-do-grão-do-café-grupo-3",
    "title": "Distribuição de frequências",
    "section": "\n4.1 Cor do grão do café (grupo 3)",
    "text": "4.1 Cor do grão do café (grupo 3)\n\ndf_cor_grao <- import(\"https://docs.google.com/spreadsheets/d/1JMrkppvv1BdGKVCekzZPsPYCKcgUWjxpuDlWqejc22s/edit#gid=353032103\",\n                      dec = \",\")\n\n\nfreq_cafe <- freq_table(df_cor_grao, var = cor_grao)\nknitr::kable(freq_cafe$freqs)\n\n\n\ncor_grao\nabs_freq\nabs_freq_ac\nrel_freq\nrel_freq_ac\n\n\n\namarelo\n6\n6\n0.214\n0.214\n\n\nverde\n15\n21\n0.536\n0.750\n\n\nvermelho\n7\n28\n0.250\n1.000\n\n\nTotal\n28\n28\n1.000\n1.000\n\n\n\n\n# criar um histograma\nfreq_hist(freq_cafe)"
  },
  {
    "objectID": "FIT5306/FIT5306_02_FREQ.html#altura-da-turma",
    "href": "FIT5306/FIT5306_02_FREQ.html#altura-da-turma",
    "title": "Distribuição de frequências",
    "section": "\n4.2 Altura da turma",
    "text": "4.2 Altura da turma\n\ndf_altura <- import(\"https://docs.google.com/spreadsheets/d/1JMrkppvv1BdGKVCekzZPsPYCKcgUWjxpuDlWqejc22s/edit#gid=1992833755\") |> \n  as_numeric(Altura)\n\n# Tabela\ndist_altura <- freq_table(df_altura, var = Altura)\nknitr::kable(dist_altura$freqs)\n\n\n\n\n\n\n\n\n\n\nclass\nabs_freq\nabs_freq_ac\nrel_freq\nrel_freq_ac\n\n\n\n154.333 |— 163.666\n3\n3\n0.15\n0.15\n\n\n163.666 |— 172.999\n7\n10\n0.35\n0.50\n\n\n172.999 |— 182.332\n8\n18\n0.40\n0.90\n\n\n182.332 |—| 191.665\n2\n20\n0.10\n1.00\n\n\nTotal\n20\n20\n1.00\n1.00\n\n\n\n\n# Gráfico\nfreq_hist(dist_altura)"
  }
]