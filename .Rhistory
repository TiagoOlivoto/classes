producao |>
separate(ANO_PRODUCAO, into = c("ANO", "PRODUCAO")) |>
right_join(area_long) |>
replace_zero(PRODUCAO, AREA)
View(df_area_prod)
df_area_prod <-
producao |>
separate(ANO_PRODUCAO, into = c("ANO", "PRODUCAO")) |> # tidyr
right_join(area_long) |>                               # dplyr
replace_zero(PRODUCAO, AREA) |>                        # metan
mutate(PRODUTIVIDADE = PRODUCAO / AREA)
df_area_prod <-
producao |>
separate(ANO_PRODUCAO, into = c("ANO", "PRODUCAO")) |> # tidyr
right_join(area_long) |>                               # dplyr
replace_zero(PRODUCAO, AREA)
View(df_area_prod)
find_text_in_num(df_area_prod, PRODUCAO)
View(producao)
df_area_prod <-
producao |>
separate(ANO_PRODUCAO, into = c("ANO", "PRODUCAO")) |> # tidyr
right_join(area_long) |>                               # dplyr
replace_zero(PRODUCAO, AREA) |>                        # metan
replace_string(PRODUCAO, pattern = "NA", replacement = NA)
View(df_area_prod)
df_area_prod <-
producao |>
separate(ANO_PRODUCAO, into = c("ANO", "PRODUCAO")) |> # tidyr
right_join(area_long) |>                               # dplyr
replace_zero(PRODUCAO, AREA) |>                        # metan
replace_string(PRODUCAO, pattern = "NA", replacement = NA) |>
as_numeric(PRODUCAO)
View(df_area_prod)
df_area_prod <-
producao |>
separate(ANO_PRODUCAO, into = c("ANO", "PRODUCAO")) |> # tidyr
right_join(area_long) |>                               # dplyr
replace_zero(PRODUCAO, AREA) |>                        # metan
replace_string(PRODUCAO, pattern = "NA", replacement = NA) |>
as_numeric(PRODUCAO) |>
mutate(PRODUTIVIDADE = PRODUCAO / AREA)
View(df_area_prod)
df_area_prod <-
producao |>
separate(ANO_PRODUCAO, into = c("ANO", "PRODUCAO")) |>          # tidyr
replace_string(PRODUCAO, pattern = "NA", replacement = NA)
View(df_area_prod)
df_area_prod <-
producao |>
separate(ANO_PRODUCAO, into = c("ANO", "PRODUCAO")) |>          # tidyr
replace_string(PRODUCAO, pattern = "NA", replacement = NA) |>   # metan
as_numeric(PRODUCAO) |>                                         # metan
right_join(area_long) |>                                        # dplyr
replace_zero(PRODUCAO, AREA) |>                                 # metan
mutate(PRODUTIVIDADE = PRODUCAO / AREA)                         # dplyr
View(df_area_prod)
metan::replace_zero
metan::replace_string
df_area_prod <-
producao |>
separate(ANO_PRODUCAO, into = c("ANO", "PRODUCAO")) |>          # tidyr
mutate(PRODUCAO = gsub("NA", NA, ., ignore.case = ignore_case))
producao |>
separate(ANO_PRODUCAO, into = c("ANO", "PRODUCAO")) |>          # tidyr
mutate(PRODUCAO = gsub("NA", NA))
gsub
producao |>
separate(ANO_PRODUCAO, into = c("ANO", "PRODUCAO")) |>          # tidyr
mutate(PRODUCAO = gsub("NA", NA, PRODUCAO))
df_area_prod <-
producao |>
separate(ANO_PRODUCAO, into = c("ANO", "PRODUCAO")) |>          # tidyr
mutate(PRODUCAO = gsub("NA", NA, PRODUCAO))
View(df_area_prod)
producao |>
separate(ANO_PRODUCAO, into = c("ANO", "PRODUCAO")) |>          # tidyr
mutate(PRODUCAO = gsub("NA", NA, PRODUCAO),
PRODUCAO = replace(PRODUCAO, PRODUCAO == 0, NA))
df_area_prod <-
producao |>
separate(ANO_PRODUCAO, into = c("ANO", "PRODUCAO")) |>          # tidyr
mutate(PRODUCAO = gsub("NA", NA, PRODUCAO),
PRODUCAO = replace(PRODUCAO, PRODUCAO == 0, NA))
View(df_area_prod)
View(producao)
View(df_area_prod)
df_area_prod <-
producao |>
separate(ANO_PRODUCAO, into = c("ANO", "PRODUCAO")) |>          # tidyr
mutate(PRODUCAO = gsub("NA", NA, PRODUCAO),
PRODUCAO = as.numeric(replace(PRODUCAO, PRODUCAO == 0, NA)))
View(df_area_prod)
right_join(area_long) |>                                        # dplyr
mutate(PRODUTIVIDADE = PRODUCAO / AREA)                         # dplyr
df_area_prod <-
producao |>
separate(ANO_PRODUCAO, into = c("ANO", "PRODUCAO")) |>          # tidyr
mutate(PRODUCAO = gsub("NA", NA, PRODUCAO),
PRODUCAO = as.numeric(replace(PRODUCAO, PRODUCAO == 0, NA))) |>
right_join(area_long) |>                                        # dplyr
mutate(PRODUTIVIDADE = PRODUCAO / AREA)                         # dplyr
df_area_prod2 <-
producao |>
separate(ANO_PRODUCAO, into = c("ANO", "PRODUCAO")) |>          # tidyr
mutate(PRODUCAO = ,)
df_area_prod2 <-
producao |>
separate(ANO_PRODUCAO, into = c("ANO", "PRODUCAO")) |>          # tidyr
replace_string(PRODUCAO, pattern = "NA", replacement = NA) |>   # metan
as_numeric(PRODUCAO) |>                                         # metan
right_join(area_long) |>                                        # dplyr
replace_zero(PRODUCAO, AREA) |>                                 # metan
mutate(PRODUTIVIDADE = PRODUCAO / AREA)                         # dplyr
sum(df_area_prod$PRODUTIVIDADE)
sum(df_area_prod$PRODUTIVIDADE, na.rm = TRUE)
View(df_area_prod)
View(df_area_prod)
df_area_prod <-
producao |>
separate(ANO_PRODUCAO, into = c("ANO", "PRODUCAO")) |>          # tidyr
mutate(PRODUCAO = gsub("NA", NA, PRODUCAO),
PRODUCAO = as.numeric(replace(PRODUCAO, PRODUCAO == 0, NA))) |>
right_join(area_long) |>                                        # dplyr
mutate(PRODUTIVIDADE = PRODUCAO / AREA)                         # dplyr
View(df_area_prod)
RANGE(df_area_prod$PRODUTIVIDADE)
range(df_area_prod$PRODUTIVIDADE)
df_area_prod <-
producao |>
separate(ANO_PRODUCAO, into = c("ANO", "PRODUCAO")) |>          # tidyr
mutate(PRODUCAO = gsub("NA", NA, PRODUCAO),
PRODUCAO = as.numeric(replace(PRODUCAO, PRODUCAO == 0, NA)))
View(df_area_prod)
df_area_prod <-
producao |>
separate(ANO_PRODUCAO, into = c("ANO", "PRODUCAO")) |>          # tidyr
mutate(PRODUCAO = gsub("NA", NA, PRODUCAO),
PRODUCAO = as.numeric(replace(PRODUCAO, PRODUCAO == 0, NA))) |>
right_join(area_long)
View(df_area_prod)
df_area_prod <-
producao |>
separate(ANO_PRODUCAO, into = c("ANO", "PRODUCAO")) |>          # tidyr
right_join(area_long)
View(df_area_prod)
df_area_prod <-
producao |>
separate(ANO_PRODUCAO, into = c("ANO", "PRODUCAO")) |>          # tidyr
right_join(area_long) |>                                        # dplyr
mutate(AREA = as.numeric(replace(AREA, AREA == 0, NA)),
PRODUCAO = gsub("NA", NA, PRODUCAO),
PRODUCAO = as.numeric(replace(PRODUCAO, PRODUCAO == 0, NA))) |>
mutate(PRODUTIVIDADE = PRODUCAO / AREA)                         # dplyr
View(df_area_prod)
range(df_area_prod$PRODUTIVIDADE)
range(df_area_prod$PRODUTIVIDADE, na.rm = TRUE)
df_area_prod |> select_rows_na()
df_area_prod2 <-
producao |>
separate(ANO_PRODUCAO, into = c("ANO", "PRODUCAO")) |>          # tidyr
replace_string(PRODUCAO, pattern = "NA", replacement = NA) |>   # metan
as_numeric(PRODUCAO) |>                                         # metan
right_join(area_long) |>                                        # dplyr
replace_zero(PRODUCAO, AREA) |>                                 # metan
mutate(PRODUTIVIDADE = PRODUCAO / AREA)                         # dplyr
range(df_area_prod2$PRODUTIVIDADE, na.rm = TRUE)
df_area_prod <-
producao |>
separate(ANO_PRODUCAO, into = c("ANO", "PRODUCAO")) |>          # tidyr
right_join(area_long) |>                                        # dplyr
mutate(AREA = replace(AREA, AREA == 0, NA),                     # dplyr
PRODUCAO = gsub("NA", NA, PRODUCAO),
PRODUCAO = replace(PRODUCAO, PRODUCAO == 0, NA)) |>
mutate(across(c(PRODUCAO, AREA), as.numeric)) |>
mutate(PRODUTIVIDADE = PRODUCAO / AREA)                         # dplyr
range(df_area_prod$PRODUTIVIDADE, na.rm = TRUE)
View(df_area_prod)
View(df_area_prod2)
View(df_area_prod2)
prod_med <-
df_area_prod |>
group_by(PAIS) |>
summarise(across(PRODUTIVIDADE,
.fns = c(min = min, mean = mean, max = max, se = se)))
View(prod_med)
prod_med <-
df_area_prod |>
group_by(PAIS) |>
summarise(across(PRODUTIVIDADE,
.fns = c(min = min, mean = mean, max = max, se = se),
na.rm = TRUE))
# função erro padrão da média
se <- function(x, na.rm = TRUE){
return(sd(x, na.rm = na.rm) / sqrt(length(na.omit(x))))
}
prod_med <-
df_area_prod |>
group_by(PAIS) |>
summarise(across(PRODUTIVIDADE,
.fns = c(min = min, mean = mean, max = max, se = se),
na.rm = TRUE))
View(prod_med)
View(df_area_prod2)
prod_med <-
df_area_prod |>
group_by(PAIS) |>
summarise(across(PRODUTIVIDADE,
.fns = c(min = min, mean = mean, max = max, se = se),
na.rm = TRUE)) |>
remove_rows_na()
View(prod_med)
prod_med <-
df_area_prod |>
group_by(PAIS) |>
summarise(across(PRODUTIVIDADE,
.fns = c(min = min, mean = mean, max = max, se = se),
na.rm = TRUE)) |>
remove_rows_na() |>
arrange(desc(PRODUTIVIDADE_mean))
View(prod_med)
View(df_area_prod2)
# função erro padrão da média
se <- function(x, na.rm = TRUE){
return(sd(x, na.rm = na.rm) / sqrt(length(na.omit(x))))
}
prod_med <-
df_area_prod |>
group_by(PAIS) |>
summarise(prod_min = min(PRODUTIVIDADE, na.rm = TRUE),
prod_mean = mean(PRODUTIVIDADE, na.rm = TRUE),
prod_max = max(PRODUTIVIDADE, na.rm = TRUE),
prod_se = se(PRODUTIVIDADE, na.rm = TRUE))
View(prod_med)
prod_med <-
df_area_prod |>
group_by(PAIS) |>
summarise(prod_min = min(PRODUTIVIDADE, na.rm = TRUE),
prod_mean = mean(PRODUTIVIDADE, na.rm = TRUE),
prod_max = max(PRODUTIVIDADE, na.rm = TRUE),
prod_se = se(PRODUTIVIDADE, na.rm = TRUE)) |>
remove_rows_na() |>
arrange(desc(prod_mean))
View(prod_med)
# top3
top3 <-
prod_med |>
slice(1:3)
top3
# top3
top3 <-
prod_med |>
slice(1:3) |>
pull(PAIS)
df_area_prod <-
df_area_prod |>
mutate(top3 = ifelse(PAIS %in% top3, "yes", "not"))
View(df_area_prod)
med_top3 <-
df_area_prod |>
mutate(top3 = ifelse(PAIS %in% top3, "yes", "not")) |>
group_by(top3) |>
summarise(mean = mean(PRODUTIVIDADE, na.rm = TRUE))
View(med_top3)
df_area_prod |>
mutate(top3 = ifelse(PAIS %in% top3, "yes", "not")) |>
group_by(top3)
med_top3 <-
df_area_prod |>
mutate(top3 = ifelse(PAIS %in% top3, "yes", "not")) |>
group_by(top3)
View(med_top3)
df_area_prod <-
producao |>
separate(ANO_PRODUCAO, into = c("ANO", "PRODUCAO")) |>          # tidyr
right_join(area_long) |>                                        # dplyr
mutate(AREA = replace(AREA, AREA == 0, NA),                     # dplyr
PRODUCAO = gsub("NA", NA, PRODUCAO),
PRODUCAO = replace(PRODUCAO, PRODUCAO == 0, NA)) |>
mutate(across(c(PRODUCAO, AREA), as.numeric)) |>                # dplyr
mutate(PRODUTIVIDADE = PRODUCAO / AREA)                         # dplyr
med_top3 <-
df_area_prod |>
mutate(top3 = ifelse(PAIS %in% top3, "yes", "not")) |>
group_by(top3) |>
summarise(mean = mean(PRODUTIVIDADE, na.rm = TRUE))
View(med_top3)
View(med_top3)
med_top3 <-
df_area_prod |>
mutate(top3 = ifelse(PAIS %in% top3, "yes", "not")) |>
group_by(top3) |>
summarise(mean = mean(PRODUTIVIDADE, na.rm = TRUE)) |>
pivot_wider(names_from = top3,
values_from = mean)
View(med_top3)
med_top3 <-
df_area_prod |>
mutate(top3 = ifelse(PAIS %in% top3, "yes", "not")) |>
group_by(top3) |>
summarise(mean = mean(PRODUTIVIDADE, na.rm = TRUE)) |>
pivot_wider(names_from = top3,
values_from = mean) |>
mutate(dif = yes - no)
med_top3 <-
df_area_prod |>
mutate(top3 = ifelse(PAIS %in% top3, "yes", "no")) |>
group_by(top3) |>
summarise(mean = mean(PRODUTIVIDADE, na.rm = TRUE)) |>
pivot_wider(names_from = top3,
values_from = mean) |>
mutate(dif = yes - no)
View(med_top3)
View(df_area_prod)
df_ano <-
df_area_prod |>
filter(PAIS %in% top3, "yes", "no")
df_ano <-
df_area_prod |>
filter(PAIS %in% top3)
View(df_ano)
df_ano <-
df_area_prod |>
filter(PAIS %in% top3) |>
mutate(ANO = as.numeric(ANO))
View(df_ano)
ggplot(df_ano, aes(ANO, PRODUTIVIDADE, color = PAIS)) +
geom_line()
View(df_ano)
ggplot(df_ano, aes(ANO, PRODUTIVIDADE, color = PAIS)) +
geom_line() +
theme_bw()
ggplot(df_ano, aes(ANO, PRODUTIVIDADE, color = PAIS)) +
geom_line(size = 1) +
theme_bw()
ggplot(df_ano, aes(ANO, PRODUTIVIDADE, color = PAIS)) +
geom_line(size = 1) +
geom_smooth()
ggplot(df_ano, aes(ANO, PRODUTIVIDADE, color = PAIS)) +
# geom_line(size = 1) +
geom_smooth()
ggplot(df_ano, aes(ANO, PRODUTIVIDADE, color = PAIS)) +
geom_line(size = 1) +
geom_point(size  = 2) +
theme_bw()
ggplot(df_ano, aes(ANO, PRODUTIVIDADE, color = PAIS)) +
geom_line(size = 1) +
geom_point(size  = 3) +
theme_bw()
ggplot(df_ano, aes(ANO, PRODUTIVIDADE, color = PAIS)) +
geom_line(size = 1) +
geom_point(size  = 3) +
theme_bw() +
scale_x_continuous(breaks = seq(1960, 2020, by = 10))
ggplot(df_ano, aes(ANO, PRODUTIVIDADE, color = PAIS)) +
geom_line(size = 1) +
geom_point(size  = 3) +
theme_bw() +
scale_x_continuous(breaks = seq(1960, 2020, by = 5))
ggplot(df_ano, aes(ANO, PRODUTIVIDADE, color = PAIS)) +
geom_line(size = 1) +
geom_point(size  = 3) +
theme_bw() +
scale_x_continuous(breaks = seq(1960, 2020, by = 2))
ggplot(df_ano, aes(ANO, PRODUTIVIDADE, color = PAIS)) +
geom_line(size = 1) +
geom_point(size  = 3) +
theme_bw() +
scale_x_continuous(breaks = seq(1960, 2020, by = 5))
ggplot(df_ano, aes(ANO, PRODUTIVIDADE, color = PAIS)) +
geom_line(size = 1) +
geom_point(size  = 3) +
theme_bw() +
scale_x_continuous(breaks = seq(1960, 2020, by = 5)) +
theme(legend.position = "bottom")
ggplot(df_ano, aes(ANO, PRODUTIVIDADE, color = PAIS)) +
geom_line(size = 1) +
geom_point(size  = 3) +
theme_bw() +
scale_x_continuous(breaks = seq(1960, 2020, by = 5)) +
theme(legend.position = "bottom") +
labs(x = "Ano de cultivo",
y = expression(Produtividade~Mg~ha^{-1}))
ggplot(df_ano, aes(ANO, PRODUTIVIDADE, color = PAIS)) +
geom_line(size = 1) +
geom_point(size  = 3) +
theme_bw() +
scale_x_continuous(breaks = seq(1960, 2020, by = 5)) +
theme(legend.position = "bottom") +
labs(x = "Ano de cultivo",
y = expression(Produtividade~(Mg~ha^{-1})))
ggplot(df_ano, aes(ANO, PRODUTIVIDADE, color = PAIS)) +
geom_line(size = 1) +
geom_point(size  = 3) +
theme_bw() +
scale_x_continuous(breaks = seq(1960, 2020, by = 5)) +
scale_y_continuous(breaks = seq(10, 40, by = 5)) +
theme(legend.position = "bottom") +
labs(x = "Ano de cultivo",
y = expression(Produtividade~(Mg~ha^{-1})))
ggplot(df_ano, aes(ANO, PRODUTIVIDADE, color = PAIS)) +
geom_line(size = 1) +
geom_point(size  = 3) +
theme_bw() +
scale_x_continuous(breaks = seq(1960, 2020, by = 5)) +
scale_y_continuous(breaks = seq(10, 40, by = 5)) +
theme(legend.position = "bottom",
panel.grid.minor = element_blank()) +
labs(x = "Ano de cultivo",
y = expression(Produtividade~(Mg~ha^{-1})))
ggplot(df_ano, aes(ANO, PRODUTIVIDADE, color = PAIS)) +
geom_line(size = 1) +
geom_point(size  = 3) +
theme_bw() +
scale_x_continuous(breaks = seq(1960, 2020, by = 5)) +
scale_y_continuous(breaks = seq(10, 40, by = 5)) +
theme(legend.position = "bottom",
panel.grid.minor = element_blank()) +
labs(x = "Ano de cultivo",
y = expression(Produtividade~(Mg~ha^{-1})),
color = "")
ggplot(df_ano, aes(ANO, PRODUTIVIDADE, color = PAIS)) +
geom_line(size = 1) +
geom_point(size  = 3) +
theme_bw() +
scale_x_continuous(breaks = seq(1960, 2020, by = 5)) +
scale_y_continuous(breaks = seq(10, 40, by = 5)) +
theme(legend.position = "bottom",
panel.grid.minor = element_blank()) +
labs(x = "Ano de cultivo",
y = expression(Produtividade~(Mg~ha^{-1})),
color = "",
title = "Produtividade de mandioca de 1960 a 2020")
ggplot(df_ano, aes(ANO, PRODUTIVIDADE, color = PAIS)) +
geom_line(size = 1) +
geom_point(size  = 3) +
theme_bw() +
scale_x_continuous(breaks = seq(1960, 2020, by = 5)) +
scale_y_continuous(breaks = seq(10, 40, by = 5)) +
theme(legend.position = "bottom",
panel.grid.minor = element_blank()) +
labs(x = "Ano de cultivo",
y = expression(Produtividade~(Mg~ha^{-1})),
color = "",
title = "Produtividade de mandioca de 1960 a 2020",
subtitle = "Fonte: https://www.fao.org/faostat/en/#data/QCL")
ggplot(df_ano, aes(ANO, PRODUTIVIDADE, color = PAIS)) +
geom_line(size = 1) +
geom_point(size  = 3) +
theme_bw() +
scale_x_continuous(breaks = seq(1960, 2020, by = 5)) +
scale_y_continuous(breaks = seq(10, 40, by = 5)) +
theme(legend.position = "bottom",
panel.grid.minor = element_blank()) +
labs(x = "Ano de cultivo",
y = expression(Produtividade~(Mg~ha^{-1})),
color = "",
title = "Produtividade de mandioca de 1960 a 2020 dos TOP 3 países com maior produtividade",
subtitle = "Fonte: https://www.fao.org/faostat/en/#data/QCL")
ggplot(df_ano, aes(ANO, PRODUTIVIDADE, color = PAIS)) +
geom_line(size = 1) +
geom_point(size  = 3) +
theme_bw() +
scale_x_continuous(breaks = seq(1960, 2020, by = 5)) +
scale_y_continuous(breaks = seq(10, 40, by = 5)) +
theme(legend.position = "bottom",
panel.grid.minor = element_blank()) +
labs(x = "Ano de cultivo",
y = expression(Produtividade~(Mg~ha^{-1})),
color = "",
title = "Produtividade de mandioca de 1960 a 2020 dos TOP 3 países com maior produtividade",
subtitle = "Fonte: https://www.fao.org/faostat/en/#data/QCL",
caption = "Elaborado com o pacote ggplot2")
ggplot(df_ano, aes(ANO, PRODUTIVIDADE, color = PAIS)) +
geom_line(size = 1) +
geom_point(size  = 3) +
theme_bw(base_size = 14) +
scale_x_continuous(breaks = seq(1960, 2020, by = 5)) +
scale_y_continuous(breaks = seq(10, 40, by = 5)) +
theme(legend.position = "bottom",
panel.grid.minor = element_blank()) +
labs(x = "Ano de cultivo",
y = expression(Produtividade~(Mg~ha^{-1})),
color = "",
title = "Produtividade de mandioca de 1960 a 2020 dos TOP 3 países com maior produtividade",
subtitle = "Fonte: https://www.fao.org/faostat/en/#data/QCL",
caption = "Elaborado com o pacote ggplot2")
ggplot(df_ano, aes(ANO, PRODUTIVIDADE, color = PAIS)) +
geom_line(size = 1) +
geom_point(size  = 3) +
theme_bw(base_size = 16) +
scale_x_continuous(breaks = seq(1960, 2020, by = 5)) +
scale_y_continuous(breaks = seq(10, 40, by = 5)) +
theme(legend.position = "bottom",
panel.grid.minor = element_blank()) +
labs(x = "Ano de cultivo",
y = expression(Produtividade~(Mg~ha^{-1})),
color = "",
title = "Produtividade de mandioca de 1960 a 2020 dos TOP 3 países com maior produtividade",
subtitle = "Fonte: https://www.fao.org/faostat/en/#data/QCL",
caption = "Elaborado com o pacote ggplot2")
ggsave("prod_ano.png", width = 15, height = 5)
ggsave("prod_ano.png", width = 15, height = 8)
df_ano
med_top3
prod_med
export(list(
diferenca = med_top3,
prod_med = prod_med
),
"itens_1_2.xlsx")
View(df_area_prod)
