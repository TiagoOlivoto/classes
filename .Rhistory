mutate(ncp = tc / Articles)|>
mutate(Author = fct_reorder(factor(Author), Articles)) |>
select(-tc) |>
slice_max(Articles, n = 10) |>
pivot_longer(-Author)
ggplot(df2, aes(x = value, y = reorder(Author))) +
geom_col(aes(fill = name), position = "dodge")
df2 <-
left_join(tc, np, by = c("Author" = "Authors")) |>
mutate(ncp = tc / Articles)|>
mutate(Author = fct_reorder(factor(Author), Articles)) |>
select(-tc) |>
slice_max(Articles, n = 10) |>
pivot_longer(-Author)
ggplot(df2, aes(x = value, y = Author)) +
geom_col(aes(fill = name), position = "dodge")
df2 <-
left_join(tc, np, by = c("Author" = "Authors")) |>
mutate(ncp = tc / Articles)|>
mutate(Author = fct_reorder(factor(Author), ncp)) |>
select(-tc) |>
slice_max(Articles, n = 10) |>
pivot_longer(-Author)
ggplot(df2, aes(x = value, y = Author)) +
geom_col(aes(fill = name), position = "dodge")
my_theme <-
theme_bw(base_size = 14) +
theme(axis.ticks.length = unit(0.2, "cm"))
theme_set(my_theme)
ggplot(df2, aes(x = value, y = Author)) +
geom_col(aes(fill = name), position = "dodge")
df2 <-
left_join(tc, np, by = c("Author" = "Authors")) |>
mutate(ncp = tc / Articles)
df2 <-
left_join(tc, np, by = c("Author" = "Authors")) |>
mutate(ncp = tc / Articles) |>
mutate(Author = fct_reorder(factor(Author), ncp)) |>
select(-tc) |>
slice_max(Articles, n = 10)
df2 <-
left_join(tc, np, by = c("Author" = "Authors")) |>
mutate(ncp = tc / Articles) |>
mutate(Author = fct_reorder(factor(Author), ncp)) |>
select(-tc) |>
slice_max(Articles, n = 10) |>
filter(Author != "SANTAMARIA P") |>
pivot_longer(-Author)
ggplot(df2, aes(x = value, y = Author)) +
geom_col(aes(fill = name), position = "dodge")
ggplot(df2, aes(x = value, y = Author)) +
geom_col(aes(fill = name), position = "dodge") +
labs(x = "Number") +
theme(legend.position = c(0.1, 0.9))
ggplot(df2, aes(x = value, y = Author)) +
geom_col(aes(fill = name), position = "dodge") +
labs(x = "Number") +
theme(legend.position = c(0.8, 0.1))
ggplot(df2, aes(x = value, y = Author)) +
geom_col(aes(fill = name), position = "dodge") +
labs(x = "Number") +
scale_fill_manual(values = ggplot_color(2),
labels = c("Average number of citations per article",
"Number of published articles")) +
theme(legend.position = c(0.8, 0.1),
fill = "")
library(metan)
df2 <-
left_join(tc, np, by = c("Author" = "Authors")) |>
mutate(ncp = tc / Articles) |>
mutate(Author = fct_reorder(factor(Author), ncp)) |>
select(-tc) |>
slice_max(Articles, n = 10) |>
filter(Author != "SANTAMARIA P") |>
pivot_longer(-Author)
ggplot(df2, aes(x = value, y = Author)) +
geom_col(aes(fill = name), position = "dodge") +
labs(x = "Number") +
scale_fill_manual(values = ggplot_color(2),
labels = c("Average number of citations per article",
"Number of published articles")) +
theme(legend.position = c(0.8, 0.1),
fill = "")
ggplot(df2, aes(x = value, y = Author)) +
geom_col(aes(fill = name), position = "dodge") +
labs(x = "Number") +
scale_fill_manual(values = ggplot_color(2),
labels = c("Average number of citations per article",
"Number of published articles")) +
theme(legend.position = c(0.8, 0.1))
ggplot(df2, aes(x = value, y = Author)) +
geom_col(aes(fill = name), position = "dodge") +
labs(x = "Number",
fill = "") +
scale_fill_manual(values = ggplot_color(2),
labels = c("Average number of citations per article",
"Number of published articles")) +
theme(legend.position = c(0.8, 0.1))
ggsave("fig6.jpg", width = 8, height = 4)
open_wd()
ggplot(df2, aes(x = value, y = Author)) +
geom_col(aes(fill = name), position = "dodge") +
labs(x = "Number",
fill = "") +
scale_fill_manual(values = ggplot_color(2),
labels = c("Average number of citations per article",
"Number of published articles")) +
theme(legend.position = c(0.8, 0.2))
ggsave("fig6.jpg", width = 10, height = 4)
View(df2)
df2 <-
left_join(tc, np, by = c("Author" = "Authors")) |>
mutate(ncp = tc / Articles)
View(df2)
rio::export(df2, "bind.xlsx")
ggplot(cit_aut, aes(y = reorder(AU, value), x = value)) +
geom_col(aes(fill = name),
position = position_dodge()) +
labs(x = "Number",
y = "Author") +
scale_fill_manual(values = ggplot_color(2),
labels = c("Number of published articles",
"Average number of citations per article")) +
theme(legend.position = "bottom",
legend.title = element_blank())
df2 <-
left_join(tc, np, by = c("Author" = "Authors")) |>
mutate(ncp = tc / Articles) |>
mutate(Author = fct_reorder(factor(Author), ncp)) |>
select(-tc) |>
slice_max(Articles, n = 10) |>
filter(Author != "SANTAMARIA P") |>
pivot_longer(-Author)
ggplot(df2, aes(x = value, y = Author)) +
geom_col(aes(fill = name), position = "dodge") +
labs(x = "Number",
fill = "") +
scale_fill_manual(values = ggplot_color(2),
labels = c("Number of published articles",
"Average number of citations per article")) +
theme(legend.position = c(0.8, 0.2))
ggsave("fig6.jpg", width = 10, height = 4)
ggsave("fig6.jpg", width = 9, height = 4)
ggplot(df2, aes(x = value, y = Author)) +
geom_col(aes(fill = name), position = "dodge") +
labs(x = "Number",
fill = "") +
scale_fill_manual(values = ggplot_color(2),
labels = c("Number of published articles",
"Average number of citations per article")) +
theme(legend.position = c(0.75, 0.2))
ggsave("fig6.jpg", width = 9, height = 4)
#| code-fold: true
#| code-summary: "Clique aqui e veja como o calendário foi feito!"
#| out-width: "100%"
#| fig-width: 8
#| fig-height: 7
#| warning: false
#| message: false
library(calendR)
# tutorial calendR
# https://r-coder.com/calendar-plot-r/
events <- rep(NA, 153)
segundas <- seq(7, 126, by = 7)
tercas <- seq(8, 127, by = 7)
events[segundas] <- "1: Aulas teóricas\nCCA/ZDR 201\nA/B/C: 13:30-16:00"
events[tercas] <- "2: Aulas práticas (campo)\nRessacada\nC: 10:10-11:50\nA: 13:30-15:10\nB: 15:20-17:00"
# Aulas práticas no CCA
events[c(29,  50,  64,  71, 106, 113, 120, 127)] <- "3: Aulas práticas (sala)\nCCA\nC: 10:10-11:50\nA: 13:30-15:10\nB: 15:20-17:00"
# Provas
events[c(63, 126)] <- "3: Avaliações"
# Feriados
events[c(84, 85)] <- "4: Semana Acadêmica"
cores <- c("lightsalmon", "lightgreen", "skyblue", "cyan",  "gold")
# Creating the calendar
calendR(year = 2023,
start_date ="2023-08-01",
end_date = "2023-12-31",
special.days = events,
special.col = cores,
title = "FIT5306 - Bioestatística e Experimentação Agrícola",
subtitle = "Cronograma de aulas - 2023/02",
subtitle.size = 15,
mbg.col = "forestgreen",
months.col = "white",
bg.img = "figs/calendr.png",
legend.pos = "bottom",
day.size = 4,
months.size = 14,
orientation = "portrait")
setwd("D:/Desktop/UFSC/aulas/classes/FIT5306")
#| code-fold: true
#| code-summary: "Clique aqui e veja como o calendário foi feito!"
#| out-width: "100%"
#| fig-width: 8
#| fig-height: 7
#| warning: false
#| message: false
library(calendR)
# tutorial calendR
# https://r-coder.com/calendar-plot-r/
events <- rep(NA, 153)
segundas <- seq(7, 126, by = 7)
tercas <- seq(8, 127, by = 7)
events[segundas] <- "1: Aulas teóricas\nCCA/ZDR 201\nA/B/C: 13:30-16:00"
events[tercas] <- "2: Aulas práticas (campo)\nRessacada\nC: 10:10-11:50\nA: 13:30-15:10\nB: 15:20-17:00"
# Aulas práticas no CCA
events[c(29,  50,  64,  71, 106, 113, 120, 127)] <- "3: Aulas práticas (sala)\nCCA\nC: 10:10-11:50\nA: 13:30-15:10\nB: 15:20-17:00"
# Provas
events[c(63, 126)] <- "3: Avaliações"
# Feriados
events[c(84, 85)] <- "4: Semana Acadêmica"
cores <- c("lightsalmon", "lightgreen", "skyblue", "cyan",  "gold")
# Creating the calendar
calendR(year = 2023,
start_date ="2023-08-01",
end_date = "2023-12-31",
special.days = events,
special.col = cores,
title = "FIT5306 - Bioestatística e Experimentação Agrícola",
subtitle = "Cronograma de aulas - 2023/02",
subtitle.size = 15,
mbg.col = "forestgreen",
months.col = "white",
bg.img = "figs/calendr.png",
legend.pos = "bottom",
day.size = 4,
months.size = 14,
orientation = "portrait")
ggplot2::ggsave("calendario.jpg",
width = 8,
height = 6)
ggplot2::ggsave("calendario.jpg",
width = 13,
height = 7)
ggplot2::ggsave("calendario.jpg",
width = 13,
height = 6)
ggplot2::ggsave("calendario.jpg",
width = 13,
height = 6.5)
devtools::install_github("bendeivide/leem")
leem::leem()
leem::leem
leem::leem
# tutorial calendR
# https://r-coder.com/calendar-plot-r/
events <- rep(NA, 30)
events[c(11, 13:15, 20:22, 28)] <- "08:20 às 11:50"
events
# tutorial calendR
# https://r-coder.com/calendar-plot-r/
events <- rep(NA, 30)
# tutorial calendR
# https://r-coder.com/calendar-plot-r/
events <- rep(NA, 30)
events[c(11, 14, 15, 18, 21, 22, 25, 28)] <- "08:20 às 11:50"
events[27] <- "Entrega do desafio"
img <- "figs/calendr.png"
# Creating the calendar
calendR(year = 2022,
start_date ="2023-09-01",
end_date = "2023-09-30",
special.days = events,
special.col =  c("lightgreen", "salmon"),
title = "RGV410046\nIntrodução à linguagem R de programação",
subtitle = "Cronograma de aulas",
mbg.col = "forestgreen",
months.col = "white",
bg.img = img,
legend.pos = "bottom")
setwd("D:/Desktop/UFSC/aulas/classes/RGV410046")
#| code-fold: true
#| code-summary: "Clique aqui e veja como o calendário foi feito!"
#| out-width: "100%"
#| warning: false
#| message: false
#|
library(calendR)
# tutorial calendR
# https://r-coder.com/calendar-plot-r/
events <- rep(NA, 30)
events[c(11, 14, 15, 18, 21, 22, 25, 28)] <- "08:20 às 11:50"
events[27] <- "Entrega do desafio"
img <- "figs/calendr.png"
# Creating the calendar
calendR(year = 2022,
start_date ="2023-09-01",
end_date = "2023-09-30",
special.days = events,
special.col =  c("lightgreen", "salmon"),
title = "RGV410046\nIntrodução à linguagem R de programação",
subtitle = "Cronograma de aulas",
mbg.col = "forestgreen",
months.col = "white",
bg.img = img,
legend.pos = "bottom")
# Creating the calendar
calendR(year = 2022,
start_date ="2023-09-01",
end_date = "2023-09-30",
special.days = events,
special.col =  c("lightgreen", "salmon"),
title = "RGV410046\nIntrodução à linguagem R de programação",
subtitle = "Cronograma de aulas",
mbg.col = "forestgreen",
months.col = "white",
bg.img = img,
legend.pos = "bottom")
library(calendR)
# tutorial calendR
# https://r-coder.com/calendar-plot-r/
events <- rep(NA, 30)
events[c(11, 14, 15, 18, 21, 22, 25, 28)] <- "08:20 às 11:50"
events[27] <- "Entrega do desafio"
img <- "figs/calendr.png"
# Creating the calendar
calendR(year = 2022,
start_date ="2023-09-01",
end_date = "2023-09-30",
special.days = events,
special.col =  c("lightgreen", "salmon"),
title = "RGV410046\nIntrodução à linguagem R de programação",
subtitle = "Cronograma de aulas",
mbg.col = "forestgreen",
months.col = "white",
bg.img = img,
legend.pos = "bottom")
install.packages(c("Matrix", "mvtnorm", "prodlim", "promises", "recipes", "wk"))
list.files(img)
list.files("figs")
library(rio)
library(tidyverse)
library(metan)
getwd()
set_wd_here("data/desafio_20232")
df <- import("dados_desafio.csv")
View(df)
df2000 <- df |>
filter(Year == "2000")
View(df2000)
df2000 <- df |>
filter(Year == "2000") |>
select(-Year) |>
pivot_wider(names_from = Item,
values_from = Value)
View(df2000)
View(df2000)
df2000 <- df |>
filter(Year == "2000") |>
select(-Year)
View(df2000)
hist(df2000$Value)
metan::desc_stat(df2000, Value)
df2000 <- df |>
filter(Year == "2000") |>
select(-Year) |>
pivot_wider(names_from = Item,
values_from = Value)
View(df2000)
export(df2000,
"dados_2000.csv")
export(df2000,
"dados_2000.xlsx")
df2020 <- df |>
filter(Year == "2020")
View(df2000)
View(df2020)
df2020 <- df |>
filter(Year == "2020") |>
select(-Year)
View(df2020)
df2020 <- df |>
filter(Year == "2020") |>
select(-Year) |>
rename(ano = Year)
df2020 <- df |>
filter(Year == "2020") |>
select(-Year) |>
rename(emissao = Value)
View(df2020)
df2020 <- df |>
filter(Year == "2020") |>
select(-Year) |>
rename(pais = Area)
View(df2020)
export(df2000,
"dados_2020.xlsx")
export(df2020,
"dados_2020.xlsx")
(ex_separate <- import("examples_data.xlsx", sheet = "df5"))
setwd("D:/Desktop/UFSC/aulas/classes/RGV410046")
(ex_separate <- import("examples_data.xlsx", sheet = "df5"))
# meu computador (mudar de acordo)
setwd("D:/Desktop/UFSC/aulas/classes/RGV410046/data")
df <- import("https://docs.google.com/spreadsheets/d/1YTH3OEPQXSuMJ_srOdh-a7Z_e7PkXvmu/edit#gid=1007272880",
dec = ",")
df <- import("https://docs.google.com/spreadsheets/d/1YTH3OEPQXSuMJ_srOdh-a7Z_e7PkXvmu/edit#gid=1007272880",
dec = ",") |>
as_factor(nc)
freq <- freq_table(df, nc)
freq_hist(freq)
df <- import("https://docs.google.com/spreadsheets/d/1YTH3OEPQXSuMJ_srOdh-a7Z_e7PkXvmu/edit#gid=1007272880",
dec = ",") |>
as_integer(nc)
freq <- freq_table(df, nc)
freq_hist(freq)
View(df)
df <- import("https://docs.google.com/spreadsheets/d/1YTH3OEPQXSuMJ_srOdh-a7Z_e7PkXvmu/edit#gid=1007272880",
dec = ",")
freq <- freq_table(df, nc)
freq_hist(freq)
df <- import("https://docs.google.com/spreadsheets/d/1YTH3OEPQXSuMJ_srOdh-a7Z_e7PkXvmu/edit#gid=1007272880",
dec = ",") |>
as_integer(nc)
freq <- freq_table(df, nc)
freq_hist(freq)
View(freq)
View(freq[["freqs"]])
df <- import("https://docs.google.com/spreadsheets/d/1QIgZMqDBayQNR8WyHlVpJ47yuF5H1I79zHhh7qTz92M/edit#gid=651087082",
dec = ",")
View(df)
df <- import("https://docs.google.com/spreadsheets/d/1JMrkppvv1BdGKVCekzZPsPYCKcgUWjxpuDlWqejc22s/edit#gid=353032103",
dec = ",")
View(df)
freq <- freq_table(df, diam_grao)
freq_hist(freq)
freq <- freq_table(df, comp_grao)
freq_hist(freq)
df <- import("https://docs.google.com/spreadsheets/d/1JMrkppvv1BdGKVCekzZPsPYCKcgUWjxpuDlWqejc22s/edit#gid=353032103",
dec = ",")
freq <- freq_table(df, comp_grao)
View(freq)
View(freq[["freqs"]])
freq_hist(freq)
df <- import("https://docs.google.com/spreadsheets/d/1YTH3OEPQXSuMJ_srOdh-a7Z_e7PkXvmu/edit#gid=1007272880",
dec = ",")
View(df)
ggplot(df, aes(x = compg)) +
geom_histogram()
ggplot(df, aes(x = compg)) +
geom_histogram(bins = 10)
ggplot(df, aes(x = compg)) +
geom_boxplot()
ggplot(df, aes(x = rgpla)) +
geom_histogram(bins = 10)
df |>
filter(rgpla <= 2) |>
nrow()
215/244
View(df)
ggplot(df, aes(x = rgpla)) +
geom_histogram(bins = 10) +
facet_wrap(~epoca)
ggplot(df, aes(x = ap)) +
geom_histogram(bins = 10) +
facet_wrap(~epoca)
ggplot(df, aes(x = ng)) +
geom_histogram(bins = 10) +
facet_wrap(~epoca)
ggplot(df, aes(x = ng)) +
# geom_histogram(bins = 10) +
geom_boxplot() +
facet_wrap(~epoca)
ggplot(df, aes(y = ng)) +
# geom_histogram(bins = 10) +
geom_boxplot() +
facet_wrap(~epoca)
ggplot(df, aes(y = ng)) +
# geom_histogram(bins = 10) +
geom_boxplot() +
facet_wrap(~epoca, ncol = 4)
df |> group_by(epoca) |> desc_stat(stats = "var.amo")
df |> group_by(epoca) |> desc_stat(rgpla, stats = "var.amo")
df |> group_by(epoca) |> desc_stat(rgpla, stats = "var.amo, mean")
df |> group_by(epoca) |> desc_stat(rgpla, stats = "var.amo, mean, cv")
devtools::install_github("ricardo-bion/ggradar",
dependencies = TRUE)
# pacotes para criação de mapas (github)
remotes::install_github("ropensci/rnaturalearthhires")
# pacotes para criação de mapas (github)
remotes::install_github("ropensci/rnaturalearthhires")
# américa do sul
library(rnaturalearth)
# américa do sul
library(rnaturalearth)
library(tidyverse)
sam <-
ne_countries(continent = "south america",
returnclass = "sf",
scale = 50)
install.packages("rnaturalearthdata")
sam <-
ne_countries(continent = "south america",
returnclass = "sf",
scale = 50)
p1 <-
ggplot() +
geom_sf(data = sam, fill = "white") +
theme_light() +
xlim(c(-90, -35))
# plotar o brasil e destacar santa catarina
brazil <-
ne_states(country = "brazil", returnclass = "sf") |>
mutate(scat = ifelse(postal == "SC", "SC", "Outros"))
p2 <-
p1 +
geom_sf(data = brazil, aes(fill = scat))
p2
library(rio)
install_formats()
install.packages("ggpmisc")
