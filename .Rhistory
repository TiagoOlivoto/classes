filter = 2)
View(res)
View(res[["results"]])
image_segment(seg, index = "B-R")
# ver qual dá
image_segment(seg, index = "SHP")
s1 <- image_segment(seg, index = "B-R")
# ver qual dá
s2 <- image_segment(seg, index = "SHP")
image_combine(s1, s2)
b1 <- image_segment(seg, index = "B-R")
b2 <- image_segment(seg, index = "SHP")
b1 <- image_binary(seg, index = "B-R")
b2 <- image_binary(seg, index = "SHP")
image_combine(b1, b2)
image_combine(b1, b2)
b1 <- image_binary(seg, index = "B-R")[1]
b2 <- image_binary(seg, index = "SHP")[1]
image_combine(b1, b2)
b1 <- image_binary(seg, index = "B-R")[[1]]
b2 <- image_binary(seg, index = "SHP")[[1]]
image_combine(b1, b2)
b1 <- image_index(seg, index = "B-R")[[1]]
b2 <- image_index(seg, index = "SHP")[[1]]
image_combine(b1, b2)
pliman_indexes()
img2 <- image_import("test.jpg") |> image_resize(50)
img2 <- image_import("test.jpg") |> image_resize(50)
seg <-image_segment(img, index=  "R/(G/B)")
img <- image_import("test.jpg") |> image_resize(50)
seg <-image_segment(img, index=  "R/(G/B)")
s1 <- image_segment(seg, index = "B-R")
# ver qual dá
s2 <- image_segment(seg, index = "SHP")
image_combine(s1, s2)
b1 <- image_index(seg, index = "B-R")[[1]]
b2 <- image_index(seg, index = "SHP")[[1]]
b1 <- image_index(seg, index = "B-R")[[1]]
b1 <- image_binary(seg, index = "B-R")[[1]]
b2 <- image_binary(seg, index = "SHP")[[1]]
image_combine(b1, b2)
b2 <- image_binary(seg, index = "SHP")[[1]]
library(pliman)
?image_shp()
#| out-width: "100%"
#|
library(FielDHub)
?CRD
trats <- c("C1", "C2", "C3", "C4")
crd <- CRD(
t = trats,
reps = 4,
plotNumber = 101,
seed = 1236
)
crd <- CRD(
t = trats,
reps = 4,
plotNumber = 101,
seed = 1236
)
print(crd)
plot(crd)
#| out-width: "100%"
trats <- c("C1", "C2", "C3", "C4")
rcbd <- RCBD(
t = trats,
reps = 4,
plotNumber = 101,
seed = 1236
)
print(rcbd)
plot(rcbd)
?RCBD
rcbd <- RCBD(
t = trats,
reps = 4,
planter = "cartesian",
plotNumber = 101,
seed = 1236
)
print(rcbd)
plot(rcbd)
rcbd <- RCBD(
t = trats,
reps = 2,
planter = "cartesian",
plotNumber = 101,
seed = 1236
)
print(rcbd)
plot(rcbd)
rcbd <- RCBD(
t = trats,
reps = 10,
planter = "cartesian",
plotNumber = 101,
seed = 1236
)
rcbd <- RCBD(
t = trats,
reps = 10,
planter = "cartesian",
plotNumber = 101,
seed = 1236
)
print(rcbd)
plot(rcbd)
rcbd <- RCBD(
t = trats,
reps = 4,
planter = "cartesian",
plotNumber = 101,
seed = 1236
)
rcbd <- RCBD(
t = trats,
reps = 4,
planter = "cartesian",
plotNumber = 101,
seed = 1236
)
print(rcbd)
View(rcbd)
View(rcbd[["fieldBook"]])
plot(rcbd)
library(pliman)
set_wd_here()
img <- image_import("vicia.jpg")
res <-
analyze_objects(img,
lower_noise = 0.3)
res <-
analyze_objects(img,
index = "R",
lower_noise = 0.3)
res <-
analyze_objects(img,
index = "B",
lower_noise = 0.3)
res <-
analyze_objects(img,
index = "B",
show_contour = FALSE,
marker = "id")
res <-
analyze_objects(img,
index = "B",
show_contour = FALSE,
marker = "point")
res <-
analyze_objects(img,
index = "B",
show_contour = FALSE,
marker = "point",
marker_col = "red")
View(res)
View(res[["statistics"]])
res <-
analyze_objects(img,
index = "B",
show_contour = FALSE,
marker = "point",
marker_col = "red",
lower_noise = 0.2,
save_image = TRUE)
img <- image_import("flax.jpg")
res <-
analyze_objects(img,
reference = TRUE,
reference_area = 6,
show_contour = FALSE,
marker = "point",
marker_col = "red",
lower_noise = 0.2,
save_image = TRUE)
res <-
analyze_objects(img,
reference = TRUE,
reference_area = 6,
# show_contour = FALSE,
# marker = "point",
marker_col = "red",
lower_noise = 0.2,
save_image = TRUE)
View(res)
View(res[["results"]])
res <-
analyze_objects(img,
reference = TRUE,
reference_area = 6,
# show_contour = FALSE,
# marker = "point",
marker_col = "red",
save_image = TRUE)
res$results$area
range(res$results$area)
library(tidyverse)
mutate(area = case_when(between(area, 0.1, 0.2) ~ "pequena",
between(area, 0.2, 0.3) ~ "média",
area > 0.3 ~ "grande"))
res$results |>
fiter(area > 0.1) |>
mutate(area = case_when(between(area, 0.1, 0.2) ~ "pequena",
between(area, 0.2, 0.3) ~ "média",
area > 0.3 ~ "grande"))
res$results |>
fiter(area > 0.1) |>
mutate(area = case_when(between(area, 0.1, 0.2) ~ "pequena",
between(area, 0.2, 0.3) ~ "média",
area > 0.3 ~ "grande"))
res$results |>
dplyr::fiter(area > 0.1) |>
mutate(area = case_when(between(area, 0.1, 0.2) ~ "pequena",
between(area, 0.2, 0.3) ~ "média",
area > 0.3 ~ "grande"))
res$results |>
dplyr::filter(area > 0.1) |>
mutate(area = case_when(between(area, 0.1, 0.2) ~ "pequena",
between(area, 0.2, 0.3) ~ "média",
area > 0.3 ~ "grande"))
res$results |>
dplyr::filter(area > 0.1) |>
mutate(area = case_when(between(area, 0.1, 0.2) ~ "pequena",
between(area, 0.2, 0.3) ~ "média",
area > 0.3 ~ "grande")) |>
metan::freq_table(area)
res$results |>
dplyr::filter(area > 0.1) |>
mutate(area = case_when(between(area, 0.1, 0.2) ~ "pequena",
between(area, 0.2, 0.3) ~ "média",
area > 0.3 ~ "grande")) |>
metan::freq_table(area) |>
metan::freq_hist()
res <-
analyze_objects(img,
reference = TRUE,
reference_area = 6,
# show_contour = FALSE,
marker = "area",
marker_col = "red",
save_image = TRUE)
res <-
analyze_objects(img,
reference = TRUE,
reference_area = 6,
# show_contour = FALSE,
marker = "length",
# marker_col = "red",
save_image = TRUE)
res <-
analyze_objects(img,
reference = TRUE,
reference_area = 6,
# show_contour = FALSE,
marker = "length",
marker_size = 2,
# marker_col = "red",
save_image = TRUE)
res <-
analyze_objects(img,
reference = TRUE,
reference_area = 20,
# show_contour = FALSE,
marker = "length",
marker_size = 2,
# marker_col = "red",
save_image = TRUE)
range(res$results$length)
res$results |>
dplyr::filter(area > 0.1) |>
mutate(area = case_when(area < 1 ~ "pequena",
between(area, 1, 2.5) ~ "média",
area > 2.5 ~ "grande")) |>
metan::freq_table(area) |>
metan::freq_hist()
res$results |>
mutate(area = case_when(area < 1 ~ "pequena",
between(area, 1, 2.5) ~ "média",
area > 2.5 ~ "grande")) |>
metan::freq_table(area) |>
metan::freq_hist()
res$results |>
mutate(area = case_when(area < 1 ~ "pequena",
between(area, 1, 2.5) ~ "média",
area > 2.5 ~ "grande")) |>
metan::freq_table(area)
res$results |>
mutate(area = case_when(length < 1 ~ "pequena",
between(length, 1, 2.5) ~ "média",
length > 2.5 ~ "grande")) |>
metan::freq_table(length) |>
metan::freq_hist()
res$results |>
mutate(length = case_when(length < 1 ~ "pequena",
between(length, 1, 2.5) ~ "média",
length > 2.5 ~ "grande")) |>
metan::freq_table(length) |>
metan::freq_hist()
res <-
analyze_objects(img,
reference = TRUE,
reference_area = 20,
object_index = "DGCI",
# show_contour = FALSE,
marker = "DGCI",
marker_size = 2,
# marker_col = "red",
save_image = TRUE)
res <-
analyze_objects(img,
reference = TRUE,
reference_area = 20,
object_index = "DGCI",
# show_contour = FALSE,
# marker = "DGCI",
marker_size = 2,
# marker_col = "red",
save_image = TRUE)
plot_measures(res, measure = "DGCI")
library(pliman)
set_wd_here()
img <- image_import("vicia.jpg")
res <- analyze_objects(img, index = "R")
res <- analyze_objects(img, index = "B")
res <- analyze_objects(img,
index = "B",
marker = "point")
View(res)
View(res[["results"]])
plot(res, measure = "area")
library(metan)
library(rio)
df <- import("https://docs.google.com/spreadsheets/d/1QIgZMqDBayQNR8WyHlVpJ47yuF5H1I79zHhh7qTz92M/edit#gid=0",
dec = ",")
View(df)
desc_stat(df, diametro)
df |>
group_by(cor) |>
desc_stat()
df |>
group_by(cor) |>
desc_stat(diametro)
df <- import("https://docs.google.com/spreadsheets/d/1QIgZMqDBayQNR8WyHlVpJ47yuF5H1I79zHhh7qTz92M/edit#gid=0",
dec = ",")
df |>
group_by(cor) |>
desc_stat()
library(tidyverse)
library(metan)
library(AgroR)
library(rio)
library(rio)
library(metan)
library(AgroR)
get()
getwd()
setwd("E:/Downloads/anova_linhaca")
df <- rio::import("dados_cap_plant.xlsx")
View(df)
with(df,
PSUBDBC(epoca, cultivar, bloco, mmg))
with(df,
PSUBDBC(epoca, cultivar, bloco, ngrao))
getwd()
setwd("E:/Downloads/anova_linhaca")
df <- import("dados_cap_plant.xlsx")
library(tidyverse)
library(metan)
library(rio)
set_wd_here()
df <- import("dados_cap_plant.xlsx")
View(df)
library(AgroR)
with(df,
PSUBDBC(epoca, cultivar, bloco, mmg))
with(df,
PSUBDBC(epoca, cultivar, bloco, ngrao))
library(tidyverse)
library(metan)
library(rio)
set_wd_here()
######## formatação dos resultados ############
df <- import_list("results_certo.xlsx") %>% bind_rows(.id = "fator")
bind <-
df |>
separate(fator, into = c("epoca", "tipo", "bloco", "cultivar"))
df_plant <- import("dados_plantas.xlsx") |> as_numeric(ap:rgpla)
bind <-
left_join(bind, df_plant, multiple = "all")
export(bind, "data_bind.csv")
# calcular o N
ncap_grao <-
bind |>
group_by(epoca, tipo, bloco, cultivar, img) |>
summarise(n = n()) |>
pivot_wider(names_from = tipo, values_from = n) |>
rename(ngrao = G, ncap = C) |>
ungroup()
# média das variáveis de planta
medias <-
bind |>
group_by(epoca, bloco, cultivar, img) |>
summarise(across(ap:rgpla, \(x) mean(x, na.rm = TRUE))) |>
mutate(across(where(is.numeric), \(x) ifelse(is.nan(x), NA, x))) |>
ungroup()
df_bind <-
left_join(medias, ncap_grao) |>
mutate(cp = ap - ct,
icc = rgpla / mc,
ngcap = ngrao / ncap,
mmg = rgpla / ngrao * 1000)
View(df_bind)
hist(df_bind$mmg)
mean_by(df_bind, epoca, .vars = "mmg")
1.85 / 139*1000
View(df_bind)
load("E:/Downloads/anova_linhaca/dados_cap_plant.xlsx")
library(rio)
library(rio)
library(metan)
library(tidyverse)
setwd("E:/Downloads/anova_linhaca")
list.files()
df <- import("dados_cap_plant.xlsx")
View(df)
library(AgroR)
with(df,
PSUBDBC(epoca, cultivar, bloco, rgpla))
with(df,
PSUBDBC(epoca, cultivar, bloco, mmf))
with(df,
PSUBDBC(epoca, cultivar, bloco, mmg))
with(df,
PSUBDBC(epoca, cultivar, bloco, ngpla))
with(df,
PSUBDBC(epoca, cultivar, bloco, ngra))
with(df,
PSUBDBC(epoca, cultivar, bloco, ngrao))
alt <- c(245, 250, 269, 280, 262)
mean(alt)
xi <- mean(alt)
desvio <- alt - xi
d2 <- desvio ^2
d2
sum(d2) / 4
s2 <- sum(d2) / 4
s <- sqrt(s)
s <- sqrt(s2)
s
alt <- c(245, 250, 269, 280, 262) / 100
xi <- mean(alt)
desvio <- alt - xi
d2 <- desvio ^2
s2 <- sum(d2) / 4
s <- sqrt(s2)
200.7 / 1000
200.7 / 100 * 100
200.7 / (100 * 100)
100 * 100
metan::desc_stat(alt)
alt <- c(245, 250, 269, 280, 262)
metan::desc_stat(alt)
metan::desc_stat(alt, stats = "all")
library(rio)
library(metan)
df <- rio::import("https://docs.google.com/spreadsheets/d/1QIgZMqDBayQNR8WyHlVpJ47yuF5H1I79zHhh7qTz92M/edit#gid=0",
dec = ",")
View(df)
diam <- df$diametro
diam
sum(diam)
n <- length(diam)
media <- sum(diam) / n
# amplitude
amplitude <- max(diam) - min(diam)
diam - media
# amplitude
amplitude <- max(diam) - min(diam)
# desvio medio absoluto
desv <- diam - media
sum(desv)
abs(desv)
sum(abs(desv))
sum(abs(desv)) / n
dma <- sum(abs(desv)) / n
desv ^2
sum(desv ^ 2)
(n - 1)
# variância
var <- sum(desv ^ 2) / (n - 1)
# desvio padrao
desvpad <- sqrt(var)
# cv
cv <- desvpad / media * 100
var(diam)
View(df)
descritivas <- desc_stat(diam, stats = "all")
View(descritivas)
View(df)
descritivas <-
diam |>
group_by(cor) |>
desc_stat(stats = "all")
descritivas <-
df |>
group_by(cor) |>
desc_stat(stats = "all")
View(descritivas)
mean(c(12.6744, 11.4593))
(12.6744 * 9 + 11.4593 * 14) / 23
(12.6744 * 9 + 11.4593 * 14)
