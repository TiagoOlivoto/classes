library(rio)
library(metan)
# importar os dados do google sheet
df <- import("https://docs.google.com/spreadsheets/d/18aXD_2ISvzB8h8_kgOfSBbr9a9d9pT0QVazt-KjVLRw/edit#gid=655855284",
dec = ",")
# mostrar os dados
knitr::kable(df)
frequencias <- freq_table(df, comp_grao)
knitr::kable(frequencias$freqs)
View(df)
setwd("E:/Desktop/UFSC/aulas/graduacao/bioestat_experimentacao/lista_exercicio")
setwd("E:/Desktop/UFSC/aulas/classes")
#| out-width: "100%"
comp_folha <- import("https://docs.google.com/spreadsheets/d/18aXD_2ISvzB8h8_kgOfSBbr9a9d9pT0QVazt-KjVLRw/edit#gid=0",
dec = ",")
View(comp_folha)
comp_folha |> arrange(comprimento)
d <- comp_folha |> arrange(comprimento)
View(d)
d <- comp_folha |> arrange(comprimento) |> select(comprimento) |> mutate(id = 1:21)
d <- comp_folha |> arrange(comprimento) |> select(comprimento) |> mutate(id = 1:21, .before = comprimento)
library(pliman)
library(rio)
set_wd_here()
# mudar os nomes
nomes <-
import("nomes.xlsx") |>
subset(EPOCA == "E4")
nomes
code_fotos <- nomes$CODE_PLANTA
code_fotos
# nome da pasta
folder <- "temp"
# mudar os nomes
nomes <-
import("nomes.xlsx") |>
subset(EPOCA == "E4")
code_fotos <- nomes$CODE_PLANTA
list.files(folder)
getwd()
# nome da pasta
folder <- "temp"
# mudar os nomes
nomes <-
import("nomes.xlsx") |>
subset(EPOCA == "E4")
code_fotos <- nomes$CODE_PLANTA
code_fotos
manipulate_files(pattern = "2022",
dir = folder,
name = code_fotos,
save_to = folder,
prefix = "img_06_09_",
remove_original = TRUE)
apply_fun_to_imgs(pattern = "img_",
fun = image_resize,
rel_size = 70,
dir_original = folder,
dir_processed = folder)
# recorte automático
apply_fun_to_imgs(pattern = "img_",
fun = image_autocrop,
index = "R",
edge = 20,
dir_original = folder,
dir_processed = folder)
code_fotos
manipulate_files(pattern = "2022",
dir = folder,
name = code_fotos,
save_to = folder,
prefix = "img_09_09_",
remove_original = TRUE)
# nome da pasta
folder <- "temp"
# mudar os nomes
nomes <-
import("nomes.xlsx") |>
subset(EPOCA == "E4")
code_fotos <- nomes$CODE_PLANTA
manipulate_files(pattern = "B",
dir = folder,
name = code_fotos,
save_to = folder,
prefix = "img_09_09_",
remove_original = TRUE)
apply_fun_to_imgs(pattern = "img_",
fun = image_resize,
rel_size = 70,
dir_original = folder,
dir_processed = folder)
manipulate_files(pattern = "B",
dir = folder,
name = code_fotos,
save_to = folder,
prefix = "img_09_09_",
remove_original = TRUE)
# recorte automático
apply_fun_to_imgs(pattern = "img_",
fun = image_autocrop,
index = "R",
edge = 20,
dir_original = folder,
dir_processed = folder)
manipulate_files(pattern = "B",
dir = folder,
name = code_fotos,
save_to = folder,
prefix = "img_16_09_",
remove_original = TRUE)
res <-
analyze_objects(pattern = "img_",
dir_original = folder,
reference = TRUE,
reference_area = 20,
marker = "length",
marker_size = 1.5,
watershed = FALSE,
save_image = TRUE,
dir_processed = "proc",
filter = 2)
folder
res <-
analyze_objects(img = "img_",
dir_original = folder,
reference = TRUE,
reference_area = 20,
marker = "length",
marker_size = 1.5,
watershed = FALSE,
save_image = TRUE,
dir_processed = "proc",
filter = 2)
res <-
analyze_objects(img = "img_16_09_B1_E4_D_P2",
dir_original = folder,
reference = TRUE,
reference_area = 20,
marker = "length",
marker_size = 1.5,
watershed = FALSE,
save_image = TRUE,
dir_processed = "proc",
filter = 2)
res <-
analyze_objects(img = "img_27_08_B1_E4_M_P2",
dir_original = folder,
reference = TRUE,
reference_area = 20,
marker = "length",
marker_size = 1.5,
watershed = FALSE,
save_image = TRUE,
dir_processed = "proc",
filter = 2)
res <-
analyze_objects(img = "img_27_08_B1_E4_M_P2",
dir_original = folder,
reference = TRUE,
reference_area = 20,
marker = "length",
marker_size = 1.5,
watershed = FALSE,
save_image = TRUE,
dir_processed = "proc",
filter = 2)
#| out-width: "100%"
df_grupos <-
import("https://docs.google.com/spreadsheets/d/18aXD_2ISvzB8h8_kgOfSBbr9a9d9pT0QVazt-KjVLRw/edit#gid=323183536",
dec = ",")
# filtrar somente folhas
df_folha <- subset(df_grupos, tipo == "Folha")
#| out-width: "100%"
comp_folha <- import("https://docs.google.com/spreadsheets/d/18aXD_2ISvzB8h8_kgOfSBbr9a9d9pT0QVazt-KjVLRw/edit#gid=0",
dec = ",")
# Tabela
dist_comprimento <- freq_table(comp_folha, var = comprimento)
dist_comprimento
tinytex::check_installed()
tinytex::tinytex_root()
tinytex_root
tinytex::tinytex_root
library(tidyverse)
library(rio)
library(metan)
# importar os dados do google sheet
df <- import("https://docs.google.com/spreadsheets/d/18aXD_2ISvzB8h8_kgOfSBbr9a9d9pT0QVazt-KjVLRw/edit#gid=655855284",
dec = ",")
# mostrar os dados
knitr::kable(df)
#| out-width: "100%"
comp_folha <- import("https://docs.google.com/spreadsheets/d/18aXD_2ISvzB8h8_kgOfSBbr9a9d9pT0QVazt-KjVLRw/edit#gid=0",
dec = ",")
# Tabela
dist_comprimento <- freq_table(comp_folha, var = comprimento)
knitr::kable(dist_comprimento$freqs)
# Gráfico
freq_hist(dist_comprimento)
library(rio)
df <- import("https://docs.google.com/spreadsheets/d/18aXD_2ISvzB8h8_kgOfSBbr9a9d9pT0QVazt-KjVLRw/edit#gid=0",
dec = ",")
View(df)
library(metan)
detach("package:metan", unload = TRUE)
library(metan)
View(df)
freq <- freq_table(df, var = largura)
View(freq)
View(freq[["freqs"]])
View(df)
View(freq[["freqs"]])
View(df)
range(df$largura)
7,5-3,8
7.5-3.8
3.7/4
freq_hist(freq)
View(df)
freq <- freq_table(df, var = ramo)
freq_hist(freq)
View(freq)
View(freq[["freqs"]])
freq <- freq_table(df, var = largura)
View(freq)
34*.25
1+1
1+1
1+1
1+1
print("bom dia")
meu_nome <- function(nome){
print("Meu nome é", nome)
}
meu_nome("Tiago")
meu_nome <- function(nome){
print("Meu nome é", nome)
}
meu_nome("Tiago")
mean(c(2, 5, 3, 20))
sd(c(2, 5, 3, 20))
var(c(2, 5, 3, 20))
8.42615 ^2
min(c(2, 5, 3, 20))
max(c(2, 5, 3, 20))
desc_stat(data_ge2)
library(metan)
detach("package:metan", unload = TRUE)
library(metan)
desc_stat(data_ge2)
data_ge2
1+1
library(metan)
setwd("E:/Desktop/UFSC/aulas/graduacao/bioestat_experimentacao/lista_exercicio")
getwd()
list.files()
detach("package:metan", unload = TRUE)
library(metan)
library(tinytex)
library(rio)
library(metan)
library(tidyverse)
library(rio)
library(metan)
library(tidyverse)
setwd("E:/Desktop/UFSC/aulas/graduacao/bioestat_experimentacao/lista_exercicio")
# definir diretório (muda de pc para pc)
# Section > set working directory
# Ctrl + Shift + H
setwd("E:/Desktop/UFSC/aulas/graduacao/bioestat_experimentacao/lista_exercicio")
getwd()
df <- import("https://docs.google.com/spreadsheets/d/18aXD_2ISvzB8h8_kgOfSBbr9a9d9pT0QVazt-KjVLRw/edit#gid=323183536")
View(df)
df <- import("https://docs.google.com/spreadsheets/d/18aXD_2ISvzB8h8_kgOfSBbr9a9d9pT0QVazt-KjVLRw/edit#gid=323183536",
dec = ",")
View(df)
df <- import("dados_pratica.xlsx")
View(df)
df <- import("dados_pratica.xlsx", sheet = "grupo")
df <- import("dados_pratica.xlsx", sheet = "grupos")
View(df)
df <- import("E:/Desktop/UFSC/aulas/graduacao/bioestat_experimentacao/lista_exercicio/dados_pratica.xlsx", sheet = "grupos")
# mostrar dados
head(df) # primeiras 6 linhas
View(df)
View(df)
View(df)
# filtrar os dados apenas das folhas
folha <- subset(df, tipo == "Folha")
View(folha)
View(folha)
mean(folha$comprimento)
folha$comprimento
(cf <- folha$comprimento)
folha$comprimento
mean(cf)
mean(folha$comprimento)
sd(cf)
(cf <- folha$comprimento)
# filtrar os dados apenas das folhas
folha <- subset(df, tipo == "Folha")
(cf <- folha$comprimento)
df <- import("dados_pratica.xlsx", sheet = "grupos")
# filtrar os dados apenas das folhas
folha <- subset(df, tipo == "Folha")
(cf <- folha$comprimento)
# forma raiz
n <- length(cf)
sum(cf)
sum(cf) / n
# forma nutela
media <- mean(cf)
media
View(folha)
58/2
View(folha)
sort(cf)
# forma raiz
cf_ordenado <- sort(cf)
(n + 1) / 2
(57 + 1) / 2
# forma nutela
media <- mean(cf)
media
cf[29]
cf_ordenado[elemento]
# número ímpar
elemento <- (n + 1) / 2
cf_ordenado[elemento]
cf_ordenado
cf_ordenado[elemento]
# forma nutela
median(cf)
# forma raiz
cf_ordenado <- sort(cf)
# número ímpar
elemento <- (n + 1) / 2
cf_ordenado[elemento]
# forma raiz
sort(cf)
# forma raiz
cf_ordenado <-  sort(cf)
(n + 1) / 2
# número ímpar
elemento <- (n + 1) / 2
cf_ordenado
cf_ordenado[29]
cf_ordenado[elemento]
median2 <- function(dados){
if(length(dados) %% 2 == 0){ # checa se o conjunto é par
# ordena os dados
cf_ordenado <- sort(dados)
# acha os dois números centrais
e1 <- n / 2
e2 <- n / 2 + 1
# faz a média dos dois números centrais
mean(cf_ordenado[e1:e2])
} else{
# se ímpar, pega o número central
cf_ordenado <- sort(dados)
cf_ordenado[(length(dados) + 1) / 2]
}
}
median2(cf)
median2 <- function(dados){
if(length(dados) %% 2 == 0){ # checa se o conjunto é par
# ordena os dados
cf_ordenado <- sort(dados)
# acha os dois números centrais
e1 <- n / 2
e2 <- n / 2 + 1
# faz a média dos dois números centrais
mean(cf_ordenado[e1:e2])
} else{
# se ímpar, pega o número central
cf_ordenado <- sort(dados)
cf_ordenado[(length(dados) + 1) / 2]
}
}
median(cf)
max(cf)
# forma raiz
maximo <- max(cf)
minimo <- min(cf)
# amplitude
maximo - minimo
# forma raiz
maximo <- max(cf)
minimo <- min(cf)
# amplitude
maximo - minimo
# amplitude
maximo * minimo
# amplitude
maximo ^ minimo
# forma nutela
range_data(cf)
media
desvio <- cf - media
desvio
desvio2 <- desvio ^ 2
desvio2
2.201585e+01
(n - 1)
sum(desvio2)
# forma raiz
variancia <- sum(desvio2) / (n - 1)
variancia
(n - 1)
sum(desvio2) / n
sum(desvio2) / n - 1
# forma raiz
variancia <- sum(desvio2) / (n - 1)
variancia
# forma nutela
var(cf)
sqrt(variancia)
# FORMA RAIZ
desviopad <- sqrt(variancia)
desviopad
View(df)
# FORMA NUTELA
sd(cf)
cf10 <- cf * 10
# vendo o que acontece com a variancia e o desvio padrao
var(cf10)
sd(cf10)
# coeficiente de variacao
desviopad / media * 100
View(folha)
descritiva <- desc_stat(folha, comprimento)
View(descritiva)
descritiva <- desc_stat(folha, comprimento, stats = "all")
View(descritiva)
descritiva <-
desc_stat(folha,  stats = "all")
View(descritiva)
View(folha)
View(folha)
descritiva <-
desc_stat(folha,
stats = "all",
by = grupo)
View(descritiva)
descritiva <-
desc_stat(folha,
by = grupo)
View(descritiva)
View(folha)
View(descritiva)
export(descritiva, "descritiva.xlsx")
View(folha)
export(descritiva, "descritiva.txt")
1+1
2^2
6/2
1+1
1+1
soma
# soma sdfasdfsdf
1+1
2 + 3 + 4
2 + 3 + 4 / 3
(2 + 3 + 4) / 3
mean(c(2, 3, 4))
c(2, 3, 4)
sd(2, 3, 4)
(
sd(c(2, 3, 4))
sd(c(2, 3, 4))
sd(c(2, 3, 4))
sd(c(2, 3, 4))
max(c(2, 3, 4))
min(c(2, 3, 4))
range(c(2, 3, 4))
install.packages("tinytex")
library(tinytex)
library(tinytex)
library(metan)
version
setwd("E:/Desktop/UFSC/aulas/graduacao/bioestat_experimentacao/lista_exercicio")
setwd("E:/Desktop/UFSC/aulas/graduacao/bioestat_experimentacao/lista_exercicio")
setwd("E:/Desktop/UFSC/aulas/graduacao/bioestat_experimentacao/lista_exercicio")
list.files()
x <- c(0:10, 50)
c(0:10, 50)
a <- c(0:10, 50)
mean(x)
mean(c(0:10, 50))
a <- 'teste'
mean(a)
x * 2
x - 2
x + 2
x/2
x^2
sqrt(x)
x
list.files()
list.files()
df <- import("dados_pratica.xlsx")
library(rio)
library(metan)
library(tidyverse)
df <- import("dados_pratica.xlsx")
df <- import("dados_praticas.xlsx")
import("dados_pratica.xlsx")
df <- import("dados_pratica.xlsx", sheet = "grupos")
View(df)
library(rio)
library(metan)
df <- import("https://docs.google.com/spreadsheets/d/18aXD_2ISvzB8h8_kgOfSBbr9a9d9pT0QVazt-KjVLRw/edit#gid=323183536",
dec = ",")
