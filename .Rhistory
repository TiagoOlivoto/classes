producao <-
df |>
filter(Element == "Production") |>
select(-c(Element, Unit))
View(producao)
View(area)
View(area)
View(producao)
producao <-
df |>
filter(Element == "Production") |>
select(-c(Element, Unit)) |>
unite(Year, value)
producao <-
df |>
filter(Element == "Production") |>
select(-c(Element, Unit)) |>
unite(Year, Value)
View(producao)
unite
producao <-
df |>
filter(Element == "Production") |>
select(-c(Element, Unit)) |>
unite("ano_producao" Year, Value)
producao <-
df |>
filter(Element == "Production") |>
select(-c(Element, Unit)) |>
unite("ano_producao", Year, Value)
View(producao)
View(producao)
View(area)
View(producao)
View(area)
area |> pivot_longer(-Pais)
area <-
df |>
filter(Element == "Area harvested") |>
pivot_wider(names_from = Year,
values_from = Value) |>
select(-c(Element, Unit)) |>
sample_n(104)
View(area)
View(producao)
producao <-
df |>
filter(Element == "Production") |>
select(-c(Element, Unit)) |>
unite("ano_producao", Year, Value) |>
mutate(Pais = toupper(Pais))
View(producao)
producao <-
df |>
filter(Element == "Production") |>
select(-c(Element, Unit)) |>
unite("ano_producao", Year, Value) |>
mutate(Pais = tolower(Pais))
View(producao)
producao <-
df |>
filter(Element == "Production") |>
select(-c(Element, Unit)) |>
unite("ano_producao", Year, Value) |>
mutate(Pais = toupper(Pais))
View(producao)
104*61
104*60
export(producao, "producao.xlsx")
export(area, "area.xlsx")
d <- import("area.xlsx")
d <- import("faostat/area.xlsx")
View(d)
library(calendR)
# tutorial calendR
# https://r-coder.com/calendar-plot-r/
events <- rep(NA, 61)
events[c(21,  28, 32)] <- "08:20 às 11:50"
# tutorial calendR
# https://r-coder.com/calendar-plot-r/
events <- rep(NA, 61)
events[c(21,  28, 32)] <- "08:20 às 11:50"
events[c(23, 25, 29:31)] <- "13:30 às 16:00"
img <- "figs/calendr.png"
# Creating the calendar
calendR(year = 2022,
start_date ="2022-11-01",
end_date = "2022-12-31",
special.days = events,
special.col = c("lightsalmon", "lightgreen"),
title = "RGV410046 - Introdução à linguagem R de programação",
subtitle = "Cronograma de aulas",
mbg.col = "forestgreen",
months.col = "white",
bg.img = img,
legend.pos = "bottom")
#| code-fold: true
#| code-summary: "Clique aqui e veja como o calendário foi feito!"
#| out-width: "100%"
#| warning: false
#| message: false
library(calendR)
# tutorial calendR
# https://r-coder.com/calendar-plot-r/
events <- rep(NA, 61)
events[c(21,  28, 32)] <- "08:20 às 11:50"
events[c(23, 25, 29:31)] <- "13:30 às 16:00"
img <- "figs/calendr.png"
# Creating the calendar
calendR(year = 2022,
start_date ="2022-11-01",
end_date = "2022-12-31",
special.days = events,
special.col = c("lightsalmon", "lightgreen"),
title = "RGV410046 - Introdução à linguagem R de programação",
subtitle = "Cronograma de aulas",
mbg.col = "forestgreen",
months.col = "white",
bg.img = img,
legend.pos = "bottom")
events
calendR(2022)
# Creating the calendar
calendR(year = 2022,
start_date ="2022-11-01",
end_date = "2022-12-31",
special.days = events,
special.col = c("lightsalmon", "lightgreen"),
title = "RGV410046 - Introdução à linguagem R de programação",
subtitle = "Cronograma de aulas",
mbg.col = "forestgreen",
months.col = "white",
bg.img = img,
legend.pos = "bottom")
img <- "RGV410046/figs/calendr.png"
img <- "RGV410046/figs/calendr.png"
# Creating the calendar
calendR(year = 2022,
start_date ="2022-11-01",
end_date = "2022-12-31",
special.days = events,
special.col = c("lightsalmon", "lightgreen"),
title = "RGV410046 - Introdução à linguagem R de programação",
subtitle = "Cronograma de aulas",
mbg.col = "forestgreen",
months.col = "white",
bg.img = img,
legend.pos = "bottom")
setwd("E:/Desktop/UFSC/aulas/classes/RGV410046")
img <- "RGV410046/figs/calendr.png"
# Creating the calendar
calendR(year = 2022,
start_date ="2022-11-01",
end_date = "2022-12-31",
special.days = events,
special.col = c("lightsalmon", "lightgreen"),
title = "RGV410046 - Introdução à linguagem R de programação",
subtitle = "Cronograma de aulas",
mbg.col = "forestgreen",
months.col = "white",
bg.img = img,
legend.pos = "bottom")
img <- "/figs/calendr.png"
img <- "/figs/calendr.png"
# Creating the calendar
calendR(year = 2022,
start_date ="2022-11-01",
end_date = "2022-12-31",
special.days = events,
special.col = c("lightsalmon", "lightgreen"),
title = "RGV410046 - Introdução à linguagem R de programação",
subtitle = "Cronograma de aulas",
mbg.col = "forestgreen",
months.col = "white",
bg.img = img,
legend.pos = "bottom")
setwd("E:/Desktop/UFSC/aulas/classes/RGV410046")
img <- "figs/calendr.png"
# Creating the calendar
calendR(year = 2022,
start_date ="2022-11-01",
end_date = "2022-12-31",
special.days = events,
special.col = c("lightsalmon", "lightgreen"),
title = "RGV410046 - Introdução à linguagem R de programação",
subtitle = "Cronograma de aulas",
mbg.col = "forestgreen",
months.col = "white",
bg.img = img,
legend.pos = "bottom")
library(calendR)
# tutorial calendR
# https://r-coder.com/calendar-plot-r/
events <- rep(NA, 61)
events[c(21,  28, 32)] <- "08:20 às 11:50"
events[c(23, 25, 29:31)] <- "13:30 às 16:00"
img <- "figs/calendr.png"
# Creating the calendar
calendR(year = 2022,
start_date ="2022-11-01",
end_date = "2022-12-31",
special.days = events,
special.col = c("lightsalmon", "lightgreen"),
title = "RGV410046 - Introdução à linguagem R de programação",
subtitle = "Cronograma de aulas",
mbg.col = "forestgreen",
months.col = "white",
bg.img = img,
legend.pos = "bottom")
# tutorial calendR
# https://r-coder.com/calendar-plot-r/
events <- rep(NA, 61)
events[c(21,  28, 32)] <- "08:20 às 11:50"
events[c(23, 25, 29:31)] <- "13:30 às 16:00"
img <- "figs/calendr.png"
# Creating the calendar
calendR(year = 2022,
start_date ="2022-11-01",
end_date = "2022-12-31",
special.days = events,
special.col = c("lightsalmon", "lightgreen"),
title = "RGV410046 - Introdução à linguagem R de programação",
subtitle = "Cronograma de aulas",
mbg.col = "forestgreen",
months.col = "white",
bg.img = img,
legend.pos = "bottom")
# tutorial calendR
# https://r-coder.com/calendar-plot-r/
events <- rep(NA, 61)
events[c(21,  28, 32)] <- "08:20 às 11:50"
events[c(23, 25, 29:31)] <- "13:30 às 16:00"
img <- "figs/calendr.png"
# Creating the calendar
calendR(year = 2022,
start_date ="2022-11-01",
end_date = "2022-12-31",
special.days = events,
special.col = c("lightsalmon", "lightgreen"),
title = "RGV410046 - Introdução à linguagem R de programação",
subtitle = "Cronograma de aulas",
mbg.col = "forestgreen",
months.col = "white",
bg.img = img,
legend.pos = "bottom")
c(23, 25, 29:31)
# tutorial calendR
# https://r-coder.com/calendar-plot-r/
events <- rep(NA, 61)
events[c(21,  28, 32)] <- "08:20 às 11:50"
events[c(23, 25, 30:31)] <- "13:30 às 16:00"
img <- "figs/calendr.png"
# Creating the calendar
calendR(year = 2022,
start_date ="2022-11-01",
end_date = "2022-12-31",
special.days = events,
special.col = c("lightsalmon", "lightgreen"),
title = "RGV410046 - Introdução à linguagem R de programação",
subtitle = "Cronograma de aulas",
mbg.col = "forestgreen",
months.col = "white",
bg.img = img,
legend.pos = "bottom")
maize <-
import("examples_data.xlsx",
sheet = "maize",
setclass = "tbl")
# meu computador (mudar de acordo)
setwd("E:/Desktop/UFSC/aulas/classes/RGV410046/data")
maize <-
import("examples_data.xlsx",
sheet = "maize",
setclass = "tbl")
View(maize)
# seleciona variáveis numéricas
df |> select(where(is.numeric))
df |> select(!where(is.numeric))
x11()
plot(maize$MGRA, maize$MGRA)
plot(maize$MGRA, maize$NGRA)
locator(n = 1)
locator(n = 1, type = "p")
locator(n = 1, type = "p", col = "red")
x11()
locator(n = 1, type = "p", col = "red")
plot(maize$MGRA, maize$NGRA)
locator(n = 1, type = "p", col = "red")
library(rio)
library(metan)
library(rio)
library(tidyverse)
library(metan)
df <- import("https://docs.google.com/spreadsheets/d/1u22hW0M-Ckzkr7idrAmPqHnt3GMG3GjIyjG2Q1Y5LnM/edit#gid=762870780",
dec = ",") |>
as_factor(1:4)
View(df)
df2 <-
df |>
mean_by(1:3)
mean_by
df |>
mean_by(1:3)
View(df)
df |>
group_by(2) |>
summarise(media = mean(AP))
View(df)
df |>
group_by(cobertura) |>
summarise(media = mean(AP))
df2 <-
df |>
# group_by(cobertura) |>
# summarise(media = mean(AP))
mean_by(rep:adubaca)
df2
df2 <-
df |>
# group_by(cobertura) |>
# summarise(media = mean(AP))
mean_by(rep, adubaca)
df2
View(df)
df2 <-
df |>
# group_by(cobertura) |>
# summarise(media = mean(AP))
mean_by(rep, cobertura, adubaca)
df2
library(esquisse)
esquisser(df2)
esquisser(df2, viewer = "browser")
ggplot(df2) +
aes(x = cobertura, fill = adubaca, weight = ML) +
geom_bar(position = "dodge") +
scale_fill_hue(direction = 1) +
theme_minimal()
ggplot(df2) +
aes(x = cobertura, fill = adubaca, y = ML) +
geom_bar(position = "dodge") +
scale_fill_hue(direction = 1) +
theme_minimal()
ggplot(df2) +
aes(x = cobertura, fill = adubaca, y = ML) +
geom_col(position = "dodge") +
scale_fill_hue(direction = 1) +
theme_minimal()
esquisser(df2, viewer = "browser")
esquisser(df2, viewer = "browser")
df2
df2 <-
df |>
# group_by(cobertura) |>
# summarise(media = mean(AP))
mean_by(cobertura, adubaca)
df2
esquisser(df2, viewer = "browser")
ggplot(df2) +
aes(x = cobertura, y = ML, fill = adubaca) +
geom_col() +
scale_fill_hue(direction = 1) +
theme_minimal()
ggplot(df2) +
aes(x = cobertura, y = ML, fill = adubaca) +
geom_col(position = "dodge") +
scale_fill_hue(direction = 1) +
theme_minimal()
df2
ggplot(df2) +
aes(x = cobertura, y = ML, fill = adubaca) +
geom_col(position = "dodge") +
# scale_fill_hue(direction = 1) +
theme_minimal()
ggplot(df2) +
aes(x = cobertura, y = ML, fill = adubaca) +
geom_col(position = "dodge")
ggplot(df2) +
aes(x = cobertura, y = ML, fill = adubaca) +
geom_col(position = "dodge") +
# scale_fill_hue(direction = 1) +
theme_minimal()
ggplot(df2) +
aes(x = cobertura, y = ML, fill = adubaca) +
geom_col(position = "dodge") +
scale_fill_hue(direction = 1) +
theme_minimal()
df2 <-
df |>
# group_by(cobertura) |>
# summarise(media = mean(AP))
mean_by(rep, cobertura, adubaca)
df2
library(AgroR)
with(df2,
FAT2DBC(cobertura, adubaca, rep, ML))
4.820667e-01
df2
with(df2,
FAT2DBC(cobertura, adubaca, rep, NL))
with(df2,
FAT2DBC(cobertura, adubaca, rep, AP))
with(df2,
FAT2DBC(cobertura, adubaca, rep, NF))
with(df2,
FAT2DBC(cobertura, adubaca, rep, ML))
df2
with(df2,
PSUBDBC(cobertura, adubaca, rep, ML))
with(df2,
FAT2DBC(cobertura, adubaca, rep, ML))
install.packages(c("AgroR", "bit", "bsplus", "clue", "data.table", "datamods", "datawizard", "exactextractr", "fmsb", "gamlss", "ggpubr", "ggspatial", "ggstance", "ggstatsplot", "glmnet", "globals", "graphlayouts", "gtools", "HDInterval", "Hmisc", "insight", "inti", "knitr", "ks", "lwgeom", "magic", "markdown", "matrixStats", "mc2d", "mice", "msm", "npde", "parameters", "pbapply", "performance", "pkgbuild", "pkgload", "raster", "rbibutils", "s2", "sass", "secr", "seqinr", "shinyWidgets", "spatialEco", "spatstat.linnet", "spData", "stars", "terra", "tvthemes", "vctrs", "xfun"))
install.packages(c("AgroR", "bit", "bsplus", "clue", "data.table", "datamods", "datawizard", "exactextractr", "fmsb", "gamlss", "ggpubr", "ggspatial", "ggstance", "ggstatsplot", "glmnet", "globals", "graphlayouts", "gtools", "HDInterval", "Hmisc", "insight", "inti", "knitr", "ks", "lwgeom", "magic", "markdown", "matrixStats", "mc2d", "mice", "msm", "npde", "parameters", "pbapply", "performance", "pkgbuild", "pkgload", "raster", "rbibutils", "s2", "sass", "secr", "seqinr", "shinyWidgets", "spatialEco", "spatstat.linnet", "spData", "stars", "terra", "tvthemes", "vctrs", "xfun"))
install.packages(c("AgroR", "bit", "bsplus", "clue", "data.table", "datamods", "datawizard", "exactextractr", "fmsb", "gamlss", "ggpubr", "ggspatial", "ggstance", "ggstatsplot", "glmnet", "globals", "graphlayouts", "gtools", "HDInterval", "Hmisc", "insight", "inti", "knitr", "ks", "lwgeom", "magic", "markdown", "matrixStats", "mc2d", "mice", "msm", "npde", "parameters", "pbapply", "performance", "pkgbuild", "pkgload", "raster", "rbibutils", "s2", "sass", "secr", "seqinr", "shinyWidgets", "spatialEco", "spatstat.linnet", "spData", "stars", "terra", "tvthemes", "vctrs", "xfun"))
library(AgroR)
library(AgroR)
data(enxofre)
respAd=c(2000,2400,2530,2100)
with(enxofre, FAT3DIC.ad(f1, f2, f3, bloco, resp, respAd))
library(pliman)
set_wd_here()
img <- image_import("B2_E1_D_P3.jpg")
analyze_objects(img,
reference = TRUE,
reference_area = 20)
ref <-
analyze_objects(img,
reference = TRUE,
reference_area = 20,
filter = 2,
fill_hull = TRUE,
marker = "point")
ref <-
analyze_objects(img |> image_horizontal(),
reference = TRUE,
reference_area = 20,
filter = 2,
fill_hull = TRUE,
marker = "point")
ref <-
analyze_objects(img |> image_horizontal(),
reference = TRUE,
reference_area = 20,
filter = 2,
fill_hull = TRUE,
tolerance = 0.3,
marker = "point")
ref <-
analyze_objects(img |> image_horizontal(),
reference = TRUE,
reference_area = 20,
filter = 2,
filter = 3,
tolerance = 0.3,
marker = "point")
ref <-
analyze_objects(img |> image_horizontal(),
reference = TRUE,
reference_area = 20,
filter = 3,
tolerance = 0.3,
marker = "point")
df <- import("https://docs.google.com/spreadsheets/d/1u22hW0M-Ckzkr7idrAmPqHnt3GMG3GjIyjG2Q1Y5LnM/edit#gid=762870780",
dec = ",") |>
as_factor(1:4)
library(rio)
library(tidyverse)
library(metan)
df <- import("https://docs.google.com/spreadsheets/d/1u22hW0M-Ckzkr7idrAmPqHnt3GMG3GjIyjG2Q1Y5LnM/edit#gid=762870780",
dec = ",") |>
as_factor(1:4)
df2 <-
df |>
# group_by(cobertura) |>
# summarise(media = mean(AP))
mean_by(rep, cobertura, adubaca)
with(df2,
FAT2DBC(cobertura, adubaca, rep, ML))
DF <- clip_read()
with(DF, FAT2DBC(RECIPIENTE, ESPECIE, BLOCO, VARIAVEL))
198.79-087-92-19-63
198.79-0.87-92-19-63
8.965755e-01
df <- import("https://docs.google.com/spreadsheets/d/1hMQGiUQ2rqQ8866fOxa2JuAoYutVCnxjBB3e1rdXZMw/edit#gid=2144853996",
dec = ",") |>
as_factor(1:4)
df <- import("https://docs.google.com/spreadsheets/d/1hMQGiUQ2rqQ8866fOxa2JuAoYutVCnxjBB3e1rdXZMw/edit#gid=2144853996",
dec = ",") |>
as_factor(1:4)
View(df)
library(tidyverse)
df <- expand_grid(BLOCO = c("B1", "B2", "B3"),
MILHO = c("CRIOULO", "TRANSGENICO"),
ADUBACAO = c("AO","AQ","TEST"),
PLANTA = 1:17)
View(df)
clipr::write_clip(df)
df <- expand_grid(BLOCO = c("B1", "B2", "B3"),
MILHO = c("CRIOULO", "TRANSGENICO"),
ADUBACAO = c("AO","AQ","TEST"),
PLANTA = paste0("P", 1:17))
clipr::write_clip(df)
library(rio)
df <- import("https://docs.google.com/spreadsheets/d/1f2XVdvg3QGljiZRxr-BfMmstY93pk2UWI5aFJWHTpfk/edit#gid=141884787",
dec = ",")
View(df)
df <- expand_grid(BLOCO = c("B1", "B2", "B3"),
COBERTURA = c("SC", "PINUS", "GALHADA"),
ADUBACAO = c("AO","AQ"),
PLANTA = paste0("P", 1:5))
clipr::write_clip(df)
setwd("E:/Desktop/UFSC/aulas/graduacao/bioestat_experimentacao/11_fatoriais/script_fatorial")
