e(100) # exponencial
(x <- matrix(1:4, ncol = 2))
(y <- matrix(5:8, ncol = 2))
x * y # Errado
x %*% y # Certo
(A <- matrix(c(1, 1, 1, 2, -1, 1), nrow = 3, ncol = 2))
Ainv <- solve(A)
Ainv <- MASS::ginv(A)
Ainv
metan::solve_svd(A)
Ainv <- MASS::ginv(A) # Obtém a inversa generalizada de A
c <- c(4, 1, 3) # Vetor C
(A <- matrix(c(1, 1, 1, 2, -1, 1), nrow = 3, ncol = 2))
(Ainv <- MASS::ginv(A)) # Obtém a inversa generalizada de A
(c <- c(4, 1, 3)) # Vetor C
(X <- A1 %*% c)
(X <- Ainv %*% c)
(X <- matrix(c(0, 2, 4, 3, 5, 0, 2, 4, 4), nrow = 3))
(detX <- det())
(detX <- det(X))
(av <- eigen(mat))
(av <- eigen(X))
X
(av <- eigen(X))
X
(detX <- det(X))
(X <- matrix(c(1, 5, 2, 3)
(X <- matrix(c(1, 5, 2, 3))
X
X
(X <- matrix(c(1, 5, 2, 3))
X
(X <- matrix(c(1, 5, 2, 3)))
(X <- matrix(c(1, 5, 2, 3)), ncol = 2)
(X <- matrix(c(1, 5, 2, 3), ncol = 2))
(X <- matrix(c(1, 2, 5, 3), ncol = 2))
(detX <- det(X))
(av <- eigen(X))
diag(X)
(X <- matrix(c(1, 2, 5, 3, 4, 5, 6, 1, 9), ncol = 3))
(detX <- det(X))
(av <- eigen(X))
av$values # Extrai os autovalores
diag(X)
diag(x = 1, nrow = 3, ncol = 3)
(A <- matrix(c(1, 1, 1, 2, -1, 1), nrow = 3, ncol = 2))
# Transposta de A
t(A)
MASS::ginv(A) %*% c(4, 1, 3)
matrix(c(1, 1, 1, 2, -1, 1), nrow = 3, ncol = 2)
MASS::ginv(matrix(c(1, 1, 1, 2, -1, 1), nrow = 3, ncol = 2)) %*% c(4, 1, 3)
matrix(c(1, 1, 2, -1))
(A <- matrix(c(1, 1, 2, -1), ncol = 2)
(A <- matrix(c(1, 1, 2, -1), ncol = 2))
(A <- matrix(c(1, 1, 2, -1), ncol = 2))
matrix(c(1, 1, 2, -1), ncol = 2)
matrix(c(1, 1, 2, -1), ncol = 2)
(A <- matrix(c(1, 1, 2, -1), ncol = 2))
# Transposta de A
t(A)
solve(A)
(c <- c(4, 1)) # Vetor C
(A <- matrix(c(1, 1, 2, -1), ncol = 2))
# Transposta de A
t(A)
# resolução do sistema de equações
(Ainv <- solve(A)) # Obtém a inversa generalizada de A
(c <- c(4, 1)) # Vetor C
(X <- Ainv %*% c)
solve(A)
(X <- Ainv %*% c)
solve(matrix(c(1, 1, 2, -1), ncol = 2)) %*% c(4, 1)
library(rio)
library(rio)
df_altura <-
import("https://docs.google.com/spreadsheets/d/1JMrkppvv1BdGKVCekzZPsPYCKcgUWjxpuDlWqejc22s/edit#gid=1992833755") |>
as_character(Pessoa)
df_altura
df_altura <-
import("https://docs.google.com/spreadsheets/d/1JMrkppvv1BdGKVCekzZPsPYCKcgUWjxpuDlWqejc22s/edit#gid=1992833755") |>
metan::as_character(Pessoa)
df_altura
View(df_altura)
get_ci_t <- function(media, dp, n){
quantil_t <- qt(0.975, n - 1)
semi_amp <- quantil_t * dp / sqrt(n)
message(
"[", round(media - semi_amp, 3), " ; ", round(media + semi_amp, 3), "]"
)
return(semi_amp)
}
get_ci_t(168, sqrt(67.404), 20)
get_ci_t <- function(media, dp, n){
quantil_t <- qt(0.975, n - 1)
semi_amp <- quantil_t * dp / sqrt(n)
message(
"[", round(media - semi_amp, 3), "<= mu <= ", round(media + semi_amp, 3), "]"
)
return(semi_amp)
}
get_ci_t(168, sqrt(67.404), 20)
get_ci_t <- function(media, dp, n){
quantil_t <- qt(0.975, n - 1)
semi_amp <- quantil_t * dp / sqrt(n)
message(
"[", round(media - semi_amp, 3), " <= mu <= ", round(media + semi_amp, 3), "]"
)
return(semi_amp)
}
get_ci_t(168, sqrt(67.404), 20)
df_altura <-
import("https://docs.google.com/spreadsheets/d/1JMrkppvv1BdGKVCekzZPsPYCKcgUWjxpuDlWqejc22s/edit#gid=1461701268") |>
metan::as_character(Pessoa)
df_altura <-
import("https://docs.google.com/spreadsheets/d/1JMrkppvv1BdGKVCekzZPsPYCKcgUWjxpuDlWqejc22s/edit#gid=1461701268")
View(df_altura)
df_altura <-
import("https://docs.google.com/spreadsheets/d/1JMrkppvv1BdGKVCekzZPsPYCKcgUWjxpuDlWqejc22s/edit#gid=1461701268") |>
metan::remove_rows_na()
View(df_altura)
t.test(altura~cromossomo, data = df_altura)
df_altura <-
import("https://docs.google.com/spreadsheets/d/1JMrkppvv1BdGKVCekzZPsPYCKcgUWjxpuDlWqejc22s/edit#gid=1461701268")
DataExplorer::plot_intro(df_altura)
df_altura
df_altura <-
import("https://docs.google.com/spreadsheets/d/1JMrkppvv1BdGKVCekzZPsPYCKcgUWjxpuDlWqejc22s/edit#gid=1461701268") |>
metan::remove_rows_na() # remove valores faltantes
df_altura
str(df_altura)
dplyr::glimpse(df_altura)
str(df_altura)
df_altura <-
import("https://docs.google.com/spreadsheets/d/18aXD_2ISvzB8h8_kgOfSBbr9a9d9pT0QVazt-KjVLRw/edit#gid=1590128876") |>
metan::remove_rows_na() # remove valores faltantes
View(df_altura)
t.test(altura~crm, data = df_altura)
View(df_altura)
(quantil_t <- qt(c(0.025, 0.975), df = 24))
(media <- mean(df_altura$altura))
(media <- mean(df_altura$altura))
(quantil_t <- qt(c(0.025, 0.975), df = 24))
(media <- mean(df_altura$altura))
(desvpad <- sd(df_altura$altura))
get_ci_t(media, desvpad, n = 25)
get_ci_t <- function(media, dp, n){
quantil_t <- qt(0.975, n - 1)
semi_amp <- quantil_t * dp / sqrt(n)
message(
"[", round(media - semi_amp, 3), " <= mu <= ", round(media + semi_amp, 3), "]"
)
return(semi_amp)
}
(n <- nrow(df_altura))
get_ci_t(media, desvpad, n)
ic <- t.test(df_altura$altura)
ic$conf.int
#| code-fold: true
#| out-width: "100%"
df <- tibble(
media = media,
desvpad = desvpad,
LI = media - get_ci_t(media, desvpad, 20),
LS = media + get_ci_t(media, desvpad, 20)
)
library(tidyverse)
#| code-fold: true
#| out-width: "100%"
df <- tibble(
media = media,
desvpad = desvpad,
LI = media - get_ci_t(media, desvpad, 20),
LS = media + get_ci_t(media, desvpad, 20)
)
df
# criar o gráfico com os intervalos
ggplot(df, aes(x = media, y = "")) +
geom_errorbar(aes(xmin = LI,
xmax = LS),
width = 0.1) +
geom_point(color = "blue",
size = 3) +
scale_x_continuous(breaks = seq(169, 177, by = 1)) +
labs(x = "Altura do aluno (cm)",
y = "")
# criar o gráfico com os intervalos
ggplot(df, aes(x = media, y = "")) +
geom_errorbar(aes(xmin = LI,
xmax = LS),
width = 0.1) +
geom_point(color = "blue",
size = 3) +
# scale_x_continuous(breaks = seq(169, 177, by = 1)) +
labs(x = "Altura do aluno (cm)",
y = "")
range(df_altura$altura)
# criar o gráfico com os intervalos
ggplot(df, aes(x = media, y = "")) +
geom_errorbar(aes(xmin = LI,
xmax = LS),
width = 0.1) +
geom_point(color = "blue",
size = 3) +
scale_x_continuous(breaks = seq(156, 190, by = 1)) +
labs(x = "Altura do aluno (cm)",
y = "")
# criar o gráfico com os intervalos
ggplot(df, aes(x = media, y = "")) +
geom_errorbar(aes(xmin = LI,
xmax = LS),
width = 0.1) +
geom_point(color = "blue",
size = 3) +
scale_x_continuous(breaks = seq(156, 190, by = 2)) +
labs(x = "Altura do aluno (cm)",
y = "")
seq(156, 190, by = 1)
# criar o gráfico com os intervalos
ggplot(df, aes(x = media, y = "")) +
geom_errorbar(aes(xmin = LI,
xmax = LS),
width = 0.1) +
geom_point(color = "blue",
size = 3) +
scale_x_continuous(breaks = seq(156, 190, by = 2)) +
labs(x = "Altura do aluno (cm)",
y = "")
seq(156, 190, by = 2)
# criar o gráfico com os intervalos
ggplot(df, aes(x = media, y = "")) +
geom_errorbar(aes(xmin = LI,
xmax = LS),
width = 0.1) +
geom_point(color = "blue",
size = 3) +
scale_x_continuous(breaks = seq(170, 190, by = 1)) +
labs(x = "Altura do aluno (cm)",
y = "")
# criar o gráfico com os intervalos
ggplot(df, aes(x = media, y = "")) +
geom_errorbar(aes(xmin = LI,
xmax = LS),
width = 0.1) +
geom_point(color = "blue",
size = 3) +
# scale_x_continuous(breaks = seq(170, 190, by = 1)) +
labs(x = "Altura do aluno (cm)",
y = "")
# criar o gráfico com os intervalos
ggplot(df, aes(x = media, y = "")) +
geom_errorbar(aes(xmin = LI,
xmax = LS),
width = 0.1) +
geom_point(color = "blue",
size = 3) +
scale_x_continuous(breaks = seq(165, 170, by = 1)) +
labs(x = "Altura do aluno (cm)",
y = "")
# criar o gráfico com os intervalos
ggplot(df, aes(x = media, y = "")) +
geom_errorbar(aes(xmin = LI,
xmax = LS),
width = 0.1) +
geom_point(color = "blue",
size = 3) +
scale_x_continuous(breaks = seq(165, 175, by = 1)) +
labs(x = "Altura do aluno (cm)",
y = "")
# criar o gráfico com os intervalos
ggplot(df, aes(x = media, y = "")) +
geom_errorbar(aes(xmin = LI,
xmax = LS),
width = 0.1) +
geom_point(color = "blue",
size = 3) +
scale_x_continuous(breaks = seq(163, 176, by = 1)) +
labs(x = "Altura do aluno (cm)",
y = "")
ggplot(df, aes(x = media, y = "")) +
geom_errorbar(aes(xmin = LI,
xmax = LS),
width = 0.1) +
geom_point(color = "blue",
size = 3) +
scale_x_continuous(breaks = seq(163, 176, by = 1))
# criar o gráfico com os intervalos
ggplot(df, aes(x = media, y = "")) +
geom_errorbar(aes(xmin = LI,
xmax = LS),
width = 0.1) +
geom_point(color = "blue",
size = 3) +
scale_x_continuous(breaks = seq(160, 176, by = 1)) +
labs(x = "Altura do aluno (cm)",
y = "")
# criar o gráfico com os intervalos
ggplot(df, aes(x = media, y = "")) +
geom_errorbar(aes(xmin = LI,
xmax = LS),
width = 0.1) +
geom_point(color = "blue",
size = 3) +
scale_x_continuous(breaks = seq(167, 176, by = 1)) +
labs(x = "Altura do aluno (cm)",
y = "")
# criar o gráfico com os intervalos
ggplot(df, aes(x = media, y = "")) +
geom_errorbar(aes(xmin = LI,
xmax = LS),
width = 0.1) +
geom_point(color = "blue",
size = 3) +
scale_x_continuous(breaks = seq(169, 176, by = 1)) +
labs(x = "Altura do aluno (cm)",
y = "")
# criar o gráfico com os intervalos
ggplot(df, aes(x = media, y = "")) +
geom_errorbar(aes(xmin = LI,
xmax = LS),
width = 0.1) +
geom_point(color = "blue",
size = 3) +
# scale_x_continuous(breaks = seq(167, 176, by = 1)) +
labs(x = "Altura do aluno (cm)",
y = "")
# criar o gráfico com os intervalos
ggplot(df, aes(x = media, y = "")) +
geom_errorbar(aes(xmin = LI,
xmax = LS),
width = 0.1) +
geom_point(color = "blue",
size = 3) +
scale_x_continuous(breaks = seq(167, 176, by = 1)) +
labs(x = "Altura do aluno (cm)",
y = "")
# criar o gráfico com os intervalos
ggplot(df, aes(x = media, y = "")) +
geom_errorbar(aes(xmin = LI,
xmax = LS),
width = 0.1) +
geom_point(color = "blue",
size = 3) +
scale_x_continuous(breaks = seq(167, 176, by = 1), limits = c(166, 177)) +
labs(x = "Altura do aluno (cm)",
y = "")
# criar o gráfico com os intervalos
ggplot(df, aes(x = media, y = "")) +
geom_errorbar(aes(xmin = LI,
xmax = LS),
width = 0.1) +
geom_point(color = "blue",
size = 3) +
scale_x_continuous(breaks = seq(166, 176, by = 1), limits = c(166, 177)) +
labs(x = "Altura do aluno (cm)",
y = "")
# criar o gráfico com os intervalos
ggplot(df, aes(x = media, y = "")) +
geom_errorbar(aes(xmin = LI,
xmax = LS),
width = 0.1) +
geom_point(color = "blue",
size = 3) +
scale_x_continuous(breaks = seq(166, 175, by = 1), limits = c(166, 177)) +
labs(x = "Altura do aluno (cm)",
y = "")
# criar o gráfico com os intervalos
ggplot(df, aes(x = media, y = "")) +
geom_errorbar(aes(xmin = LI,
xmax = LS),
width = 0.1) +
geom_point(color = "blue",
size = 3) +
scale_x_continuous(breaks = seq(166, 175, by = 1), limits = c(166, 175)) +
labs(x = "Altura do aluno (cm)",
y = "")
# criar o gráfico com os intervalos
ggplot(df, aes(x = media, y = "")) +
geom_errorbar(aes(xmin = LI,
xmax = LS),
width = 0.1) +
geom_point(color = "blue",
size = 3) +
scale_x_continuous(breaks = seq(166, 175, by = 1), limits = c(166, 175)) +
labs(x = "Altura do aluno (cm)",
y = "") +
theme(panel.grid.minor = element_blank())
ic <- t.test(df_altura$altura)
ic$conf.int
# criar o gráfico com os intervalos
ggplot(df, aes(x = media, y = "")) +
geom_errorbar(aes(xmin = LI,
xmax = LS),
width = 0.1) +
geom_point(color = "blue",
size = 3) +
geom_text(aes(label = LS))
# criar o gráfico com os intervalos
ggplot(df, aes(x = media, y = "")) +
geom_errorbar(aes(xmin = LI,
xmax = LS),
width = 0.1) +
geom_point(color = "blue",
size = 3) +
geom_text(x = LS, aes(label = round(LS, 2)))
# criar o gráfico com os intervalos
ggplot(df, aes(x = media, y = "")) +
geom_errorbar(aes(xmin = LI,
xmax = LS),
width = 0.1) +
geom_point(color = "blue",
size = 3) +
geom_text(aes(x = LS,
label = round(LS, 2)))
# criar o gráfico com os intervalos
ggplot(df, aes(x = media, y = "")) +
geom_errorbar(aes(xmin = LI,
xmax = LS),
width = 0.1) +
geom_point(color = "blue",
size = 3) +
geom_text(aes(x = LS,
label = round(LS, 2)),
vjust = -3)
geom_text(aes(x = LI,
label = round(LI, 2)),
vjust = -3)
geom_text(aes(x = LI,
label = round(LI, 2)),
vjust = -3) +
scale_x_continuous(breaks = seq(166, 175, by = 1), limits = c(166, 175)) +
labs(x = "Altura do aluno (cm)",
y = "") +
theme(panel.grid.minor = element_blank())
# criar o gráfico com os intervalos
ggplot(df, aes(x = media, y = "")) +
geom_errorbar(aes(xmin = LI,
xmax = LS),
width = 0.1) +
geom_point(color = "blue",
size = 3) +
geom_text(aes(x = LS,
label = round(LS, 2)),
vjust = -3) +
geom_text(aes(x = LI,
label = round(LI, 2)),
vjust = -3) +
scale_x_continuous(breaks = seq(166, 175, by = 1), limits = c(166, 175)) +
labs(x = "Altura do aluno (cm)",
y = "") +
theme(panel.grid.minor = element_blank())
# criar o gráfico com os intervalos
ggplot(df, aes(x = media, y = "")) +
geom_errorbar(aes(xmin = LI,
xmax = LS),
width = 0.1) +
geom_point(color = "blue",
size = 3) +
geom_text(aes(x = LS,
label = round(LS, 2)),
vjust = -2) +
geom_text(aes(x = LI,
label = round(LI, 2)),
vjust = -2) +
scale_x_continuous(breaks = seq(166, 175, by = 1), limits = c(166, 175)) +
labs(x = "Altura do aluno (cm)",
y = "") +
theme(panel.grid.minor = element_blank())
# criar o gráfico com os intervalos
ggplot(df, aes(x = media, y = "")) +
geom_errorbar(aes(xmin = LI,
xmax = LS),
width = 0.1) +
geom_point(color = "blue",
size = 3) +
geom_text(aes(x = LS,
label = round(LS, 2)),
vjust = -1) +
geom_text(aes(x = LI,
label = round(LI, 2)),
vjust = -1) +
scale_x_continuous(breaks = seq(166, 175, by = 1), limits = c(166, 175)) +
labs(x = "Altura do aluno (cm)",
y = "") +
theme(panel.grid.minor = element_blank())
#| code-fold: true
#| out-width: "100%"
df <- tibble(
media = media,
desvpad = desvpad,
LI = media - get_ci_t(media, desvpad, n),
LS = media + get_ci_t(media, desvpad, n)
)
df
# criar o gráfico com os intervalos
ggplot(df, aes(x = media, y = "")) +
geom_errorbar(aes(xmin = LI,
xmax = LS),
width = 0.1) +
geom_point(color = "blue",
size = 3) +
geom_text(aes(x = LS,
label = round(LS, 2)),
vjust = -1) +
geom_text(aes(x = LI,
label = round(LI, 2)),
vjust = -1) +
scale_x_continuous(breaks = seq(166, 175, by = 1), limits = c(166, 175)) +
labs(x = "Altura do aluno (cm)",
y = "") +
theme(panel.grid.minor = element_blank())
# média por cromossomo
df_altura
