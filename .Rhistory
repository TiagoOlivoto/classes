92+19
# Aulas práticas no CCA
events[c(48, 69, 90, 111)] <- "3: Aulas práticas (análises)\nCCA\nC: 10:10-11:50\nA: 13:30-15:10\nB: 15:20-17:00"
# Creating the calendar
calendR(year = 2024,
from ="2024-08-01",
to = "2024-12-31",
special.days = events,
special.col = metan::ggplot_color(length(unique(na.omit(events)))),
title = "FIT5306 - Bioestatística e Experimentação Agrícola",
subtitle = "Cronograma de aulas - 2024/01",
subtitle.size = 15,
mbg.col = "forestgreen",
months.col = "white",
# bg.img = "figs/calendr.png",
legend.pos = "bottom",
day.size = 4,
months.size = 14,
orientation = "portrait")
31+30+31+30+3
# Aulas práticas no CCA
events[c(48, 69, 90, 111, 125)] <- "3: Aulas práticas (análises)\nCCA\nC: 10:10-11:50\nA: 13:30-15:10\nB: 15:20-17:00"
# Creating the calendar
calendR(year = 2024,
from ="2024-08-01",
to = "2024-12-31",
special.days = events,
special.col = metan::ggplot_color(length(unique(na.omit(events)))),
title = "FIT5306 - Bioestatística e Experimentação Agrícola",
subtitle = "Cronograma de aulas - 2024/01",
subtitle.size = 15,
mbg.col = "forestgreen",
months.col = "white",
# bg.img = "figs/calendr.png",
legend.pos = "bottom",
day.size = 4,
months.size = 14,
orientation = "portrait")
# Aulas práticas no CCA
events[c(48, 69, 90, 111, 125, 132)] <- "3: Aulas práticas (análises)\nCCA\nC: 10:10-11:50\nA: 13:30-15:10\nB: 15:20-17:00"
# Creating the calendar
calendR(year = 2024,
from ="2024-08-01",
to = "2024-12-31",
special.days = events,
special.col = metan::ggplot_color(length(unique(na.omit(events)))),
title = "FIT5306 - Bioestatística e Experimentação Agrícola",
subtitle = "Cronograma de aulas - 2024/01",
subtitle.size = 15,
mbg.col = "forestgreen",
months.col = "white",
# bg.img = "figs/calendr.png",
legend.pos = "bottom",
day.size = 4,
months.size = 14,
orientation = "portrait")
61+21
31*2+30*2
31*2+30*2+16
# Provas
events[c(82, 138)] <- "3: Avaliações"
# Creating the calendar
calendR(year = 2024,
from ="2024-08-01",
to = "2024-12-31",
special.days = events,
special.col = metan::ggplot_color(length(unique(na.omit(events)))),
title = "FIT5306 - Bioestatística e Experimentação Agrícola",
subtitle = "Cronograma de aulas - 2024/01",
subtitle.size = 15,
mbg.col = "forestgreen",
months.col = "white",
# bg.img = "figs/calendr.png",
legend.pos = "bottom",
day.size = 4,
months.size = 14,
orientation = "portrait")
# Seminário
events[139] <- "4: Apresentação\ndo projeto"
# Creating the calendar
calendR(year = 2024,
from ="2024-08-01",
to = "2024-12-31",
special.days = events,
special.col = metan::ggplot_color(length(unique(na.omit(events)))),
title = "FIT5306 - Bioestatística e Experimentação Agrícola",
subtitle = "Cronograma de aulas - 2024/01",
subtitle.size = 15,
mbg.col = "forestgreen",
months.col = "white",
# bg.img = "figs/calendr.png",
legend.pos = "bottom",
day.size = 4,
months.size = 14,
orientation = "portrait")
92+4
# # Feriados
events[c(96, 97)] <- "4: Semana Acadêmica"
# Creating the calendar
calendR(year = 2024,
from ="2024-08-01",
to = "2024-12-31",
special.days = events,
special.col = metan::ggplot_color(length(unique(na.omit(events)))),
title = "FIT5306 - Bioestatística e Experimentação Agrícola",
subtitle = "Cronograma de aulas - 2024/01",
subtitle.size = 15,
mbg.col = "forestgreen",
months.col = "white",
# bg.img = "figs/calendr.png",
legend.pos = "bottom",
day.size = 4,
months.size = 14,
orientation = "portrait")
122+17
events <- rep(NA, 139)
segundas <- seq(26, 138, by = 7)
tercas <- seq(27, 139, by = 7)
events[segundas] <- "1: Aulas teóricas\nCCA/ZDR 201\nA/B/C: 13:30-16:00"
events[tercas] <- "2: Aulas práticas (campo)\nRessacada\nC: 10:10-11:50\nA: 13:30-15:10\nB: 15:20-17:00"
# Aulas práticas no CCA
events[c(48, 69, 90, 111, 125, 132)] <- "3: Aulas práticas (análises)\nCCA\nC: 10:10-11:50\nA: 13:30-15:10\nB: 15:20-17:00"
# Provas
events[c(82, 138)] <- "3: Avaliações"
# Seminário
events[139] <- "4: Apresentação\ndo projeto"
# # Feriados
events[c(96, 97)] <- "4: Semana Acadêmica"
# Creating the calendar
calendR(year = 2024,
from ="2024-08-01",
to = "2024-12-31",
special.days = events,
special.col = metan::ggplot_color(length(unique(na.omit(events)))),
title = "FIT5306 - Bioestatística e Experimentação Agrícola",
subtitle = "Cronograma de aulas - 2024/01",
subtitle.size = 15,
mbg.col = "forestgreen",
months.col = "white",
# bg.img = "figs/calendr.png",
legend.pos = "bottom",
day.size = 4,
months.size = 14,
orientation = "portrait")
seq(26, 138, by = 7)
122+21
events <- rep(NA, 143)
events <- rep(NA, 143)
segundas <- seq(26, 143, by = 7)
tercas <- seq(27, 143, by = 7)
events[segundas] <- "1: Aulas teóricas\nCCA/ZDR 201\nA/B/C: 13:30-16:00"
events[tercas] <- "2: Aulas práticas (campo)\nRessacada\nC: 10:10-11:50\nA: 13:30-15:10\nB: 15:20-17:00"
# Aulas práticas no CCA
events[c(48, 69, 90, 111, 125, 132)] <- "3: Aulas práticas (análises)\nCCA\nC: 10:10-11:50\nA: 13:30-15:10\nB: 15:20-17:00"
# Provas
events[c(82, 138)] <- "3: Avaliações"
# Seminário
events[139] <- "4: Apresentação\ndo projeto"
# # Feriados
events[c(96, 97)] <- "4: Semana Acadêmica"
# Creating the calendar
calendR(year = 2024,
from ="2024-08-01",
to = "2024-12-31",
special.days = events,
special.col = metan::ggplot_color(length(unique(na.omit(events)))),
title = "FIT5306 - Bioestatística e Experimentação Agrícola",
subtitle = "Cronograma de aulas - 2024/01",
subtitle.size = 15,
mbg.col = "forestgreen",
months.col = "white",
# bg.img = "figs/calendr.png",
legend.pos = "bottom",
day.size = 4,
months.size = 14,
orientation = "portrait")
length(unique(na.omit(events)))
#| code-fold: true
#| code-summary: "Clique aqui e veja como o calendário foi feito!"
#| out-width: "100%"
#| fig-width: 8
#| fig-height: 7
#| warning: false
#| message: false
library(calendR)
# tutorial calendR
# https://r-coder.com/calendar-plot-r/
events <- rep(NA, 153)
segundas <- seq(26, 152, by = 7)
tercas <- seq(27, 153, by = 7)
events[segundas] <- "1: Aulas teóricas\nCCA/ZDR 201\nA/B/C: 13:30-16:00"
events[tercas] <- "2: Aulas práticas (campo)\nRessacada\nC: 10:10-11:50\nA: 13:30-15:10\nB: 15:20-17:00"
# Aulas práticas no CCA
events[c(48, 69, 90, 111, 125, 132)] <- "3: Aulas práticas (análises)\nCCA\nC: 10:10-11:50\nA: 13:30-15:10\nB: 15:20-17:00"
# Provas
events[c(82, 138)] <- "3: Avaliações"
# Seminário
events[139] <- "4: Apresentação\ndo projeto"
# # Feriados
events[c(96, 97)] <- "4: Semana Acadêmica"
# Creating the calendar
calendR(year = 2024,
from ="2024-08-01",
to = "2024-12-31",
special.days = events,
special.col = metan::ggplot_color(length(unique(na.omit(events)))),
title = "FIT5306 - Bioestatística e Experimentação Agrícola",
subtitle = "Cronograma de aulas - 2024/01",
subtitle.size = 15,
mbg.col = "forestgreen",
months.col = "white",
# bg.img = "figs/calendr.png",
legend.pos = "bottom",
day.size = 4,
months.size = 14,
orientation = "portrait")
# ggplot2::ggsave("calendario.jpg",
#                 width = 8,
#                 height = 8)
# Creating the calendar
calendR(year = 2024,
from ="2024-08-01",
to = "2024-12-21",
special.days = events,
special.col = metan::ggplot_color(length(unique(na.omit(events)))),
title = "FIT5306 - Bioestatística e Experimentação Agrícola",
subtitle = "Cronograma de aulas - 2024/01",
subtitle.size = 15,
mbg.col = "forestgreen",
months.col = "white",
# bg.img = "figs/calendr.png",
legend.pos = "bottom",
day.size = 4,
months.size = 14,
orientation = "portrait")
# Creating the calendar
calendR(year = 2024,
from ="2024-08-01",
to = "2024-12-31",
special.days = events,
special.col = metan::ggplot_color(length(unique(na.omit(events)))),
title = "FIT5306 - Bioestatística e Experimentação Agrícola",
subtitle = "Cronograma de aulas - 2024/01",
subtitle.size = 15,
mbg.col = "forestgreen",
months.col = "white",
# bg.img = "figs/calendr.png",
legend.pos = "bottom",
day.size = 4,
months.size = 14,
orientation = "portrait")
122+21
events <- rep(NA, 143)
segundas <- seq(26, 143, by = 7)
segundas
length(segundas)
seq(26, 152, by = 7)
122+16
events <- rep(NA, 143)
segundas <- seq(26, 138, by = 7)
tercas <- seq(27, 139, by = 7)
events[segundas] <- "1: Aulas teóricas\nCCA/ZDR 201\nA/B/C: 13:30-16:00"
events[tercas] <- "2: Aulas práticas (campo)\nRessacada\nC: 10:10-11:50\nA: 13:30-15:10\nB: 15:20-17:00"
# Aulas práticas no CCA
events[c(48, 69, 90, 111, 125, 132)] <- "3: Aulas práticas (análises)\nCCA\nC: 10:10-11:50\nA: 13:30-15:10\nB: 15:20-17:00"
# Provas
events[c(82, 138)] <- "3: Avaliações"
# Seminário
events[139] <- "4: Apresentação\ndo projeto"
# # Feriados
events[c(96, 97)] <- "4: Semana Acadêmica"
# Creating the calendar
calendR(year = 2024,
from ="2024-08-01",
to = "2024-12-31",
special.days = events,
special.col = metan::ggplot_color(length(unique(na.omit(events)))),
title = "FIT5306 - Bioestatística e Experimentação Agrícola",
subtitle = "Cronograma de aulas - 2024/01",
subtitle.size = 15,
mbg.col = "forestgreen",
months.col = "white",
# bg.img = "figs/calendr.png",
legend.pos = "bottom",
day.size = 4,
months.size = 14,
orientation = "portrait")
# Creating the calendar
calendR(year = 2024,
from ="2024-08-01",
to = "2024-12-31",
# special.days = events,
special.col = metan::ggplot_color(length(unique(na.omit(events)))),
title = "FIT5306 - Bioestatística e Experimentação Agrícola",
subtitle = "Cronograma de aulas - 2024/01",
subtitle.size = 15,
mbg.col = "forestgreen",
months.col = "white",
# bg.img = "figs/calendr.png",
legend.pos = "bottom",
day.size = 4,
months.size = 14,
orientation = "portrait")
# Creating the calendar
calendR(year = 2024,
from ="2024-08-01",
to = "2024-12-31",
special.days = events,
# special.col = metan::ggplot_color(length(unique(na.omit(events)))),
title = "FIT5306 - Bioestatística e Experimentação Agrícola",
subtitle = "Cronograma de aulas - 2024/01",
subtitle.size = 15,
mbg.col = "forestgreen",
months.col = "white",
# bg.img = "figs/calendr.png",
legend.pos = "bottom",
day.size = 4,
months.size = 14,
orientation = "portrait")
seq(27, 139, by = 7)
length(tercas)
length(segundas)
tercas
events <- rep(NA, 153)
segundas <- seq(26, 138, by = 7)
tercas <- seq(27, 139, by = 7)
events[segundas] <- "1: Aulas teóricas\nCCA/ZDR 201\nA/B/C: 13:30-16:00"
events[tercas] <- "2: Aulas práticas (campo)\nRessacada\nC: 10:10-11:50\nA: 13:30-15:10\nB: 15:20-17:00"
# Aulas práticas no CCA
events[c(48, 69, 90, 111, 125, 132)] <- "3: Aulas práticas (análises)\nCCA\nC: 10:10-11:50\nA: 13:30-15:10\nB: 15:20-17:00"
# Provas
events[c(82, 138)] <- "3: Avaliações"
# Seminário
events[139] <- "4: Apresentação\ndo projeto"
# # Feriados
events[c(96, 97)] <- "4: Semana Acadêmica"
# Creating the calendar
calendR(year = 2024,
from ="2024-08-01",
to = "2024-12-31",
special.days = events,
# special.col = metan::ggplot_color(length(unique(na.omit(events)))),
title = "FIT5306 - Bioestatística e Experimentação Agrícola",
subtitle = "Cronograma de aulas - 2024/01",
subtitle.size = 15,
mbg.col = "forestgreen",
months.col = "white",
# bg.img = "figs/calendr.png",
legend.pos = "bottom",
day.size = 4,
months.size = 14,
orientation = "portrait")
length(unique(na.omit(special.days)))
length(unique(na.omit(events)))
# Creating the calendar
calendR(year = 2024,
from ="2024-08-01",
to = "2024-12-31",
special.days = events,
special.col = metan::ggplot_color(length(unique(na.omit(events)))),
title = "FIT5306 - Bioestatística e Experimentação Agrícola",
subtitle = "Cronograma de aulas - 2024/01",
subtitle.size = 15,
mbg.col = "forestgreen",
months.col = "white",
# bg.img = "figs/calendr.png",
legend.pos = "bottom",
day.size = 4,
months.size = 14,
orientation = "portrait")
# Creating the calendar
calendR(year = 2024,
from ="2024-08-01",
to = "2024-12-31",
special.days = events,
special.col = metan::ggplot_color(length(unique(na.omit(events)))),
title = "FIT5306 - Bioestatística e Experimentação Agrícola",
subtitle = "Cronograma de aulas - 2024/02",
subtitle.size = 15,
mbg.col = "forestgreen",
months.col = "white",
# bg.img = "figs/calendr.png",
legend.pos = "bottom",
day.size = 4,
months.size = 14,
orientation = "portrait")
69+7
# Aulas práticas no CCA
events[c(48, 69, 76, 90, 111, 125, 132)] <- "3: Aulas práticas (análises)\nCCA\nC: 10:10-11:50\nA: 13:30-15:10\nB: 15:20-17:00"
# Creating the calendar
calendR(year = 2024,
from ="2024-08-01",
to = "2024-12-31",
special.days = events,
special.col = metan::ggplot_color(length(unique(na.omit(events)))),
title = "FIT5306 - Bioestatística e Experimentação Agrícola",
subtitle = "Cronograma de aulas - 2024/02",
subtitle.size = 15,
mbg.col = "forestgreen",
months.col = "white",
# bg.img = "figs/calendr.png",
legend.pos = "bottom",
day.size = 4,
months.size = 14,
orientation = "portrait")
setwd("D:/Desktop/UFSC/aulas/classes/FIT5306")
metan::open_wd()
ggplot2::ggsave("calendario.jpg",
width = 8,
height = 8)
# Chunk 1
library(tidyverse)
library(metan)
# Chunk 2
altura <- c(245, 250, 269, 280, 262)
mean(altura)
# Chunk 3
library(metan)
hmean(c(80, 120))
# Chunk 4
altura <- c(245, 250, 269, 280, 262)
# Média
(media <- mean(altura))
# Mediana
# Ordenar os dados
sort(altura)
# Calcular a mediana
(mediana <- median(altura))
# Chunk 5
(extremos <- range(altura))
(amplitude <- extremos[2] - extremos[1])
# Chunk 6
(desvios <- altura - media)
# Chunk 7
df <- data.frame(pessoa = paste("Planta", 1:5),
altura = altura,
altura_media = media,
desvio = desvios)
ggplot(df, aes(x = altura, y = pessoa)) +
geom_point(color = "blue",
size = 3) +
geom_segment(aes(x = media,
xend = altura,
y = pessoa,
yend = pessoa)) +
geom_vline(xintercept = media, linetype = 2, color = "red") +
geom_text(aes(x = altura, y = pessoa, label = round(desvio, digits = 3),
hjust = ifelse(desvio < 0, 1.5, -0.5))) +
scale_x_continuous(limits = c(230, 300)) +
theme(panel.grid.minor = element_blank()) +
labs(x = "Altura da planta (cm)",
y = "Planta")
# Chunk 8
sum(desvios) |> round()
# Chunk 9
# soma dos desvios em módulo
(somadesv <- desvios |> abs() |> sum())
# desvio médio
somadesv / 5
# Chunk 10
# Desvios ao quadrado
(desvq <- desvios ^ 2)
# soma dos desvios ao quadrado
(somadesvq <- sum(desvq))
# divisão por n - 1
(var_altura <- somadesvq / 4)
# Chunk 11
var(altura)
# Chunk 12
(desv_altura <- sqrt(var_altura))
# utilizando a função sd()
sd(altura)
# Chunk 13
(altura_m <- altura / 100)
(desv_altura_m <- sd(altura_m))
# Chunk 14
# coeficiente de variação da variável em centímetros
(cv_altura <- desv_altura / media * 100)
# coeficiente de variação da variável em metros
(cv_altura2 <- desv_altura_m / mean(altura_m) * 100)
# Chunk 15
CV <- function(dados){
if(!class(dados) == "numeric"){
stop("Os dados precisam ser numéricos")
} #Indica que os dados devem ser numéricos
media <- mean(dados)
sd <- sd(dados)
CV <- (sd/media) * 100
return(CV) # Valor que será retornado pela função
}
CV(altura)
# Chunk 16
(epm <- desv_altura / sqrt(5))
# Chunk 17
library(metan)
desc_stat(altura, stats = "all") |> as.data.frame()
# estatísticas vistas neste material
desc_stat(altura,
stats = c("mean, median, range, ave.dev, var.amo, sd.amo, cv, se")) |>
as.data.frame()
# Chunk 18
library(rio)
# link dos dados
link <- "https://docs.google.com/spreadsheets/d/18aXD_2ISvzB8h8_kgOfSBbr9a9d9pT0QVazt-KjVLRw/edit#gid=0"
# função para importar os dados
df <-
import(link, dec = ",") |>
as_character(1:2)
# estrutura dos dados
str(df)
# primeiras linhas
head(df)
