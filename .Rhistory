ne_countries(returnclass = "sf") |>
left_join(df_stat_pais,
by = join_by(admin == area))
res <- anti_join(world, df_stat_pais,
by = join_by(admin == area))
res$admin
world <-
ne_countries(returnclass = "sf")
res <- anti_join(world, df_stat_pais,
by = join_by(admin == area))
res$admin
df_stat_pais_certo <-
df_stat_pais |>
mutate(area = case_when(
area == "Russian Federation" ~ "Russia",
area == "Viet Nam" ~ "Vietnam",
area == "Bolivia (Plurinational State of)" ~ "Bolivia",
area == "Venezuela (Bolivarian Republic of)" ~ "Venezuela",
TRUE ~ area
))
world <-
world |>
left_join(df_stat_pais_certo,
by = join_by(admin == area)) |>
mutate(a2000 = ifelse(admin %in% c("United States of America", "China", "Brazil"), a2000, NA),
a2020 = ifelse(admin %in% c("United States of America", "China", "India"), a2020, NA))
# Mapa temático 2000
ggplot(data = world) +
geom_sf(aes(fill = a2000)) +
scale_fill_viridis_c(na.value = "white") +
ggthemes::theme_map()
# Chunk 1
library(rio)
library(tidyverse)
library(rnaturalearth)
library(metan)
setwd("D:/Desktop/RGV410046/data/desafio_20232")
# Chunk 2
df2000 <- import("dados_2000_atualizado.xlsx")
df2020 <-
import("dados_2020_atualizado.xlsx") |>
colnames_to_lower() |>
rename(emission = value)
# Chunk 3
df2000long <-
df2000 |>
pivot_longer(-Area,
names_to = "item",
values_to = "emission") |>
colnames_to_lower() |>
mutate(year = 2000, .before = "emission")
df_junto <- bind_rows(df2000long, df2020)
df_wider <-
pivot_wider(df_junto,
names_from = year,
values_from = emission,
names_prefix = "a")
# Chunk 4
# mínimo e máximo dentro de cada país
df_stat_pais <-
df_junto |>
group_by(area, year) |>
summarise(across(emission,
.fns = \(x){sum(x, na.rm = TRUE)}),
.groups = "drop") |>
pivot_wider(names_from = year,
values_from = emission,
names_prefix = "a") |>
filter(!str_detect(area, "China,"))
knitr::kable(df_stat_pais)
#máximos e mínimos (considerando o total dos países)
df_stat_geral <-
df_stat_pais |>
summarise(across(a2000:a2020,
.fns = list(total = \(x){sum(x, na.rm = TRUE)},
max = \(x){max(x, na.rm = TRUE)},
min = \(x){min(x, na.rm = TRUE)})))
knitr::kable(df_stat_geral)
# Chunk 5
# top3 paises
top3_pais2000 <-
df_stat_pais |>
select(-a2020) |>
slice_max(a2000, n = 3)
knitr::kable(top3_pais2000)
top3_pais2020 <-
df_stat_pais |>
select(-a2000) |>
slice_max(a2020, n = 3)
knitr::kable(top3_pais2020)
# Chunk 6
world <-
ne_countries(returnclass = "sf")
res <- anti_join(world, df_stat_pais,
by = join_by(admin == area))
res$admin
df_stat_pais_certo <-
df_stat_pais |>
mutate(area = case_when(
area == "Russian Federation" ~ "Russia",
area == "Viet Nam" ~ "Vietnam",
area == "Bolivia (Plurinational State of)" ~ "Bolivia",
area == "Venezuela (Bolivarian Republic of)" ~ "Venezuela",
TRUE ~ area
))
world <-
world |>
left_join(df_stat_pais_certo,
by = join_by(admin == area)) |>
mutate(a2000 = ifelse(admin %in% c("United States of America", "China", "Brazil"), a2000, NA),
a2020 = ifelse(admin %in% c("United States of America", "China", "India"), a2020, NA))
# Mapa temático 2000
ggplot(data = world) +
geom_sf(aes(fill = a2000)) +
scale_fill_viridis_c(na.value = "white") +
ggthemes::theme_map()
# Mapa temático 2020
ggplot(data = world) +
geom_sf(aes(fill = a2020)) +
scale_fill_viridis_c(na.value = "white") +
ggthemes::theme_map()
# Chunk 7
# soma por atividade, em cada ano
df_stat_atividade <-
df_junto |>
group_by(item, year) |>
summarise(across(emission,
.fns = \(x){sum(x, na.rm = TRUE)}),
.groups = "drop") |>
pivot_wider(names_from = year,
values_from = emission,
names_prefix = "a")
df_aumento_atividade <-
df_stat_atividade |>
mutate(mudanca = (a2020 - a2000) / abs(a2000) * 100) |>
filter(!mudanca  %in% c(-Inf, Inf) )
# Atividades com mais emissão em 2000
p1 <-
ggplot(df_aumento_atividade |>
slice_max(a2000, n = 10),
aes(x = reorder(item, -a2000), y = a2000)) +
geom_col(fill = "salmon") +
theme_bw(base_size = 14) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)) +
labs(x = "Atividade",
y = "Emissão total") +
scale_y_continuous(labels = scales::label_number(accuracy = 1),
limits = c(0, 5e7))
p2 <-
ggplot(df_aumento_atividade |>
slice_max(a2020, n = 10),
aes(x = reorder(item, -a2020), y = a2020)) +
geom_col(fill = "salmon") +
theme_bw(base_size = 14) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)) +
labs(x = "Atividade",
y = "Emissão total",
title = "Emissões em 2020") +
scale_y_continuous(labels = scales::label_number(accuracy = 1),
limits = c(0, 5e7))
arrange_ggplot(p1, p2,
tag_levels = "a")
df_aumento_pais <-
df_stat_pais |>
mutate(mudanca = (a2020 - a2000) / abs(a2000) * 100) |>
filter(!mudanca  %in% c(-Inf, Inf))
# Maiores aumentos
df_aumento_pais |>
slice_max(mudanca, n = 3) |>
knitr::kable()
# Maiores reducoes
df_aumento_pais |>
slice_min(mudanca, n = 3) |>
knitr::kable()
library(tinytex)
tinytex::is_tinytex()
# Chunk 1
library(rio)
library(tidyverse)
library(rnaturalearth)
library(metan)
setwd("D:/Desktop/RGV410046/data/desafio_20232")
# Chunk 2
df2000 <- import("dados_2000_atualizado.xlsx")
df2020 <-
import("dados_2020_atualizado.xlsx") |>
colnames_to_lower() |>
rename(emission = value)
# Chunk 3
df2000long <-
df2000 |>
pivot_longer(-Area,
names_to = "item",
values_to = "emission") |>
colnames_to_lower() |>
mutate(year = 2000, .before = "emission")
df_junto <- bind_rows(df2000long, df2020)
df_wider <-
pivot_wider(df_junto,
names_from = year,
values_from = emission,
names_prefix = "a")
# Chunk 4
# mínimo e máximo dentro de cada país
df_stat_pais <-
df_junto |>
group_by(area, year) |>
summarise(across(emission,
.fns = \(x){sum(x, na.rm = TRUE)}),
.groups = "drop") |>
pivot_wider(names_from = year,
values_from = emission,
names_prefix = "a") |>
filter(!str_detect(area, "China,"))
knitr::kable(df_stat_pais)
#máximos e mínimos (considerando o total dos países)
df_stat_geral <-
df_stat_pais |>
summarise(across(a2000:a2020,
.fns = list(total = \(x){sum(x, na.rm = TRUE)},
max = \(x){max(x, na.rm = TRUE)},
min = \(x){min(x, na.rm = TRUE)})))
knitr::kable(df_stat_geral)
# Chunk 5
# top3 paises
top3_pais2000 <-
df_stat_pais |>
select(-a2020) |>
slice_max(a2000, n = 3)
knitr::kable(top3_pais2000)
top3_pais2020 <-
df_stat_pais |>
select(-a2000) |>
slice_max(a2020, n = 3)
knitr::kable(top3_pais2020)
# Chunk 6
world <-
ne_countries(returnclass = "sf")
res <- anti_join(world, df_stat_pais,
by = join_by(admin == area))
res$admin
df_stat_pais_certo <-
df_stat_pais |>
mutate(area = case_when(
area == "Russian Federation" ~ "Russia",
area == "Viet Nam" ~ "Vietnam",
area == "Bolivia (Plurinational State of)" ~ "Bolivia",
area == "Venezuela (Bolivarian Republic of)" ~ "Venezuela",
TRUE ~ area
))
world <-
world |>
left_join(df_stat_pais_certo,
by = join_by(admin == area)) |>
mutate(a2000 = ifelse(admin %in% c("United States of America", "China", "Brazil"), a2000, NA),
a2020 = ifelse(admin %in% c("United States of America", "China", "India"), a2020, NA))
# Mapa temático 2000
ggplot(data = world) +
geom_sf(aes(fill = a2000)) +
scale_fill_viridis_c(na.value = "white") +
ggthemes::theme_map()
# Mapa temático 2020
ggplot(data = world) +
geom_sf(aes(fill = a2020)) +
scale_fill_viridis_c(na.value = "white") +
ggthemes::theme_map()
# Chunk 7
# soma por atividade, em cada ano
df_stat_atividade <-
df_junto |>
group_by(item, year) |>
summarise(across(emission,
.fns = \(x){sum(x, na.rm = TRUE)}),
.groups = "drop") |>
pivot_wider(names_from = year,
values_from = emission,
names_prefix = "a")
df_aumento_atividade <-
df_stat_atividade |>
mutate(mudanca = (a2020 - a2000) / abs(a2000) * 100) |>
filter(!mudanca  %in% c(-Inf, Inf) )
# Atividades com mais emissão em 2000
p1 <-
ggplot(df_aumento_atividade |>
slice_max(a2000, n = 10),
aes(x = reorder(item, -a2000), y = a2000)) +
geom_col(fill = "salmon") +
theme_bw(base_size = 14) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)) +
labs(x = "Atividade",
y = "Emissão total") +
scale_y_continuous(labels = scales::label_number(accuracy = 1),
limits = c(0, 5e7))
p2 <-
ggplot(df_aumento_atividade |>
slice_max(a2020, n = 10),
aes(x = reorder(item, -a2020), y = a2020)) +
geom_col(fill = "salmon") +
theme_bw(base_size = 14) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)) +
labs(x = "Atividade",
y = "Emissão total",
title = "Emissões em 2020") +
scale_y_continuous(labels = scales::label_number(accuracy = 1),
limits = c(0, 5e7))
arrange_ggplot(p1, p2,
tag_levels = "a")
df_aumento_pais |>
slice_max(mudanca, n = 3)
library(AgroR)
data(cloro)
cloro
FAT2DBC(f1, f2, bloco, resp, ylab="Number of nodules", legend = "Stages")
attach(cloro)
f1
FAT2DBC(f1, f2, bloco, resp, ylab="Number of nodules", legend = "Stages")
# Chunk 1
library(rio)
library(tidyverse)
library(rnaturalearth)
library(metan)
setwd("D:/Desktop/RGV410046/data/desafio_20232")
# Chunk 2
df2000 <- import("dados_2000_atualizado.xlsx")
df2020 <-
import("dados_2020_atualizado.xlsx") |>
colnames_to_lower() |>
rename(emission = value)
# Chunk 3
df2000long <-
df2000 |>
pivot_longer(-Area,
names_to = "item",
values_to = "emission") |>
colnames_to_lower() |>
mutate(year = 2000, .before = "emission")
df_junto <- bind_rows(df2000long, df2020)
df_wider <-
pivot_wider(df_junto,
names_from = year,
values_from = emission,
names_prefix = "a")
# Chunk 4
# mínimo e máximo dentro de cada país
df_stat_pais <-
df_junto |>
group_by(area, year) |>
summarise(across(emission,
.fns = \(x){sum(x, na.rm = TRUE)}),
.groups = "drop") |>
pivot_wider(names_from = year,
values_from = emission,
names_prefix = "a") |>
filter(!str_detect(area, "China,"))
knitr::kable(df_stat_pais)
#máximos e mínimos (considerando o total dos países)
df_stat_geral <-
df_stat_pais |>
summarise(across(a2000:a2020,
.fns = list(total = \(x){sum(x, na.rm = TRUE)},
max = \(x){max(x, na.rm = TRUE)},
min = \(x){min(x, na.rm = TRUE)})))
knitr::kable(df_stat_geral)
# Chunk 5
# top3 paises
top3_pais2000 <-
df_stat_pais |>
select(-a2020) |>
slice_max(a2000, n = 3)
knitr::kable(top3_pais2000)
top3_pais2020 <-
df_stat_pais |>
select(-a2000) |>
slice_max(a2020, n = 3)
knitr::kable(top3_pais2020)
world <-
ne_countries(returnclass = "sf")
res <- anti_join(world, df_stat_pais,
by = join_by(admin == area))
res$admin
df_stat_pais_certo <-
df_stat_pais |>
mutate(area = case_when(
area == "Russian Federation" ~ "Russia",
area == "Viet Nam" ~ "Vietnam",
area == "Bolivia (Plurinational State of)" ~ "Bolivia",
area == "Venezuela (Bolivarian Republic of)" ~ "Venezuela",
TRUE ~ area
))
world <-
world |>
left_join(df_stat_pais_certo,
by = join_by(admin == area)) |>
mutate(a2000 = ifelse(admin %in% c("United States of America", "China", "Brazil"), a2000, NA),
a2020 = ifelse(admin %in% c("United States of America", "China", "India"), a2020, NA))
world <-
world |>
left_join(df_stat_pais_certo,
by = join_by(admin == area))
# Mapa temático 2000
ggplot(data = world) +
geom_sf(aes(fill = a2000)) +
scale_fill_viridis_c(na.value = "white") +
ggthemes::theme_map()
View(world)
world <-
ne_countries(returnclass = "sf")
res <- anti_join(world, df_stat_pais,
by = join_by(admin == area))
res$admin
df_stat_pais_certo <-
df_stat_pais |>
mutate(area = case_when(
area == "Russian Federation" ~ "Russia",
area == "Viet Nam" ~ "Vietnam",
area == "Bolivia (Plurinational State of)" ~ "Bolivia",
area == "Venezuela (Bolivarian Republic of)" ~ "Venezuela",
TRUE ~ area
))
world |>
left_join(df_stat_pais_certo,
by = join_by(admin == area))
world <-
world |>
left_join(df_stat_pais_certo,
by = join_by(admin == area))
# Mapa temático 2000
ggplot(data = world) +
geom_sf(aes(fill = a2000)) +
scale_fill_viridis_c(na.value = "white") +
ggthemes::theme_map()
world <-
world |>
left_join(df_stat_pais_certo,
by = join_by(admin == area))
# Mapa temático 2000
ggplot(data = world) +
geom_sf(aes(fill = a2000)) +
scale_fill_viridis_c(na.value = "white") +
ggthemes::theme_map()
world <-
ne_countries(returnclass = "sf")
res <- anti_join(world, df_stat_pais,
by = join_by(admin == area))
res$admin
df_stat_pais_certo <-
df_stat_pais |>
mutate(area = case_when(
area == "Russian Federation" ~ "Russia",
area == "Viet Nam" ~ "Vietnam",
area == "Bolivia (Plurinational State of)" ~ "Bolivia",
area == "Venezuela (Bolivarian Republic of)" ~ "Venezuela",
TRUE ~ area
))
world |>
left_join(df_stat_pais_certo,
by = join_by(admin == area))
world <-
world |>
left_join(df_stat_pais_certo,
by = join_by(admin == area))
# Mapa temático 2000
ggplot(data = world) +
geom_sf(aes(fill = a2000)) +
scale_fill_viridis_c(na.value = "white") +
ggthemes::theme_map()
# Mapa temático 2000
ggplot(data = world) +
geom_sf(aes(fill = a2000)) +
scale_fill_viridis_c(na.value = "white",
option = "s") +
ggthemes::theme_map()
# Mapa temático 2000
ggplot(data = world) +
geom_sf(aes(fill = a2000)) +
scale_fill_viridis_c(na.value = "white",
option = "inferno") +
ggthemes::theme_map()
# Mapa temático 2000
ggplot(data = world) +
geom_sf(aes(fill = a2000)) +
scale_fill_viridis_c(na.value = "white") +
ggthemes::theme_map()
# Mapa temático 2000
ggplot(data = world) +
geom_sf(aes(fill = a2000)) +
scale_fill_viridis_c(na.value = "white") +
ggthemes::theme_map() +
labs(fill = "Emissões")
# Mapa temático 2000
ggplot(data = world) +
geom_sf(aes(fill = a2000)) +
scale_fill_viridis_c(na.value = "white") +
ggthemes::theme_map() +
labs(fill = "Emissões") |>
plotly::ggplotly()
# Mapa temático 2000
p <-
ggplot(data = world) +
geom_sf(aes(fill = a2000)) +
scale_fill_viridis_c(na.value = "white") +
ggthemes::theme_map() +
labs(fill = "Emissões")
plotly::ggplotly(p)
mapview::mapview(world)
?mapview::mapview
mapview::mapview(world, zcol = a2000)
mapview::mapview(world, zcol = "a2000")
# usando o pacote mapview
mapview::mapview(world,
zcol = c("a2000", "a2020"),
layer.name = c("a2000", "a2020"))
