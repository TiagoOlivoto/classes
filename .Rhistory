ggplot(reg_ex, aes(DOSE, RG)) +
geom_smooth(se = FALSE, method = "lm") +
geom_point(size = 4, color = "blue") +
stat_poly_eq(formula = y ~ x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~~")),
coef.digits = 5) +
labs(x = "Dose de dejeto (m3/ha)",
y = "Rendimento de grãos (kg/ha)")
(pred <- b0 + b1 * x)
(pred2 <- predict(mod))
(pred2 <- predict(reg))
(res <- y - pred)
(sqres2 <- sum(res ^ 2))
(res2 <- residuals(mod))
(res2 <- residuals(reg))
(res <- y - pred)
(res2 <- residuals(reg))
(sqres2 <- sum(res ^ 2))
mutate(reg_ex,
predito = pred,
residual = res)
sum(res )
url <- "https://bit.ly/df_bioestat"
reg_ex <- import(url, sheet = "REG_EXERCICIO", setclass = "tbl")
reg_ex
p2 <-
ggplot(reg_ex, aes(DOSE, RG)) +
geom_smooth(se = FALSE, method = "lm") +
geom_point(size = 4, color = "blue") +
stat_poly_eq(formula = y ~ x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~~")),
coef.digits = 5) +
labs(x = "Dose de dejeto (m3/ha)",
y = "Rendimento de grãos (kg/ha)") +
scale_x_continuous(limits = c(0, 50))
p2
b0
p2 <-
ggplot(reg_ex, aes(DOSE, RG)) +
geom_smooth(se = FALSE, method = "lm") +
geom_point(size = 4, color = "blue") +
stat_poly_eq(formula = y ~ x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~~")),
coef.digits = 5) +
labs(x = "Dose de dejeto (m3/ha)",
y = "Rendimento de grãos (kg/ha)") +
scale_x_continuous(limits = c(0, 50)) +
geom_abline(intercept = b0,
slope = b1)
p2
p2 <-
ggplot(reg_ex, aes(DOSE, RG)) +
geom_abline(intercept = b0,
slope = b1) +
geom_smooth(se = FALSE, method = "lm") +
geom_point(size = 4, color = "blue") +
stat_poly_eq(formula = y ~ x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~~")),
coef.digits = 5) +
labs(x = "Dose de dejeto (m3/ha)",
y = "Rendimento de grãos (kg/ha)") +
scale_x_continuous(limits = c(0, 50)) +
scale_y_continuous(limits = c(6, 9))
p2
p2 <-
ggplot(reg_ex, aes(DOSE, RG)) +
geom_abline(intercept = b0,
slope = b1,
color = "red") +
geom_smooth(se = FALSE, method = "lm") +
geom_point(size = 4, color = "blue") +
stat_poly_eq(formula = y ~ x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~~")),
coef.digits = 5) +
labs(x = "Dose de dejeto (m3/ha)",
y = "Rendimento de grãos (kg/ha)") +
scale_x_continuous(limits = c(0, 50)) +
scale_y_continuous(limits = c(6, 9))
p1 + p2
library(ggpmisc) # adiciona a equação no gráfico
p1 <-
ggplot(reg_ex, aes(DOSE, RG)) +
geom_smooth(se = FALSE, method = "lm") +
geom_point(size = 4, color = "blue") +
stat_poly_eq(formula = y ~ x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~~")),
coef.digits = 5) +
labs(x = "Dose de dejeto (m3/ha)",
y = "Rendimento de grãos (kg/ha)")
p2 <-
ggplot(reg_ex, aes(DOSE, RG)) +
geom_abline(intercept = b0,
slope = b1,
color = "red") +
geom_smooth(se = FALSE, method = "lm") +
geom_point(size = 4, color = "blue") +
stat_poly_eq(formula = y ~ x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~~")),
coef.digits = 5) +
labs(x = "Dose de dejeto (m3/ha)",
y = "Rendimento de grãos (kg/ha)") +
scale_x_continuous(limits = c(0, 50)) +
scale_y_continuous(limits = c(6, 9))
p1 + p2
p2 <-
ggplot(reg_ex, aes(DOSE, RG)) +
geom_abline(intercept = b0,
slope = b1,
color = "red") +
geom_smooth(se = FALSE, method = "lm") +
geom_point(size = 4, color = "blue") +
stat_poly_eq(formula = y ~ x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~~")),
coef.digits = 5) +
labs(x = "Dose de dejeto (m3/ha)",
y = "Rendimento de grãos (kg/ha)") +
scale_x_continuous(limits = c(0, 50),
expand = c(0, 0.05)) +
scale_y_continuous(limits = c(6, 9))
p1 + p2
p2 <-
ggplot(reg_ex, aes(DOSE, RG)) +
geom_abline(intercept = b0,
slope = b1,
color = "red") +
geom_smooth(se = FALSE, method = "lm") +
geom_point(size = 4, color = "blue") +
stat_poly_eq(formula = y ~ x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~~")),
coef.digits = 5) +
labs(x = "Dose de dejeto (m3/ha)",
y = "Rendimento de grãos (kg/ha)") +
scale_x_continuous(limits = c(0, 50),
expand = expansion(c(0, 0.05))) +
scale_y_continuous(limits = c(6, 9))
p1 + p2
p2 <-
ggplot(reg_ex, aes(DOSE, RG)) +
geom_abline(intercept = b0,
slope = b1,
color = "red") +
geom_smooth(se = FALSE, method = "lm") +
geom_point(size = 4, color = "blue") +
stat_poly_eq(formula = y ~ x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~~")),
coef.digits = 5) +
labs(x = "Dose de dejeto (m3/ha)",
y = "Rendimento de grãos (kg/ha)") +
scale_x_continuous(limits = c(0, 50),
expand = expansion(c(0, 0.05)),
breaks = c(6, 6.155, 7, 8, 9)) +
scale_y_continuous(limits = c(6, 9))
p1 + p2
p2 <-
ggplot(reg_ex, aes(DOSE, RG)) +
geom_abline(intercept = b0,
slope = b1,
color = "red") +
geom_smooth(se = FALSE, method = "lm") +
geom_point(size = 4, color = "blue") +
stat_poly_eq(formula = y ~ x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~~")),
coef.digits = 5) +
labs(x = "Dose de dejeto (m3/ha)",
y = "Rendimento de grãos (kg/ha)") +
scale_x_continuous(limits = c(0, 50),
expand = expansion(c(0, 0.05))) +
scale_y_continuous(limits = c(6, 9),
breaks = c(6, 6.155, 7, 8, 9))
p1 + p2
p2 <-
ggplot(reg_ex, aes(DOSE, RG)) +
geom_abline(intercept = b0,
slope = b1,
color = "red") +
geom_smooth(se = FALSE, method = "lm") +
geom_point(size = 4, color = "blue") +
stat_poly_eq(formula = y ~ x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~~")),
coef.digits = 5) +
labs(x = "Dose de dejeto (m3/ha)",
y = "Rendimento de grãos (kg/ha)") +
scale_x_continuous(limits = c(0, 50),
expand = expansion(c(0, 0.05))) +
scale_y_continuous(limits = c(6, 9),
breaks = c(6, 6.155, 7, 8, 9)) +
theme(panel.grid.minor = element_blank())
p1 + p2
p1 <-
ggplot(reg_ex, aes(DOSE, RG)) +
geom_smooth(se = FALSE, method = "lm") +
geom_point(size = 4, color = "blue") +
stat_poly_eq(formula = y ~ x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~~")),
coef.digits = 5) +
labs(x = "Dose de dejeto (m3/ha)",
y = "Rendimento de grãos (kg/ha)",
title = "Rendimento de grãos em função da dose de dejeto")
p2 <-
ggplot(reg_ex, aes(DOSE, RG)) +
geom_abline(intercept = b0,
slope = b1,
color = "red") +
geom_smooth(se = FALSE, method = "lm") +
geom_point(size = 4, color = "blue") +
stat_poly_eq(formula = y ~ x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~~")),
coef.digits = 5) +
labs(x = "Dose de dejeto (m3/ha)",
y = "Rendimento de grãos (kg/ha)") +
scale_x_continuous(limits = c(0, 50),
expand = expansion(c(0, 0.05))) +
scale_y_continuous(limits = c(6, 9),
breaks = c(6, 6.155, 7, 8, 9)) +
theme(panel.grid.minor = element_blank())
p1 + p2
p2 <-
ggplot(reg_ex, aes(DOSE, RG)) +
geom_abline(intercept = b0,
slope = b1,
color = "red") +
geom_smooth(se = FALSE, method = "lm") +
geom_point(size = 4, color = "blue") +
stat_poly_eq(formula = y ~ x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~~")),
coef.digits = 5) +
labs(x = "Dose de dejeto (m3/ha)",
y = "Rendimento de grãos (kg/ha)",
title = "Compreendendo o intercept") +
scale_x_continuous(limits = c(0, 50),
expand = expansion(c(0, 0.05))) +
scale_y_continuous(limits = c(6, 9),
breaks = c(6, 6.155, 7, 8, 9)) +
theme(panel.grid.minor = element_blank())
p1 + p2
p2 <-
ggplot(reg_ex, aes(DOSE, RG)) +
geom_abline(intercept = b0,
slope = b1,
color = "red") +
geom_smooth(se = FALSE, method = "lm") +
geom_point(size = 4, color = "blue") +
stat_poly_eq(formula = y ~ x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~~")),
coef.digits = 5) +
labs(x = "Dose de dejeto (m3/ha)",
y = "Rendimento de grãos (kg/ha)",
title = expression(compreendendo~o~intercept~(beta[0]))) +
scale_x_continuous(limits = c(0, 50),
expand = expansion(c(0, 0.05))) +
scale_y_continuous(limits = c(6, 9),
breaks = c(6, 6.155, 7, 8, 9)) +
theme(panel.grid.minor = element_blank())
p1 + p2
p2 <-
ggplot(reg_ex, aes(DOSE, RG)) +
geom_abline(intercept = b0,
slope = b1,
color = "red") +
geom_smooth(se = FALSE, method = "lm") +
geom_point(size = 4, color = "blue") +
stat_poly_eq(formula = y ~ x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~~")),
coef.digits = 5) +
labs(x = "Dose de dejeto (m3/ha)",
y = "Rendimento de grãos (kg/ha)",
title = expression(Compreendendo~o~intercept~(beta[0]))) +
scale_x_continuous(limits = c(0, 50),
expand = expansion(c(0, 0.05))) +
scale_y_continuous(limits = c(6, 9),
breaks = c(6, 6.155, 7, 8, 9)) +
theme(panel.grid.minor = element_blank())
p1 + p2
p2 <-
ggplot(reg_ex, aes(DOSE, RG)) +
geom_abline(intercept = b0,
slope = b1,
color = "red") +
geom_smooth(se = FALSE, method = "lm") +
geom_point(size = 4, color = "blue") +
stat_poly_eq(formula = y ~ x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~~")),
coef.digits = 5) +
labs(x = expression(Doses~de~dejeto~(m^3~ha^{-1})),
y = "Rendimento de grãos (kg/ha)",
title = expression(Compreendendo~o~intercept~(beta[0]))) +
scale_x_continuous(limits = c(0, 50),
expand = expansion(c(0, 0.05))) +
scale_y_continuous(limits = c(6, 9),
breaks = c(6, 6.155, 7, 8, 9)) +
theme(panel.grid.minor = element_blank())
p1 + p2
p2 <-
ggplot(reg_ex, aes(DOSE, RG)) +
geom_abline(intercept = b0,
slope = b1,
color = "red") +
geom_smooth(se = FALSE, method = "lm") +
geom_point(size = 4, color = "blue") +
stat_poly_eq(formula = y ~ x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~~")),
coef.digits = 5) +
labs(x = expression(Doses~de~dejeto~(m^3~ha^{-1})),
y = expression(Rendimento~de~grãos~(t~ha^{-1})),
title = expression(Compreendendo~o~intercept~(beta[0]))) +
scale_x_continuous(limits = c(0, 50),
expand = expansion(c(0, 0.05))) +
scale_y_continuous(limits = c(6, 9),
breaks = c(6, 6.155, 7, 8, 9)) +
theme(panel.grid.minor = element_blank())
p1 + p2
p1 <-
ggplot(reg_ex, aes(DOSE, RG)) +
geom_smooth(se = FALSE, method = "lm") +
geom_point(size = 4, color = "blue") +
stat_poly_eq(formula = y ~ x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~~")),
coef.digits = 5) +
labs(x = expression(Doses~de~dejeto~(m^3~ha^{-1})),
y = expression(Rendimento~de~grãos~(t~ha^{-1})),
title = "Rendimento de grãos em função da dose de dejeto")
p2 <-
ggplot(reg_ex, aes(DOSE, RG)) +
geom_abline(intercept = b0,
slope = b1,
color = "red") +
geom_smooth(se = FALSE, method = "lm") +
geom_point(size = 4, color = "blue") +
stat_poly_eq(formula = y ~ x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~~")),
coef.digits = 5) +
labs(x = expression(Doses~de~dejeto~(m^3~ha^{-1})),
y = expression(Rendimento~de~grãos~(t~ha^{-1})),
title = expression(Compreendendo~o~intercept~(beta[0]))) +
scale_x_continuous(limits = c(0, 50),
expand = expansion(c(0, 0.05))) +
scale_y_continuous(limits = c(6, 9),
breaks = c(6, 6.155, 7, 8, 9)) +
theme(panel.grid.minor = element_blank())
p1 + p2
x <- c(0, 67.5, 135)
x <- c(0, 67.5, 135)
y <- c(2.2, 2.6, 2.92)
library(tidyverse)
ggplot(mapping = aes(x, y)) +
geom_point()
ggplot(mapping = aes(x, y)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(mapping = aes(x, y)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
ggplot(mapping = aes(x, y)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
geom_text(aes(label = y))
ggplot(mapping = aes(x, y)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
geom_text(aes(label = y),
vjust = -2)
ggplot(mapping = aes(x, y)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
geom_text(aes(label = y),
vjust = -2) +
scale_y_continuous(expand = 0.1)
ggplot(mapping = aes(x, y)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
geom_text(aes(label = y),
vjust = -2) +
scale_y_continuous(expand = expansion(0.1))
ggplot(mapping = aes(x, y)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
geom_text(aes(label = y),
vjust = -2) +
scale_y_continuous(expand = expansion(0.2))
ggplot(mapping = aes(x, y)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
geom_text(aes(label = y),
vjust = -2) +
scale_y_continuous(expand = expansion(0.2)) +
labs(x = "Dose de N",
y = "Rendimento (t/ha)")
ggplot(mapping = aes(x, y)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
geom_text(aes(label = y),
vjust = -2) +
scale_y_continuous(expand = expansion(0.2)) +
labs(x = "Dose de N",
y = "Rendimento (t/ha)") +
theme(panel.grid.minor = element_blank())
library(tidyverse)
library(metan)      # estatísticas descritivas
library(rio)        # importação/exportação de dados
library(AgroR)
library(broom)
url <- "https://bit.ly/df_bioestat"
reg_ex <- import(url, sheet = "REG_EXERCICIO", setclass = "tbl")
reg_ex
reg <- lm(RG ~ DOSE, data = reg_ex)
# coeficientes e R2
summary(reg)
# anova
anova(reg)
library(ggpmisc) # adiciona a equação no gráfico
p1 <-
ggplot(reg_ex, aes(DOSE, RG)) +
geom_smooth(se = FALSE, method = "lm") +
geom_point(size = 4, color = "blue") +
stat_poly_eq(formula = y ~ x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~~")),
coef.digits = 5) +
labs(x = expression(Doses~de~dejeto~(m^3~ha^{-1})),
y = expression(Rendimento~de~grãos~(t~ha^{-1})),
title = "Rendimento de grãos em função da dose de dejeto")
p2 <-
ggplot(reg_ex, aes(DOSE, RG)) +
geom_abline(intercept = b0,
slope = b1,
color = "red") +
geom_smooth(se = FALSE, method = "lm") +
geom_point(size = 4, color = "blue") +
stat_poly_eq(formula = y ~ x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~~")),
coef.digits = 5) +
labs(x = expression(Doses~de~dejeto~(m^3~ha^{-1})),
y = expression(Rendimento~de~grãos~(t~ha^{-1})),
title = expression(Compreendendo~o~intercept~(beta[0]))) +
scale_x_continuous(limits = c(0, 50),
expand = expansion(c(0, 0.05))) +
scale_y_continuous(limits = c(6, 9),
breaks = c(6, 6.155, 7, 8, 9)) +
theme(panel.grid.minor = element_blank())
p1 + p2
library(tidyverse)
library(metan)      # estatísticas descritivas
library(rio)        # importação/exportação de dados
library(AgroR)
library(broom)
DOSEN <- c(0, 50, 100, 150, 200, 250)
RG    <- c(7.1, 7.3, 7.66, 7.71, 7.62, 7.6)
df2 <- data.frame(DOSEN = DOSEN, RG = RG)
# modelo de regressão
mod2 <- lm(RG ~ poly(DOSEN, 2, raw = TRUE), data = df2)
summary(mod2)
# valores preditos
pred2 <-
df2 %>%
mutate(predito = predict(mod2),
residual = RG - predito)
pred2
# gráfico base
p1 <-
ggplot(df2, aes(DOSEN, RG)) +
geom_point(size = 4, color = "red") +
geom_smooth(se = FALSE,
method = "lm",
formula = y ~ poly(x, 2)) +
scale_x_continuous(breaks = DOSEN) +
labs(x = "Dose de N (Kg/ha)",
y = "Rendimento de grãos (t/ha)")
p1
# máxima eficiência técnica
# mod é o modelo quadrático ajustado
met <- function(mod){
b1 <- coef(mod)[[2]]
b2 <- coef(mod)[[3]]
res <- -b1 / (2 * b2)
return(res)
}
x_met <- met(mod2)
x_met
mee <- function(mod, px, py){
x_met <- met(mod)
mee <- x_met + px / (2 * coef(mod)[[3]] * py)
return(mee)
}
x_mee <- mee(mod2, 3, 1300)
x_mee
p1 +
labs(title = "Equação quadrática",
subtitle = "Trigângulo e cículo representam os pontos de MME e MET, respectivamente",
caption = "MME = Máxima eficiência econômica\n MET = máxima eficiência técnica") +
# Linhas e ponto da MET
geom_segment(aes(x = x_met, y = pred_met, xend = x_met, yend = 6.7)) +
geom_segment(aes(x = 0, y = pred_met, xend = x_met, yend = pred_met)) +
geom_point(aes(x = x_met, y = pred_met), shape = 19, size = 3, color = "blue") +
# Linhas e ponto da MEE
geom_segment(aes(x = x_mee, y = rg_mee, xend = x_mee, yend = 6.7), linetype = 2) +
geom_segment(aes(x = 0, y = rg_mee, xend = x_mee, yend = rg_mee), linetype = 2) +
geom_point(aes(x = x_mee, y = rg_mee), shape = 17, size = 3, color = "blue") +
# Equação no gráfico
geom_text(aes(0, 7.9,
label=(
paste(
expression("y = 7.075 + 0.007184x - 2,071e"^{-5}*"x"^2*"  R" ^2*" = 0,938 "))
)
),
hjust = 0,
size = 5,
col = "black",
parse = TRUE)
y <- c(2.2, 2.6, 2.92)
median(y)
y <- c(7.09, 7.37, 8.28, 8.32)
median(y)
mean(y)
